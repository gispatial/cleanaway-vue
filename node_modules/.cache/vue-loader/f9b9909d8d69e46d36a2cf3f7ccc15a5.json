{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/message/MessageDemo.vue?vue&type=style&index=0&id=2f54ed90&scoped=true&lang=css","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/message/MessageDemo.vue","mtime":1634589566275},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/css-loader/dist/cjs.js","mtime":1634585948787},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/postcss-loader/src/index.js","mtime":1634585949822},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmJ1dHRvbi5wLWJ1dHRvbiB7CiAgICBtYXJnaW4tcmlnaHQ6IC41cmVtOwp9CgoucC1pbnB1dHRleHQgewogICAgbWFyZ2luLXJpZ2h0OiAuNXJlbTsKfQo="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/message/MessageDemo.vue"],"names":[],"mappings":";AAwFA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB","file":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/message/MessageDemo.vue","sourceRoot":"","sourcesContent":["<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>Message</h1>\n                <p>Messages is used to display inline messages with various severities.</p>\n            </div>\n            <AppDemoActions />\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card\">\n                <h5>Severities</h5>\n                <Message severity=\"success\">Success Message Content</Message>\n                <Message severity=\"info\">Info Message Content</Message>\n                <Message severity=\"warn\">Warning Message Content</Message>\n                <Message severity=\"error\">Error Message Content</Message>\n\n                <h5>Dynamic</h5>\n                <Button label=\"Show\" @click=\"addMessages()\" />\n                <transition-group name=\"p-message\" tag=\"div\">\n                    <Message v-for=\"msg of messages\" :severity=\"msg.severity\" :key=\"msg.id\">{{msg.content}}</Message>\n                </transition-group>\n\n                <h5>Inline Messages</h5>\n                <p>Message component is used to display inline messages mostly within forms.</p>\n                <div class=\"p-grid\">\n                    <div class=\"p-col-12 p-md-3\">\n                        <InlineMessage severity=\"info\">Message Content</InlineMessage>\n                    </div>\n                    <div class=\"p-col-12 p-md-3\">\n                        <InlineMessage severity=\"success\">Message Content</InlineMessage>\n                    </div>\n                    <div class=\"p-col-12 p-md-3\">\n                        <InlineMessage severity=\"warn\">Message Content</InlineMessage>\n                    </div>\n                    <div class=\"p-col-12 p-md-3\">\n                        <InlineMessage severity=\"error\">Message Content</InlineMessage>\n                    </div>\n                </div>\n\n                <h5>Auto Dismiss</h5>\n                <Message severity=\"warn\" :life=\"3000\" :sticky=\"false\">This message will hide in 3 seconds.</Message>\n\n                <h5>Validation Message</h5>\n                <div class=\"p-formgroup-inline\" style=\"margin-bottom:.5rem\">\n                    <label for=\"username\" class=\"p-sr-only\">Username</label>\n                    <InputText id=\"username\" placeholder=\"Username\" class=\"p-invalid\" />\n                    <InlineMessage>Username is required</InlineMessage>\n                </div>\n                <div class=\"p-formgroup-inline\">\n                    <label for=\"email\" class=\"p-sr-only\">email</label>\n                    <InputText id=\"email\" placeholder=\"Email\" class=\"p-invalid\" />\n                    <InlineMessage />\n                </div>\n            </div>\n        </div>\n\n        <MessageDoc/>\n    </div>\n</template>\n\n<script>\nimport MessageDoc from './MessageDoc';\n\nexport default {\n    data() {\n        return {\n            messages: [],\n            count: 0\n        }\n    },\n    methods: {\n        addMessages() {\n            this.messages = [\n                {severity: 'info', content: 'Dynamic Info Message', id: this.count++},\n                {severity: 'success', content: 'Dynamic Success Message', id: this.count++},\n                {severity: 'warn', content: 'Dynamic Warning Message', id: this.count++}\n            ]\n        }\n    },\n    components: {\n        'MessageDoc': MessageDoc\n    }\n}\n</script>\n\n<style scoped>\nbutton.p-button {\n    margin-right: .5rem;\n}\n\n.p-inputtext {\n    margin-right: .5rem;\n}\n</style>\n"]}]}