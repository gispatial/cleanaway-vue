{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treetable/TreeTableDemo.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treetable/TreeTableDemo.vue","mtime":1634589566291},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBOb2RlU2VydmljZSBmcm9tICcuLi8uLi9zZXJ2aWNlL05vZGVTZXJ2aWNlJzsKaW1wb3J0IFRyZWVUYWJsZURvYyBmcm9tICcuL1RyZWVUYWJsZURvYyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIG5vZGVzOiBudWxsLAogICAgICAgICAgICBjb2x1bW5zOiBudWxsLAogICAgICAgICAgICBleHBhbmRlZEtleXM6IHt9CiAgICAgICAgfQogICAgfSwKICAgIG5vZGVTZXJ2aWNlOiBudWxsLAogICAgY3JlYXRlZCgpIHsKICAgICAgICB0aGlzLm5vZGVTZXJ2aWNlID0gbmV3IE5vZGVTZXJ2aWNlKCk7CgogICAgICAgIHRoaXMuY29sdW1ucyA9IFsKICAgICAgICAgICAge2ZpZWxkOiAnbmFtZScsIGhlYWRlcjogJ1ZpbicsIGV4cGFuZGVyOiB0cnVlfSwKICAgICAgICAgICAge2ZpZWxkOiAnc2l6ZScsIGhlYWRlcjogJ1NpemUnfSwKICAgICAgICAgICAge2ZpZWxkOiAndHlwZScsIGhlYWRlcjogJ1R5cGUnfQogICAgICAgIF07CiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICB0aGlzLm5vZGVTZXJ2aWNlLmdldFRyZWVUYWJsZU5vZGVzKCkudGhlbihkYXRhID0+IHRoaXMubm9kZXMgPSBkYXRhKTsKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgZXhwYW5kQWxsKCkgewogICAgICAgICAgICBmb3IgKGxldCBub2RlIG9mIHRoaXMubm9kZXMpIHsKICAgICAgICAgICAgICAgIHRoaXMuZXhwYW5kTm9kZShub2RlKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdGhpcy5leHBhbmRlZEtleXMgPSB7Li4udGhpcy5leHBhbmRlZEtleXN9OwogICAgICAgIH0sCiAgICAgICAgY29sbGFwc2VBbGwoKSB7CiAgICAgICAgICAgIHRoaXMuZXhwYW5kZWRLZXlzID0ge307CiAgICAgICAgfSwKICAgICAgICBleHBhbmROb2RlKG5vZGUpIHsKICAgICAgICAgICAgaWYgKG5vZGUuY2hpbGRyZW4gJiYgbm9kZS5jaGlsZHJlbi5sZW5ndGgpIHsKICAgICAgICAgICAgICAgIHRoaXMuZXhwYW5kZWRLZXlzW25vZGUua2V5XSA9IHRydWU7CgogICAgICAgICAgICAgICAgZm9yIChsZXQgY2hpbGQgb2Ygbm9kZS5jaGlsZHJlbikgewogICAgICAgICAgICAgICAgICAgIHRoaXMuZXhwYW5kTm9kZShjaGlsZCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9LAogICAgY29tcG9uZW50czogewogICAgICAgICdUcmVlVGFibGVEb2MnOiBUcmVlVGFibGVEb2MKICAgIH0KfQo="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treetable/TreeTableDemo.vue"],"names":[],"mappings":"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","file":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treetable/TreeTableDemo.vue","sourceRoot":"","sourcesContent":["<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>TreeTable</h1>\n                <p>TreeTable is used to display hierarchical data in tabular format.</p>\n            </div>\n            <AppDemoActions />\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card\">\n                <h5>Basic</h5>\n                <TreeTable :value=\"nodes\">\n                    <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                    <Column field=\"size\" header=\"Size\"></Column>\n                    <Column field=\"type\" header=\"Type\"></Column>\n                </TreeTable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Dynamic Columns</h5>\n                <TreeTable :value=\"nodes\">\n                    <Column v-for=\"col of columns\" :key=\"col.field\"\n                        :field=\"col.field\" :header=\"col.header\" :expander=\"col.expander\"></Column>\n                </TreeTable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Programmatic Control</h5>\n                <div style=\"margin-bottom: 1em\">\n                    <Button type=\"button\" icon=\"pi pi-plus\" label=\"Expand All\" @click=\"expandAll\" />\n                    <Button type=\"button\" icon=\"pi pi-minus\" label=\"Collapse All\" @click=\"collapseAll\" />\n                </div>\n                <TreeTable :value=\"nodes\" :expandedKeys=\"expandedKeys\">\n                    <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                    <Column field=\"size\" header=\"Size\"></Column>\n                    <Column field=\"type\" header=\"Type\"></Column>\n                </TreeTable>\n            </div>\n        </div>\n\n        <TreeTableDoc />\n    </div>\n</template>\n\n<script>\nimport NodeService from '../../service/NodeService';\nimport TreeTableDoc from './TreeTableDoc';\n\nexport default {\n    data() {\n        return {\n            nodes: null,\n            columns: null,\n            expandedKeys: {}\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n\n        this.columns = [\n            {field: 'name', header: 'Vin', expander: true},\n            {field: 'size', header: 'Size'},\n            {field: 'type', header: 'Type'}\n        ];\n    },\n    mounted() {\n        this.nodeService.getTreeTableNodes().then(data => this.nodes = data);\n    },\n    methods: {\n        expandAll() {\n            for (let node of this.nodes) {\n                this.expandNode(node);\n            }\n\n            this.expandedKeys = {...this.expandedKeys};\n        },\n        collapseAll() {\n            this.expandedKeys = {};\n        },\n        expandNode(node) {\n            if (node.children && node.children.length) {\n                this.expandedKeys[node.key] = true;\n\n                for (let child of node.children) {\n                    this.expandNode(child);\n                }\n            }\n        }\n    },\n    components: {\n        'TreeTableDoc': TreeTableDoc\n    }\n}\n</script>\n\n<style scoped>\nbutton {\n    margin-right: .5rem;\n}\n</style>"]}]}