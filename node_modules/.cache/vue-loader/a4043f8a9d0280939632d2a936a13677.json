{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/accordion/Accordion.vue?vue&type=style&index=0&id=2dde7ac1&lang=css","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/accordion/Accordion.vue","mtime":1634589566201},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/css-loader/dist/cjs.js","mtime":1634585948787},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/postcss-loader/src/index.js","mtime":1634585949822},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5wLWFjY29yZGlvbi1oZWFkZXItbGluayB7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIHVzZXItc2VsZWN0OiBub25lOwogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwp9CgoucC1hY2NvcmRpb24taGVhZGVyLWxpbms6Zm9jdXMgewogICAgei1pbmRleDogMTsKfQoKLnAtYWNjb3JkaW9uLWhlYWRlci10ZXh0IHsKICAgIGxpbmUtaGVpZ2h0OiAxOwp9Cg=="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/accordion/Accordion.vue"],"names":[],"mappings":";AA8IA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACzB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACd;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AAClB","file":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/accordion/Accordion.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class=\"p-accordion p-component\">\n        <div v-for=\"(tab,i) of tabs\" :key=\"getKey(tab,i)\" :class=\"getTabClass(i)\">\n            <div :class=\"getTabHeaderClass(tab, i)\">\n                <a role=\"tab\" class=\"p-accordion-header-link\" @click=\"onTabClick($event, tab, i)\" @keydown=\"onTabKeydown($event, tab, i)\" :tabindex=\"isTabDisabled(tab) ? null : '0'\"\n                    :aria-expanded=\"isTabActive(i)\" :id=\"getTabAriaId(i) + '_header'\" :aria-controls=\"getTabAriaId(i) + '_content'\">\n                    <span :class=\"getHeaderIcon(i)\"></span>\n                    <span class=\"p-accordion-header-text\" v-if=\"tab.props && tab.props.header\">{{tab.props.header}}</span>\n                    <component :is=\"tab.children.header\" v-if=\"tab.children && tab.children.header\"></component>\n                </a>\n            </div>\n            <transition name=\"p-toggleable-content\">\n                <div class=\"p-toggleable-content\" v-if=\"lazy ? isTabActive(i) : true\" v-show=\"lazy ? true: isTabActive(i)\"\n                    role=\"region\" :id=\"getTabAriaId(i) + '_content'\" :aria-labelledby=\"getTabAriaId(i) + '_header'\">\n                    <div class=\"p-accordion-content\">\n                        <component :is=\"tab\"></component>\n                    </div>\n                </div>\n            </transition>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {UniqueComponentId} from 'primevue/utils';\n\nexport default {\n    name: 'Accordion',\n    emits: ['tab-close', 'tab-open', 'update:activeIndex'],\n    props: {\n        multiple: {\n            type: Boolean,\n            default: false\n        },\n        activeIndex: {\n            type: [Number,Array],\n            default: null\n        },\n        lazy: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            d_activeIndex: this.activeIndex\n        }\n    },\n    watch: {\n        activeIndex(newValue) {\n            this.d_activeIndex = newValue;\n        }\n    },\n    methods: {\n        onTabClick(event, tab, i) {\n            if (!this.isTabDisabled(tab)) {\n                const active = this.isTabActive(i);\n                const eventName = active ? 'tab-close' : 'tab-open';\n\n                if (this.multiple) {\n                    if (active) {\n                        this.d_activeIndex = this.d_activeIndex.filter(index => index !== i);\n                    }\n                    else {\n                        if (this.d_activeIndex)\n                            this.d_activeIndex.push(i);\n                        else\n                            this.d_activeIndex = [i];\n                    }\n                }\n                else {\n                    this.d_activeIndex = this.d_activeIndex === i ? null : i;\n                }\n\n                this.$emit('update:activeIndex', this.d_activeIndex);\n\n                this.$emit(eventName, {\n                    originalEvent: event,\n                    index: i\n                });\n            }\n        },\n        onTabKeydown(event, tab, i) {\n            if (event.which === 13) {\n                this.onTabClick(event, i);\n            }\n        },\n        isTabActive(index) {\n            if (this.multiple)\n                return this.d_activeIndex && this.d_activeIndex.includes(index);\n            else\n                return index === this.d_activeIndex;\n        },\n        getKey(tab, i) {\n            return (tab.props && tab.props.header) ? tab.props.header : i;\n        },\n        isTabDisabled(tab) {\n            return tab.props && tab.props.disabled;\n        },\n        getTabClass(i) {\n            return ['p-accordion-tab', {'p-accordion-tab-active': this.isTabActive(i)}];\n        },\n        getTabHeaderClass(tab, i) {\n            return ['p-accordion-header', {'p-highlight': this.isTabActive(i), 'p-disabled': this.isTabDisabled(tab)}];\n        },\n        getTabAriaId(i) {\n            return this.ariaId + '_' + i;\n        },\n        getHeaderIcon(i) {\n            const active = this.isTabActive(i);\n            return ['p-accordion-toggle-icon pi', {'pi-chevron-right': !active, 'pi-chevron-down': active}];\n        },\n        isAccordionTab(child) {\n            return child.type.name === 'AccordionTab'\n        }\n    },\n    computed: {\n        tabs() {\n            const tabs = []\n            this.$slots.default().forEach(child => {\n                    if (this.isAccordionTab(child)) {\n                        tabs.push(child);\n                    }\n                    else if (child.children && child.children instanceof Array) {\n                        child.children.forEach(nestedChild => {\n                            if (this.isAccordionTab(nestedChild)) {\n                                tabs.push(nestedChild)\n                            }\n                        });\n                    }\n                }\n            )\n            return tabs;\n        },\n        ariaId() {\n            return UniqueComponentId();\n        }\n    }\n}\n</script>\n\n<style>\n.p-accordion-header-link {\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    user-select: none;\n    position: relative;\n    text-decoration: none;\n}\n\n.p-accordion-header-link:focus {\n    z-index: 1;\n}\n\n.p-accordion-header-text {\n    line-height: 1;\n}\n</style>\n"]}]}