{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/panelmenu/PanelMenu.vue?vue&type=style&index=0&id=fd3a0352&lang=css","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/panelmenu/PanelMenu.vue","mtime":1634589566229},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/css-loader/dist/cjs.js","mtime":1634585948787},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/postcss-loader/src/index.js","mtime":1634585949822},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5wLXBhbmVsbWVudSAucC1wYW5lbG1lbnUtaGVhZGVyLWxpbmsgewogICAgZGlzcGxheTogZmxleDsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICB1c2VyLXNlbGVjdDogbm9uZTsKICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKfQoKLnAtcGFuZWxtZW51IC5wLXBhbmVsbWVudS1oZWFkZXItbGluazpmb2N1cyB7CiAgICB6LWluZGV4OiAxOwp9CgoucC1wYW5lbG1lbnUgLnAtc3VibWVudS1saXN0IHsKICAgIG1hcmdpbjogMDsKICAgIHBhZGRpbmc6IDA7CiAgICBsaXN0LXN0eWxlOiBub25lOwp9CgoucC1wYW5lbG1lbnUgLnAtbWVudWl0ZW0tbGluayB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIHVzZXItc2VsZWN0OiBub25lOwogICAgY3Vyc29yOiBwb2ludGVyOwogICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwp9CgoucC1wYW5lbG1lbnUgLnAtbWVudWl0ZW0tdGV4dCB7CiAgICBsaW5lLWhlaWdodDogMTsKfQo="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/panelmenu/PanelMenu.vue"],"names":[],"mappings":"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","file":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/panelmenu/PanelMenu.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class=\"p-panelmenu p-component\">\n        <template v-for=\"(item, index) of model\" :key=\"item.label + '_' + index\">\n            <div v-if=\"visible(item)\"  :class=\"getPanelClass(item)\" :style=\"item.style\">\n                <div :class=\"getHeaderClass(item)\" :style=\"item.style\">\n                    <template v-if=\"!$slots.item\">\n                        <router-link v-if=\"item.to && !disabled(item)\" :to=\"item.to\" custom v-slot=\"{navigate, href, isActive, isExactActive}\">\n                            <a :href=\"href\" :class=\"getHeaderLinkClass(item, {isActive, isExactActive})\" @click=\"onItemClick($event, item, navigate)\" role=\"treeitem\">\n                                <span v-if=\"item.icon\" :class=\"getPanelIcon(item)\"></span>\n                                <span class=\"p-menuitem-text\">{{item.label}}</span>\n                            </a>\n                        </router-link>\n                        <a v-else :href=\"item.url\" :class=\"getHeaderLinkClass(item)\" @click=\"onItemClick($event, item)\" :tabindex=\"disabled(item) ? null : '0'\"\n                            :aria-expanded=\"isActive(item)\" :id=\"ariaId +'_header'\" :aria-controls=\"ariaId +'_content'\">\n                            <span v-if=\"item.items\" :class=\"getPanelToggleIcon(item)\"></span>\n                            <span v-if=\"item.icon\" :class=\"getPanelIcon(item)\"></span>\n                            <span class=\"p-menuitem-text\">{{item.label}}</span>\n                        </a>\n                    </template>\n                    <component v-else :is=\"$slots.item\" :item=\"item\"></component>\n                </div>\n                <transition name=\"p-toggleable-content\">\n                    <div class=\"p-toggleable-content\" v-show=\"isActive(item)\"\n                        role=\"region\" :id=\"ariaId +'_content' \" :aria-labelledby=\"ariaId +'_header'\">\n                        <div class=\"p-panelmenu-content\" v-if=\"item.items\">\n                            <PanelMenuSub :model=\"item.items\" class=\"p-panelmenu-root-submenu\" :template=\"$slots.item\" \n                                :expandedKeys=\"expandedKeys\" @item-toggle=\"updateExpandedKeys\" :exact=\"exact\" />\n                        </div>\n                    </div>\n                </transition>\n            </div>\n        </template>\n    </div>\n</template>\n\n<script>\nimport PanelMenuSub from './PanelMenuSub.vue';\nimport {UniqueComponentId} from 'primevue/utils';\n\nexport default {\n    name: 'PanelMenu',\n    emits: ['update:expandedKeys'],\n    props: {\n\t\tmodel: {\n            type: Array,\n            default: null\n        },\n        expandedKeys: {\n            type: null,\n            default: null\n        },\n        exact: {\n            type: Boolean,\n            default: true\n        }\n    },\n    data() {\n        return {\n            activeItem: null\n        }\n    },\n    methods: {\n        onItemClick(event, item, navigate) {\n            if (this.isActive(item) && this.activeItem === null) {\n                this.activeItem = item;\n            }\n            \n            if (this.disabled(item)) {\n                event.preventDefault();\n                return;\n            }\n\n            if (item.command) {\n                item.command({\n                    originalEvent: event,\n                    item: item\n                });\n            }\n\n            if (this.activeItem && this.activeItem === item)\n                this.activeItem = null;\n            else\n                this.activeItem = item;\n\n            this.updateExpandedKeys({item: item, expanded: this.activeItem != null});\n        \n            if (item.to && navigate) {\n                navigate(event);\n            }\n        },\n        updateExpandedKeys(event) {\n            if (this.expandedKeys) {\n                let item = event.item;\n                let _keys = {...this.expandedKeys};\n\n                if (event.expanded)\n                    _keys[item.key] = true;\n                else\n                    delete _keys[item.key];\n\n                this.$emit('update:expandedKeys', _keys);\n            }\n        },\n        getPanelClass(item) {\n            return ['p-panelmenu-panel', item.class];\n        },\n        getPanelToggleIcon(item) {\n            const active = this.isActive(item);\n            return ['p-panelmenu-icon pi', {'pi-chevron-right': !active,' pi-chevron-down': active}];\n        },\n        getPanelIcon(item) {\n            return ['p-menuitem-icon', item.icon];\n        },\n        getHeaderLinkClass(item, routerProps) {\n            return ['p-panelmenu-header-link', {\n                'router-link-active': routerProps && routerProps.isActive,\n                'router-link-active-exact': this.exact && routerProps && routerProps.isExactActive\n            }];\n        },\n        isActive(item) {\n            return this.expandedKeys ? this.expandedKeys[item.key] : item === this.activeItem;\n        },\n        getHeaderClass(item) {\n            return ['p-component p-panelmenu-header', {'p-highlight': this.isActive(item), 'p-disabled': this.disabled(item)}];\n        },\n        visible(item) {\n            return (typeof item.visible === 'function' ? item.visible() : item.visible !== false);\n        },\n        disabled(item) {\n            return (typeof item.disabled === 'function' ? item.disabled() : item.disabled);\n        }\n    },\n    components: {\n        'PanelMenuSub': PanelMenuSub\n    },\n    computed: {\n        ariaId() {\n            return UniqueComponentId();\n        }\n    }\n}\n</script>\n\n<style>\n.p-panelmenu .p-panelmenu-header-link {\n    display: flex;\n    align-items: center;\n    user-select: none;\n    cursor: pointer;\n    position: relative;\n    text-decoration: none;\n}\n\n.p-panelmenu .p-panelmenu-header-link:focus {\n    z-index: 1;\n}\n\n.p-panelmenu .p-submenu-list {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n}\n\n.p-panelmenu .p-menuitem-link {\n    display: flex;\n    align-items: center;\n    user-select: none;\n    cursor: pointer;\n    text-decoration: none;\n}\n\n.p-panelmenu .p-menuitem-text {\n    line-height: 1;\n}\n</style>\n"]}]}