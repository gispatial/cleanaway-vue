{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treeselect/TreeSelectDoc.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treeselect/TreeSelectDoc.vue","mtime":1634589566291},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgc291cmNlczogewogICAgICAgICAgICAgICAgJ29wdGlvbnMtYXBpJzogewogICAgICAgICAgICAgICAgICAgIHRhYk5hbWU6ICdPcHRpb25zIEFQSSBTb3VyY2UnLAogICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IGAKPHRlbXBsYXRlPgogICAgPGRpdj4KICAgICAgICA8aDU+U2luZ2xlPC9oNT4KICAgICAgICA8VHJlZVNlbGVjdCB2LW1vZGVsPSJzZWxlY3RlZE5vZGUiIDpvcHRpb25zPSJub2RlcyIgcGxhY2Vob2xkZXI9IlNlbGVjdCBJdGVtIj48L1RyZWVTZWxlY3Q+CgogICAgICAgIDxoNT5NdWx0aXBsZTwvaDU+CiAgICAgICAgPFRyZWVTZWxlY3Qgdi1tb2RlbD0ic2VsZWN0ZWROb2RlczEiIDpvcHRpb25zPSJub2RlcyIgc2VsZWN0aW9uTW9kZT0ibXVsdGlwbGUiIDptZXRhS2V5U2VsZWN0aW9uPSJmYWxzZSIgcGxhY2Vob2xkZXI9IlNlbGVjdCBJdGVtcyI+PC9UcmVlU2VsZWN0PgoKICAgICAgICA8aDU+Q2hlY2tib3g8L2g1PgogICAgICAgIDxUcmVlU2VsZWN0IHYtbW9kZWw9InNlbGVjdGVkTm9kZXMyIiA6b3B0aW9ucz0ibm9kZXMiIGRpc3BsYXk9ImNoaXAiIHNlbGVjdGlvbk1vZGU9ImNoZWNrYm94IiAgcGxhY2Vob2xkZXI9IlNlbGVjdCBJdGVtcyI+PC9UcmVlU2VsZWN0PgogICAgPC9kaXY+CjwvdGVtcGxhdGU+Cgo8c2NyaXB0PgppbXBvcnQgTm9kZVNlcnZpY2UgZnJvbSAnLi9zZXJ2aWNlL05vZGVTZXJ2aWNlJzsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgbm9kZXM6IG51bGwsCiAgICAgICAgICAgIHNlbGVjdGVkTm9kZTogbnVsbCwKICAgICAgICAgICAgc2VsZWN0ZWROb2RlczE6IG51bGwsCiAgICAgICAgICAgIHNlbGVjdGVkTm9kZXMyOiBudWxsCiAgICAgICAgfQogICAgfSwKICAgIG5vZGVTZXJ2aWNlOiBudWxsLAogICAgY3JlYXRlZCgpIHsKICAgICAgICB0aGlzLm5vZGVTZXJ2aWNlID0gbmV3IE5vZGVTZXJ2aWNlKCk7CiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICB0aGlzLm5vZGVTZXJ2aWNlLmdldFRyZWVOb2RlcygpLnRoZW4oZGF0YSA9PiB0aGlzLm5vZGVzID0gZGF0YSk7CiAgICB9Cn0KPFxcL3NjcmlwdD4KCjxzdHlsZSBsYW5nPSJzY3NzIiBzY29wZWQ+Ci5wLXRyZWVzZWxlY3QgewogICAgd2lkdGg6MjByZW07Cn0KCkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY0MHB4KSB7CiAgICAucC10cmVlc2VsZWN0IHsKICAgICAgICB3aWR0aDogMTAwJTsKICAgIH0KfQo8L3N0eWxlPmAKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAnY29tcG9zaXRpb24tYXBpJzogewogICAgICAgICAgICAgICAgICAgIHRhYk5hbWU6ICdDb21wb3NpdGlvbiBBUEkgU291cmNlJywKICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBgCjx0ZW1wbGF0ZT4KICAgIDxkaXY+CiAgICAgICAgPGg1PlNpbmdsZTwvaDU+CiAgICAgICAgPFRyZWVTZWxlY3Qgdi1tb2RlbD0ic2VsZWN0ZWROb2RlIiA6b3B0aW9ucz0ibm9kZXMiIHBsYWNlaG9sZGVyPSJTZWxlY3QgSXRlbSI+PC9UcmVlU2VsZWN0PgoKICAgICAgICA8aDU+TXVsdGlwbGU8L2g1PgogICAgICAgIDxUcmVlU2VsZWN0IHYtbW9kZWw9InNlbGVjdGVkTm9kZXMxIiA6b3B0aW9ucz0ibm9kZXMiIHNlbGVjdGlvbk1vZGU9Im11bHRpcGxlIiA6bWV0YUtleVNlbGVjdGlvbj0iZmFsc2UiIHBsYWNlaG9sZGVyPSJTZWxlY3QgSXRlbXMiPjwvVHJlZVNlbGVjdD4KCiAgICAgICAgPGg1PkNoZWNrYm94PC9oNT4KICAgICAgICA8VHJlZVNlbGVjdCB2LW1vZGVsPSJzZWxlY3RlZE5vZGVzMiIgOm9wdGlvbnM9Im5vZGVzIiBkaXNwbGF5PSJjaGlwIiBzZWxlY3Rpb25Nb2RlPSJjaGVja2JveCIgIHBsYWNlaG9sZGVyPSJTZWxlY3QgSXRlbXMiPjwvVHJlZVNlbGVjdD4KICAgIDwvZGl2Pgo8L3RlbXBsYXRlPgoKPHNjcmlwdD4KaW1wb3J0IHsgcmVmLCBvbk1vdW50ZWQgfSBmcm9tICJ2dWUiOwppbXBvcnQgTm9kZVNlcnZpY2UgZnJvbSAnLi9zZXJ2aWNlL05vZGVTZXJ2aWNlJzsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIHNldHVwKCkgewogICAgICAgICBvbk1vdW50ZWQoKCkgPT4gewogICAgICAgICAgICBub2RlU2VydmljZS52YWx1ZS5nZXRUcmVlTm9kZXMoKS50aGVuKGRhdGEgPT4gbm9kZXMudmFsdWUgPSBkYXRhKTsKICAgICAgICB9KTsKCiAgICAgICAgY29uc3Qgbm9kZXMgPSByZWYoKTsKICAgICAgICBjb25zdCBub2RlU2VydmljZSA9IHJlZihuZXcgTm9kZVNlcnZpY2UoKSk7CgogICAgICAgIGNvbnN0IHNlbGVjdGVkTm9kZSA9IHJlZigpOwogICAgICAgIGNvbnN0IHNlbGVjdGVkTm9kZXMxID0gcmVmKCk7CiAgICAgICAgY29uc3Qgc2VsZWN0ZWROb2RlczIgPSByZWYoKTsKCiAgICAgICAgcmV0dXJuIHsgbm9kZXMsIHNlbGVjdGVkTm9kZSwgc2VsZWN0ZWROb2RlczEsIHNlbGVjdGVkTm9kZXMyIH07CiAgICB9Cn0KPFxcL3NjcmlwdD4KCjxzdHlsZSBsYW5nPSJzY3NzIiBzY29wZWQ+Ci5wLXRyZWVzZWxlY3QgewogICAgd2lkdGg6MjByZW07Cn0KCkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY0MHB4KSB7CiAgICAucC10cmVlc2VsZWN0IHsKICAgICAgICB3aWR0aDogMTAwJTsKICAgIH0KfQo8L3N0eWxlPmAKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAnYnJvd3Nlci1zb3VyY2UnOiB7CiAgICAgICAgICAgICAgICAgICAgdGFiTmFtZTogJ0Jyb3dzZXIgU291cmNlJywKICAgICAgICAgICAgICAgICAgICBpbXBvcnRzOiBgPHNjcmlwdCBzcmM9Imh0dHBzOi8vdW5wa2cuY29tL3ByaW1ldnVlQF4zL3RyZWVzZWxlY3QvdHJlZXNlbGVjdC5taW4uanMiPjxcXC9zY3JpcHQ+CiAgICAgICAgPHNjcmlwdCBzcmM9Ii4vTm9kZVNlcnZpY2UuanMiPjxcXC9zY3JpcHQ+YCwKICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBgPGRpdiBpZD0iYXBwIj4KICAgICAgICAgICAgPGg1PlNpbmdsZTwvaDU+CiAgICAgICAgICAgIDxwLXRyZWVzZWxlY3Qgdi1tb2RlbD0ic2VsZWN0ZWROb2RlIiA6b3B0aW9ucz0ibm9kZXMiIHBsYWNlaG9sZGVyPSJTZWxlY3QgSXRlbSI+PC9wLXRyZWVzZWxlY3Q+CgogICAgICAgICAgICA8aDU+TXVsdGlwbGU8L2g1PgogICAgICAgICAgICA8cC10cmVlc2VsZWN0IHYtbW9kZWw9InNlbGVjdGVkTm9kZXMxIiA6b3B0aW9ucz0ibm9kZXMiIHNlbGVjdGlvbi1tb2RlPSJtdWx0aXBsZSIgOm1ldGEta2V5LXNlbGVjdGlvbj0iZmFsc2UiIHBsYWNlaG9sZGVyPSJTZWxlY3QgSXRlbXMiPjwvcC10cmVlc2VsZWN0PgoKICAgICAgICAgICAgPGg1PkNoZWNrYm94PC9oNT4KICAgICAgICAgICAgPHAtdHJlZXNlbGVjdCB2LW1vZGVsPSJzZWxlY3RlZE5vZGVzMiIgOm9wdGlvbnM9Im5vZGVzIiBkaXNwbGF5PSJjaGlwIiBzZWxlY3Rpb24tbW9kZT0iY2hlY2tib3giIHBsYWNlaG9sZGVyPSJTZWxlY3QgSXRlbXMiPjwvcC10cmVlc2VsZWN0PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8c2NyaXB0IHR5cGU9Im1vZHVsZSI+CiAgICAgICAgY29uc3QgeyBjcmVhdGVBcHAsIHJlZiwgb25Nb3VudGVkIH0gPSBWdWU7CgogICAgICAgIGNvbnN0IEFwcCA9IHsKICAgICAgICAgICAgc2V0dXAoKSB7CiAgICAgICAgICAgICAgICBvbk1vdW50ZWQoKCkgPT4gewogICAgICAgICAgICAgICAgICAgIG5vZGVTZXJ2aWNlLnZhbHVlLmdldFRyZWVOb2RlcygpLnRoZW4oZGF0YSA9PiBub2Rlcy52YWx1ZSA9IGRhdGEpOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgY29uc3Qgbm9kZXMgPSByZWYoKTsKICAgICAgICAgICAgICAgIGNvbnN0IG5vZGVTZXJ2aWNlID0gcmVmKG5ldyBOb2RlU2VydmljZSgpKTsKCiAgICAgICAgICAgICAgICBjb25zdCBzZWxlY3RlZE5vZGUgPSByZWYoKTsKICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkTm9kZXMxID0gcmVmKCk7CiAgICAgICAgICAgICAgICBjb25zdCBzZWxlY3RlZE5vZGVzMiA9IHJlZigpOwoKICAgICAgICAgICAgICAgIHJldHVybiB7IG5vZGVzLCBzZWxlY3RlZE5vZGUsIHNlbGVjdGVkTm9kZXMxLCBzZWxlY3RlZE5vZGVzMiB9OwogICAgICAgICAgICB9LAogICAgICAgICAgICBjb21wb25lbnRzOiB7CiAgICAgICAgICAgICAgICAicC10cmVlc2VsZWN0IjogcHJpbWV2dWUudHJlZXNlbGVjdAogICAgICAgICAgICB9CiAgICAgICAgfTsKCiAgICAgICAgY3JlYXRlQXBwKEFwcCkKICAgICAgICAgICAgLnVzZShwcmltZXZ1ZS5jb25maWcuZGVmYXVsdCkKICAgICAgICAgICAgLm1vdW50KCIjYXBwIik7CiAgICAgICAgPFxcL3NjcmlwdD4KCiAgICAgICAgPHN0eWxlPgogICAgICAgIC5wLXRyZWVzZWxlY3QgewogICAgICAgICAgICB3aWR0aDoyMHJlbTsKICAgICAgICB9CgogICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY0MHB4KSB7CiAgICAgICAgICAgIC5wLXRyZWVzZWxlY3QgewogICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgPC9zdHlsZT5gCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treeselect/TreeSelectDoc.vue"],"names":[],"mappings":"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AAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC;QACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACdhB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEhJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChpC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CA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C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACdhvJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChrB,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;;Q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","file":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treeselect/TreeSelectDoc.vue","sourceRoot":"","sourcesContent":["<template>\n\t<AppDoc name=\"TreeSelectDemo\" :sources=\"sources\" github=\"treeselect/TreeSelectDemo.vue\" :service=\"['NodeService']\" :data=\"['treenodes']\">\n        <h5>Import</h5>\n<pre v-code.script><code>\nimport TreeSelect from 'primevue/treeselect';\n\n</code></pre>\n\n        <h5>Import via CDN</h5>\n<pre v-code><code>\n&lt;script src=\"https://unpkg.com/primevue@^3/core/core.js\"&gt;&lt;/script&gt;\n&lt;script src=\"https://unpkg.com/primevue@^3/treeselect/treeselect.min.js\"&gt;&lt;/script&gt;\n\n</code></pre>\n\n        <h5>Getting Started</h5>\n\t\t<p>TreeSelect component requires an array of TreeNode objects as its <i>options</i> and keys of the nodes as its value.</p>\n\n<pre v-code><code>\n&lt;TreeSelect v-model=\"selectedNodeKey\" :options=\"nodes\" placeholder=\"Select Item\" /&gt;\n\n</code></pre>\n\n        <p>In example below, nodes are retrieved from a remote data source.</p>\n\n<pre v-code.script><code>\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            selectedNodeKey: null,\n            nodes: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeNodes().then(data => this.nodes = data);\n    }\n}\n\n</code></pre>\n\n<pre v-code.script><code>\nexport default class NodeService {\n\n    getTreeNodes() {\n        return fetch('demo/data/treenodes.json').then(res => res.json())\n                .then(d => d.root);\n    }\n\n}\n\n</code></pre>\n\n        <p>The json response sample would be as following.</p>\n<pre v-code.script><code>\n{\n    \"root\": [\n        {\n            \"key\": \"0\",\n            \"label\": \"Documents\",\n            \"data\": \"Documents Folder\",\n            \"icon\": \"pi pi-fw pi-inbox\",\n            \"children\": [{\n                \"key\": \"0-0\",\n                \"label\": \"Work\",\n                \"data\": \"Work Folder\",\n                \"icon\": \"pi pi-fw pi-cog\",\n                \"children\": [{ \"key\": \"0-0-0\", \"label\": \"Expenses.doc\", \"icon\": \"pi pi-fw pi-file\", \"data\": \"Expenses Document\" }, { \"key\": \"0-0-1\", \"label\": \"Resume.doc\", \"icon\": \"pi pi-fw pi-file\", \"data\": \"Resume Document\" }]\n            },\n            {\n                \"key\": \"0-1\",\n                \"label\": \"Home\",\n                \"data\": \"Home Folder\",\n                \"icon\": \"pi pi-fw pi-home\",\n                \"children\": [{ \"key\": \"0-1-0\", \"label\": \"Invoices.txt\", \"icon\": \"pi pi-fw pi-file\", \"data\": \"Invoices for this month\" }]\n            }]\n        },\n        {\n            \"key\": \"1\",\n            \"label\": \"Events\",\n            \"data\": \"Events Folder\",\n            \"icon\": \"pi pi-fw pi-calendar\",\n            \"children\": [\n                { \"key\": \"1-0\", \"label\": \"Meeting\", \"icon\": \"pi pi-fw pi-calendar-plus\", \"data\": \"Meeting\" },\n                { \"key\": \"1-1\", \"label\": \"Product Launch\", \"icon\": \"pi pi-fw pi-calendar-plus\", \"data\": \"Product Launch\" },\n                { \"key\": \"1-2\", \"label\": \"Report Review\", \"icon\": \"pi pi-fw pi-calendar-plus\", \"data\": \"Report Review\" }]\n        },\n        {\n            \"key\": \"2\",\n            \"label\": \"Movies\",\n            \"data\": \"Movies Folder\",\n            \"icon\": \"pi pi-fw pi-star\",\n            \"children\": [{\n                \"key\": \"2-0\",\n                \"icon\": \"pi pi-fw pi-star\",\n                \"label\": \"Al Pacino\",\n                \"data\": \"Pacino Movies\",\n                \"children\": [{ \"key\": \"2-0-0\", \"label\": \"Scarface\", \"icon\": \"pi pi-fw pi-video\", \"data\": \"Scarface Movie\" }, { \"key\": \"2-0-1\", \"label\": \"Serpico\", \"icon\": \"pi pi-fw pi-video\", \"data\": \"Serpico Movie\" }]\n            },\n            {\n                \"key\": \"2-1\",\n                \"label\": \"Robert De Niro\",\n                \"icon\": \"pi pi-fw pi-star\",\n                \"data\": \"De Niro Movies\",\n                \"children\": [{ \"key\": \"2-1-0\", \"label\": \"Goodfellas\", \"icon\": \"pi pi-fw pi-video\", \"data\": \"Goodfellas Movie\" }, { \"key\": \"2-1-1\", \"label\": \"Untouchables\", \"icon\": \"pi pi-fw pi-video\", \"data\": \"Untouchables Movie\" }]\n            }]\n        }\n    ]\n}\n\n</code></pre>\n\n        <h5>TreeNode API utilized by the TreeSelect</h5>\n        <div class=\"doc-tablewrapper\">\n            <table class=\"doc-table\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Default</th>\n                        <th>Description</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>key</td>\n                        <td>any</td>\n                        <td>null</td>\n                        <td>Mandatory unique key of the node.</td>\n                    </tr>\n                    <tr>\n                        <td>label</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Label of the node.</td>\n                    </tr>\n                    <tr>\n                        <td>data</td>\n                        <td>any</td>\n                        <td>null</td>\n                        <td>Data represented by the node.</td>\n                    </tr>\n                    <tr>\n                        <td>type</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Type of the node to match a template.</td>\n                    </tr>\n                    <tr>\n                        <td>icon</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Icon of the node to display next to content.</td>\n                    </tr>\n                    <tr>\n                        <td>children</td>\n                        <td>TreeNode[]</td>\n                        <td>null</td>\n                        <td>An array of treenodes as children.</td>\n                    </tr>\n                    <tr>\n                        <td>style</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Inline style of the node.</td>\n                    </tr>\n                    <tr>\n                        <td>styleClass</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Style class of the node.</td>\n                    </tr>\n                    <tr>\n                        <td>selectable</td>\n                        <td>boolean</td>\n                        <td>null</td>\n                        <td>Whether the node is selectable when selection mode is enabled.</td>\n                    </tr>\n                    <tr>\n                        <td>leaf</td>\n                        <td>boolean</td>\n                        <td>null</td>\n                        <td>Specifies if the node has children. Used in lazy loading.</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        <h5>Selection Mode</h5>\n        <p>TreeSelects offers \"single\", \"multiple\" and \"checkbox\" alternatives for the selection behavior that is defined by the <i>selectionMode</i> option.</p>\n<pre v-code><code>\n&lt;TreeSelect v-model=\"selectedValue1\" :options=\"nodes\" selectionMode=\"single\" placeholder=\"Select Item\" /&gt;\n\n&lt;TreeSelect v-model=\"selectedValue2\" :options=\"nodes\" selectionMode=\"multiple\" placeholder=\"Select Items\" /&gt;\n\n&lt;TreeSelect v-model=\"selectedValue3\" :options=\"nodes\" selectionMode=\"checkbox\" placeholder=\"Select Items\" /&gt;\n\n</code></pre>\n\n        <h5>Value Format</h5>\n        <p>Value passed to and from the TreeSelect via the v-model directive should be a an object with key-value pairs where key is the node key and\n            value is a boolean to indicate selection. On the other hand\n        in \"checkbox\" mode, instead of a boolean, value should be an object that has \"checked\" and \"partialChecked\" properties to represent the checked state of a node. Best way to clarify it is prepopulating a TreeSelect with an existing value.</p>\n\n<pre v-code.script><code>\ndata() {\n    return {\n        selectedValue1: {'2-1': true},\n        selectedValue2: {'1-1': true, '0-0-0': true},\n        selectedValue2: {'1': {checked: true, partialChecked: true}, '1-0': {checked: true}}\n        nodes: null\n    }\n},\n</code></pre>\n\n        <h5>Chips Display</h5>\n        <p>A comma separated list is used by default to display selected items whereas alternative chip mode is provided using the <i>display</i> property to visualize the items as tokens.</p>\n<pre v-code><code>\n&lt;TreeSelect v-model=\"selectedValue\" display=\"chip\" :options=\"nodes\" selectionMode=\"multiple\" placeholder=\"Select Items\" /&gt;\n\n</code></pre>\n\n\t\t<h5>Templating</h5>\n\t\t<p>Label of an option is used as the display text of an item by default, for custom content support define a <i>value</i> template that gets the selected nodes as a parameter.\n        In addition <i>header</i>, <i>footer</i> and <i>empty</i> slots are provided for further customization.</p>\n<pre v-code><code><template v-pre>\n&lt;TreeSelect v-model=\"selectedNodes\" :options=\"nodes\" placeholder=\"Select Items\"&gt;\n\t&lt;template #value=\"{value}\"&gt;\n\t\tCustom Content\n\t&lt;/template&gt;\n&lt;/TreeSelect&gt;\n</template>\n</code></pre>\n\n\t\t<h5>Properties</h5>\n        <p>Any property as style and class are passed to the main container element. Following are the additional properties to configure the component.</p>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Default</th>\n                        <th>Description</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>modelValue</td>\n                        <td>any</td>\n                        <td>null</td>\n                        <td>Value of the component.</td>\n                    </tr>\n                    <tr>\n                        <td>options</td>\n                        <td>array</td>\n                        <td>null</td>\n                        <td>An array of treenodes.</td>\n                    </tr>\n                    <tr>\n                        <td>scrollHeight</td>\n                        <td>string</td>\n                        <td>200px</td>\n                        <td>Height of the viewport, a scrollbar is defined if height of list exceeds this value.</td>\n                    </tr>\n                    <tr>\n                        <td>placeholder</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Label to display when there are no selections.</td>\n                    </tr>\n                    <tr>\n                        <td>disabled</td>\n                        <td>boolean</td>\n                        <td>false</td>\n                        <td>When present, it specifies that the component should be disabled.</td>\n                    </tr>\n                    <tr>\n                        <td>tabindex</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Index of the element in tabbing order.</td>\n                    </tr>\n                    <tr>\n                        <td>inputId</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Identifier of the underlying input element.</td>\n                    </tr>\n                    <tr>\n                        <td>ariaLabelledBy</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Establishes relationships between the component and label(s) where its value should be one or more element IDs.</td>\n                    </tr>\n                    <tr>\n                        <td>selectionMode</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Defines the selection mode, valid values \"single\", \"multiple\", and \"checkbox\".</td>\n                    </tr>\n                    <tr>\n                        <td>panelClass</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Style class of the overlay panel.</td>\n                    </tr>\n                    <tr>\n                        <td>appendTo</td>\n                        <td>string</td>\n                        <td>body</td>\n                        <td>A valid query selector or an HTMLElement to specify where the overlay gets attached. Special keywords are \"body\" for document body\n                        and \"self\" for the element itself.</td>\n                    </tr>\n                    <tr>\n                        <td>emptyMessage</td>\n                        <td>string</td>\n                        <td>No results found</td>\n                        <td>Text to display when there are no options available. Defaults to value from PrimeVue locale configuration.</td>\n                    </tr>\n                    <tr>\n                        <td>display</td>\n                        <td>string</td>\n                        <td>comma</td>\n                        <td>Defines how the selected items are displayed, valid values are \"comma\" and \"chip\".</td>\n                    </tr>\n                     <tr>\n                        <td>metaKeySelection</td>\n                        <td>boolean</td>\n                        <td>true</td>\n                        <td>Defines how multiple items can be selected, when true metaKey needs to be pressed to select or unselect an item and when set to false selection of each item\n                            can be toggled individually. On touch enabled devices, metaKeySelection is turned off automatically.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Events</h5>\n        <div class=\"doc-tablewrapper\">\n            <table class=\"doc-table\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Parameters</th>\n                        <th>Description</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>change</td>\n                        <td>event: Selected node keys</td>\n                        <td>Callback to invoke on value change.</td>\n                    </tr>\n                    <tr>\n                        <td>before-show</td>\n                        <td>-</td>\n                        <td>Callback to invoke before the overlay is shown.</td>\n                    </tr>\n                    <tr>\n                        <td>before-hide</td>\n                        <td>-</td>\n                        <td>Callback to invoke before the overlay is hidden.</td>\n                    </tr>\n                    <tr>\n                        <td>show</td>\n                        <td>-</td>\n                        <td>Callback to invoke when the overlay is shown.</td>\n                    </tr>\n                    <tr>\n                        <td>hide</td>\n                        <td>-</td>\n                        <td>Callback to invoke when the overlay is hidden.</td>\n                    </tr>\n                    <tr>\n                        <td>node-select</td>\n                        <td>node: Node instance</td>\n                        <td>Callback to invoke when a node is selected.</td>\n                    </tr>\n                    <tr>\n                        <td>node-unselect</td>\n                        <td>node: Node instance</td>\n                        <td>Callback to invoke when a node is unselected.</td>\n                    </tr>\n                    <tr>\n                        <td>node-expand</td>\n                        <td>node: Node instance</td>\n                        <td>Callback to invoke when a node is expanded.</td>\n                    </tr>\n                    <tr>\n                        <td>node-collapse</td>\n                        <td>node: Node instance</td>\n                        <td>Callback to invoke when a node is collapsed.</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        <h5>Methods</h5>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Parameters</th>\n                        <th>Description</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>show</td>\n                        <td>-</td>\n                        <td>Shows the overlay.</td>\n                    </tr>\n                    <tr>\n                        <td>hide</td>\n                        <td>-</td>\n                        <td>Hides the overlay.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n        <h5>Slots</h5>\n\t\t<div class=\"doc-tablewrapper\">\n            <table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Parameters</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>value</td>\n                        <td>value: Selected nodes <br />\n                            placeholder: Placeholder value</td>\n                    </tr>\n                    <tr>\n                        <td>header</td>\n                        <td>value: Value of the component <br />\n                            options: TreeNode options</td>\n                    </tr>\n                    <tr>\n                        <td>footer</td>\n                        <td>value: Value of the component <br />\n                           options: TreeNode options</td>\n                    </tr>\n                    <tr>\n                        <td>empty</td>\n                        <td>-</td>\n                    </tr>\n                    <tr>\n                        <td>indicator</td>\n                        <td>-</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n        </div>\n\n\t\t<h5>Styling</h5>\n\t\t<p>Following is the list of structural style classes, for theming classes visit <router-link to=\"/theming\">theming</router-link> page.</p>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Element</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>p-treeselect</td>\n                        <td>Container element.</td>\n                    </tr>\n                    <tr>\n                        <td>p-treeselect-label-container</td>\n                        <td>Container of the label to display selected items.</td>\n                    </tr>\n                    <tr>\n                        <td>p-treeselect-label</td>\n                        <td>Label to display selected items.</td>\n                    </tr>\n                    <tr>\n                        <td>p-treeselect-trigger</td>\n                        <td>Dropdown button.</td>\n                    </tr>\n                    <tr>\n                        <td>p-treeselect-panel</td>\n                        <td>Overlay panel for items.</td>\n                    </tr>\n                    <tr>\n                        <td>p-treeselect-items-wrapper</td>\n                        <td>List container of items.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Dependencies</h5>\n\t\t<p>None.</p>\n    </AppDoc>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div>\n        <h5>Single</h5>\n        <TreeSelect v-model=\"selectedNode\" :options=\"nodes\" placeholder=\"Select Item\"></TreeSelect>\n\n        <h5>Multiple</h5>\n        <TreeSelect v-model=\"selectedNodes1\" :options=\"nodes\" selectionMode=\"multiple\" :metaKeySelection=\"false\" placeholder=\"Select Items\"></TreeSelect>\n\n        <h5>Checkbox</h5>\n        <TreeSelect v-model=\"selectedNodes2\" :options=\"nodes\" display=\"chip\" selectionMode=\"checkbox\"  placeholder=\"Select Items\"></TreeSelect>\n    </div>\n</template>\n\n<script>\nimport NodeService from './service/NodeService';\n\nexport default {\n    data() {\n        return {\n            nodes: null,\n            selectedNode: null,\n            selectedNodes1: null,\n            selectedNodes2: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeNodes().then(data => this.nodes = data);\n    }\n}\n<\\\\/script>\n\n<style lang=\"scss\" scoped>\n.p-treeselect {\n    width:20rem;\n}\n\n@media screen and (max-width: 640px) {\n    .p-treeselect {\n        width: 100%;\n    }\n}\n</style>`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div>\n        <h5>Single</h5>\n        <TreeSelect v-model=\"selectedNode\" :options=\"nodes\" placeholder=\"Select Item\"></TreeSelect>\n\n        <h5>Multiple</h5>\n        <TreeSelect v-model=\"selectedNodes1\" :options=\"nodes\" selectionMode=\"multiple\" :metaKeySelection=\"false\" placeholder=\"Select Items\"></TreeSelect>\n\n        <h5>Checkbox</h5>\n        <TreeSelect v-model=\"selectedNodes2\" :options=\"nodes\" display=\"chip\" selectionMode=\"checkbox\"  placeholder=\"Select Items\"></TreeSelect>\n    </div>\n</template>\n\n<script>\nimport { ref, onMounted } from \"vue\";\nimport NodeService from './service/NodeService';\n\nexport default {\n    setup() {\n         onMounted(() => {\n            nodeService.value.getTreeNodes().then(data => nodes.value = data);\n        });\n\n        const nodes = ref();\n        const nodeService = ref(new NodeService());\n\n        const selectedNode = ref();\n        const selectedNodes1 = ref();\n        const selectedNodes2 = ref();\n\n        return { nodes, selectedNode, selectedNodes1, selectedNodes2 };\n    }\n}\n<\\\\/script>\n\n<style lang=\"scss\" scoped>\n.p-treeselect {\n    width:20rem;\n}\n\n@media screen and (max-width: 640px) {\n    .p-treeselect {\n        width: 100%;\n    }\n}\n</style>`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/treeselect/treeselect.min.js\"><\\\\/script>\n        <script src=\"./NodeService.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <h5>Single</h5>\n            <p-treeselect v-model=\"selectedNode\" :options=\"nodes\" placeholder=\"Select Item\"></p-treeselect>\n\n            <h5>Multiple</h5>\n            <p-treeselect v-model=\"selectedNodes1\" :options=\"nodes\" selection-mode=\"multiple\" :meta-key-selection=\"false\" placeholder=\"Select Items\"></p-treeselect>\n\n            <h5>Checkbox</h5>\n            <p-treeselect v-model=\"selectedNodes2\" :options=\"nodes\" display=\"chip\" selection-mode=\"checkbox\" placeholder=\"Select Items\"></p-treeselect>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref, onMounted } = Vue;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    nodeService.value.getTreeNodes().then(data => nodes.value = data);\n                });\n\n                const nodes = ref();\n                const nodeService = ref(new NodeService());\n\n                const selectedNode = ref();\n                const selectedNodes1 = ref();\n                const selectedNodes2 = ref();\n\n                return { nodes, selectedNode, selectedNodes1, selectedNodes2 };\n            },\n            components: {\n                \"p-treeselect\": primevue.treeselect\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\\\/script>\n\n        <style>\n        .p-treeselect {\n            width:20rem;\n        }\n\n        @media screen and (max-width: 640px) {\n            .p-treeselect {\n                width: 100%;\n            }\n        }\n        </style>`\n                }\n            }\n        }\n    }\n}\n</script>\n"]}]}