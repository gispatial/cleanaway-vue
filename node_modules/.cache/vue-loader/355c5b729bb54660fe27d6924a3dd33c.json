{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/invalid/InvalidDemo.vue?vue&type=style&index=0&id=2bf6c5d0&lang=scss&scoped=true","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/invalid/InvalidDemo.vue","mtime":1634589566272},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/css-loader/dist/cjs.js","mtime":1634585948787},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/postcss-loader/src/index.js","mtime":1634585949822},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/sass-loader/dist/cjs.js","mtime":1634589727478},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CnRleHRhcmVhIHsKICAgIHJlc2l6ZTogbm9uZTsKfQo="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/invalid/InvalidDemo.vue"],"names":[],"mappings":";AA2vBA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAChB","file":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/invalid/InvalidDemo.vue","sourceRoot":"","sourcesContent":["<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>Invalid State</h1>\n                <p>All form components have an invalid state style to display the validation errors.</p>\n            </div>\n            <AppDemoActions />\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card\">\n                <div class=\"p-fluid p-grid\">\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <InputText id=\"inputtext\" type=\"text\" v-model=\"value1\" placeholder=\"InputText\" class=\"p-invalid\" />\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <AutoComplete v-model=\"value2\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\" placeholder=\"AutoComplete\" class=\"p-invalid\" />\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <Calendar id=\"calendar\" v-model=\"value3\" placeholder=\"Calendar\" class=\"p-invalid\" :showIcon=\"true\" />\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <Chips id=\"chips\" v-model=\"value4\" placeholder=\"Chips\" class=\"p-invalid\" />\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <InputMask id=\"inputmask\" v-model=\"value5\" mask=\"99/99/9999\" slotChar=\"mm/dd/yyyy\" placeholder=\"InputMask\" class=\"p-invalid\" />\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <InputNumber id=\"inputnumber\" v-model=\"value6\" placeholder=\"InputNumber\" class=\"p-invalid\" />\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <CascadeSelect v-model=\"selectedCity\" :options=\"cascadeCountries\" optionLabel=\"cname\" optionGroupLabel=\"name\"\n                            :optionGroupChildren=\"['states', 'cities']\" placeholder=\"CascadeSelect\" class=\"p-invalid\" />\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <Dropdown id=\"dropdown\" v-model=\"value7\" :options=\"cities\" optionLabel=\"name\" placeholder=\"Dropdown\" class=\"p-invalid\" />\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <MultiSelect id=\"multiselect\" v-model=\"value8\" :options=\"cities\" optionLabel=\"name\" placeholder=\"MultiSelect\" class=\"p-invalid\" />\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <TreeSelect id=\"treeselect\" v-model=\"selectedNode\" :options=\"nodes\" placeholder=\"TreeSelect\" class=\"p-invalid\"></TreeSelect>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <Password id=\"password\" v-model=\"value10\" placeholder=\"Password\" class=\"p-invalid\" />\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <Textarea id=\"textarea\" v-model=\"value9\" rows=\"3\" placeholder=\"Textarea\" class=\"p-invalid\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <AppDoc name=\"InvalidDemo\" :sources=\"sources\" :service=\"['CountryService', 'NodeService']\" :data=\"['countries', 'treenodes']\" github=\"invalid/InvalidDemo.vue\" />\n    </div>\n</template>\n\n<script>\nimport CountryService from '../../service/CountryService';\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            countries: null,\n            filteredCountries: null,\n            cities: [\n                {name: 'New York', code: 'NY'},\n                {name: 'Rome', code: 'RM'},\n                {name: 'London', code: 'LDN'},\n                {name: 'Istanbul', code: 'IST'},\n                {name: 'Paris', code: 'PRS'}\n            ],\n            value1: null,\n            value2: null,\n            value3: null,\n            value4: null,\n            value5: null,\n            value6: null,\n            value7: null,\n            value8: null,\n            value9: null,\n            value10: null,\n            selectedCity: null,\n            nodes: null,\n            selectedNode: null,\n            cascadeCountries: [\n                {\n                    name: 'Australia',\n                    code: 'AU',\n                    states: [\n                        {\n                            name: 'New South Wales',\n                            cities: [\n                                {cname: 'Sydney', code: 'A-SY'},\n                                {cname: 'Newcastle', code: 'A-NE'},\n                                {cname: 'Wollongong', code: 'A-WO'}\n                            ]\n                        },\n                        {\n                            name: 'Queensland',\n                            cities: [\n                                {cname: 'Brisbane', code: 'A-BR'},\n                                {cname: 'Townsville', code: 'A-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'Canada', \n                    code: 'CA',\n                    states: [\n                        {\n                            name: 'Quebec',\n                            cities: [\n                                {cname: 'Montreal', code: 'C-MO'},\n                                {cname: 'Quebec City', code: 'C-QU'}\n                            ]\n                        },\n                        {\n                            name: 'Ontario',\n                            cities: [\n                                {cname: 'Ottawa', code: 'C-OT'},\n                                {cname: 'Toronto', code: 'C-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'United States',\n                    code: 'US',\n                    states: [\n                        {\n                            name: 'California',\n                            cities: [\n                                {cname: 'Los Angeles', code: 'US-LA'},\n                                {cname: 'San Diego', code: 'US-SD'},\n                                {cname: 'San Francisco', code: 'US-SF'}\n                            ]\n                        },\n                        {\n                            name: 'Florida',\n                            cities: [\n                                {cname: 'Jacksonville', code: 'US-JA'},\n                                {cname: 'Miami', code: 'US-MI'},\n                                {cname: 'Tampa', code: 'US-TA'},\n                                {cname: 'Orlando', code: 'US-OR'}\n                            ]\n                        },\n                        {\n                            name: 'Texas',\n                            cities: [\n                                {cname: 'Austin', code: 'US-AU'},\n                                {cname: 'Dallas', code: 'US-DA'},\n                                {cname: 'Houston', code: 'US-HO'}\n                            ]\n                        }\n                    ]\n                }\n            ],\n            sources: {\n                'options-api': {\n                    tabName :'Options API Source',\n                    content: `\n<template>\n    <div>\n        <div class=\"p-fluid p-grid\">\n            <div class=\"p-field p-col-12 p-md-4\">\n                <InputText id=\"inputtext\" type=\"text\" v-model=\"value1\" placeholder=\"InputText\" class=\"p-invalid\" />\n            </div>\n            <div class=\"p-field p-col-12 p-md-4\">\n                <AutoComplete v-model=\"value2\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\" placeholder=\"AutoComplete\" class=\"p-invalid\" />\n            </div>\n            <div class=\"p-field p-col-12 p-md-4\">\n                <Calendar id=\"calendar\" v-model=\"value3\" placeholder=\"Calendar\" class=\"p-invalid\" :showIcon=\"true\" />\n            </div>\n            <div class=\"p-field p-col-12 p-md-4\">\n                <Chips id=\"chips\" v-model=\"value4\" placeholder=\"Chips\" class=\"p-invalid\" />\n            </div>\n            <div class=\"p-field p-col-12 p-md-4\">\n                <InputMask id=\"inputmask\" v-model=\"value5\" mask=\"99/99/9999\" slotChar=\"mm/dd/yyyy\" placeholder=\"InputMask\" class=\"p-invalid\" />\n            </div>\n            <div class=\"p-field p-col-12 p-md-4\">\n                <InputNumber id=\"inputnumber\" v-model=\"value6\" placeholder=\"InputNumber\" class=\"p-invalid\" />\n            </div>\n            <div class=\"p-field p-col-12 p-md-4\">\n                <CascadeSelect v-model=\"selectedCity\" :options=\"cascadeCountries\" optionLabel=\"cname\" optionGroupLabel=\"name\"\n                    :optionGroupChildren=\"['states', 'cities']\" placeholder=\"CascadeSelect\" class=\"p-invalid\" />\n            </div>\n            <div class=\"p-field p-col-12 p-md-4\">\n                <Dropdown id=\"dropdown\" v-model=\"value7\" :options=\"cities\" optionLabel=\"name\" placeholder=\"Dropdown\" class=\"p-invalid\" />\n            </div>\n            <div class=\"p-field p-col-12 p-md-4\">\n                <MultiSelect id=\"multiselect\" v-model=\"value8\" :options=\"cities\" optionLabel=\"name\" placeholder=\"MultiSelect\" class=\"p-invalid\" />\n            </div>\n            <div class=\"p-field p-col-12 p-md-4\">\n                <TreeSelect id=\"treeselect\" v-model=\"selectedNode\" :options=\"nodes\" placeholder=\"TreeSelect\" class=\"p-invalid\"></TreeSelect>\n            </div>\n            <div class=\"p-field p-col-12 p-md-4\">\n                <Password id=\"password\" v-model=\"value10\" placeholder=\"Password\" class=\"p-invalid\" />\n            </div>\n            <div class=\"p-field p-col-12 p-md-4\">\n                <Textarea id=\"textarea\" v-model=\"value9\" rows=\"3\" placeholder=\"Textarea\" class=\"p-invalid\" />\n            </div>\n        </div>\n    </div>                   \n</template>\n\n<script>\nimport CountryService from './service/CountryService';\nimport NodeService from './service/NodeService';\n\nexport default {\n    data() {\n        return {\n            countries: null,\n            filteredCountries: null,\n            cities: [\n                {name: 'New York', code: 'NY'},\n                {name: 'Rome', code: 'RM'},\n                {name: 'London', code: 'LDN'},\n                {name: 'Istanbul', code: 'IST'},\n                {name: 'Paris', code: 'PRS'}\n            ],\n            value1: null,\n            value2: null,\n            value3: null,\n            value4: null,\n            value5: null,\n            value6: null,\n            value7: null,\n            value8: null,\n            value9: null,\n            value10: null,\n            selectedCity: null,\n            nodes: null,\n            selectedNode: null,\n            cascadeCountries: [\n                {\n                    name: 'Australia',\n                    code: 'AU',\n                    states: [\n                        {\n                            name: 'New South Wales',\n                            cities: [\n                                {cname: 'Sydney', code: 'A-SY'},\n                                {cname: 'Newcastle', code: 'A-NE'},\n                                {cname: 'Wollongong', code: 'A-WO'}\n                            ]\n                        },\n                        {\n                            name: 'Queensland',\n                            cities: [\n                                {cname: 'Brisbane', code: 'A-BR'},\n                                {cname: 'Townsville', code: 'A-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'Canada', \n                    code: 'CA',\n                    states: [\n                        {\n                            name: 'Quebec',\n                            cities: [\n                                {cname: 'Montreal', code: 'C-MO'},\n                                {cname: 'Quebec City', code: 'C-QU'}\n                            ]\n                        },\n                        {\n                            name: 'Ontario',\n                            cities: [\n                                {cname: 'Ottawa', code: 'C-OT'},\n                                {cname: 'Toronto', code: 'C-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'United States',\n                    code: 'US',\n                    states: [\n                        {\n                            name: 'California',\n                            cities: [\n                                {cname: 'Los Angeles', code: 'US-LA'},\n                                {cname: 'San Diego', code: 'US-SD'},\n                                {cname: 'San Francisco', code: 'US-SF'}\n                            ]\n                        },\n                        {\n                            name: 'Florida',\n                            cities: [\n                                {cname: 'Jacksonville', code: 'US-JA'},\n                                {cname: 'Miami', code: 'US-MI'},\n                                {cname: 'Tampa', code: 'US-TA'},\n                                {cname: 'Orlando', code: 'US-OR'}\n                            ]\n                        },\n                        {\n                            name: 'Texas',\n                            cities: [\n                                {cname: 'Austin', code: 'US-AU'},\n                                {cname: 'Dallas', code: 'US-DA'},\n                                {cname: 'Houston', code: 'US-HO'}\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    countryService: null,\n    nodeService: null,\n    created() {\n        this.countryService = new CountryService();\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.countryService.getCountries().then(data => this.countries = data);\n        this.nodeService.getTreeNodes().then(data => this.nodes = data);\n    },\n    methods: {\n        searchCountry(event) {\n            setTimeout(() => {\n                if (!event.query.trim().length) {\n                    this.filteredCountries = [...this.countries];\n                }\n                else {\n                    this.filteredCountries = this.countries.filter((country) => {\n                        return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n                    });\n                }\n            }, 250);\n        }\n    }\n}\n<\\\\/script>\n`\n                },\n                'composition-api': {\n                    tabName :'Composition API Source',\n                    content: `\n<template>\n    <div>\n        <div class=\"p-fluid p-grid\">\n            <div class=\"p-field p-col-12 p-md-4\">\n                <InputText id=\"inputtext\" type=\"text\" v-model=\"value1\" placeholder=\"InputText\" class=\"p-invalid\" />\n            </div>\n            <div class=\"p-field p-col-12 p-md-4\">\n                <AutoComplete v-model=\"value2\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\" placeholder=\"AutoComplete\" class=\"p-invalid\" />\n            </div>\n            <div class=\"p-field p-col-12 p-md-4\">\n                <Calendar id=\"calendar\" v-model=\"value3\" placeholder=\"Calendar\" class=\"p-invalid\" :showIcon=\"true\" />\n            </div>\n            <div class=\"p-field p-col-12 p-md-4\">\n                <Chips id=\"chips\" v-model=\"value4\" placeholder=\"Chips\" class=\"p-invalid\" />\n            </div>\n            <div class=\"p-field p-col-12 p-md-4\">\n                <InputMask id=\"inputmask\" v-model=\"value5\" mask=\"99/99/9999\" slotChar=\"mm/dd/yyyy\" placeholder=\"InputMask\" class=\"p-invalid\" />\n            </div>\n            <div class=\"p-field p-col-12 p-md-4\">\n                <InputNumber id=\"inputnumber\" v-model=\"value6\" placeholder=\"InputNumber\" class=\"p-invalid\" />\n            </div>\n            <div class=\"p-field p-col-12 p-md-4\">\n                <CascadeSelect v-model=\"selectedCity\" :options=\"cascadeCountries\" optionLabel=\"cname\" optionGroupLabel=\"name\"\n                    :optionGroupChildren=\"['states', 'cities']\" placeholder=\"CascadeSelect\" class=\"p-invalid\" />\n            </div>\n            <div class=\"p-field p-col-12 p-md-4\">\n                <Dropdown id=\"dropdown\" v-model=\"value7\" :options=\"cities\" optionLabel=\"name\" placeholder=\"Dropdown\" class=\"p-invalid\" />\n            </div>\n            <div class=\"p-field p-col-12 p-md-4\">\n                <MultiSelect id=\"multiselect\" v-model=\"value8\" :options=\"cities\" optionLabel=\"name\" placeholder=\"MultiSelect\" class=\"p-invalid\" />\n            </div>\n            <div class=\"p-field p-col-12 p-md-4\">\n                <TreeSelect id=\"treeselect\" v-model=\"selectedNode\" :options=\"nodes\" placeholder=\"TreeSelect\" class=\"p-invalid\"></TreeSelect>\n            </div>\n            <div class=\"p-field p-col-12 p-md-4\">\n                <Password id=\"password\" v-model=\"value10\" placeholder=\"Password\" class=\"p-invalid\" />\n            </div>\n            <div class=\"p-field p-col-12 p-md-4\">\n                <Textarea id=\"textarea\" v-model=\"value9\" rows=\"3\" placeholder=\"Textarea\" class=\"p-invalid\" />\n            </div>\n        </div>\n    </div>                   \n</template>\n<script>\nimport { ref, onMounted } from 'vue';\nimport CountryService from './service/CountryService';\nimport NodeService from './service/NodeService';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            countryService.value.getCountries().then(data => countries.value = data);\n            nodeService.value.getTreeNodes().then(data => nodes.value = data);\n        })\n        const countryService = ref(new CountryService());\n        const nodeService = ref(new NodeService());\n        const countries = ref();\n        const filteredCountries = ref();\n        const cities = ref([\n            {name: 'New York', code: 'NY'},\n            {name: 'Rome', code: 'RM'},\n            {name: 'London', code: 'LDN'},\n            {name: 'Istanbul', code: 'IST'},\n            {name: 'Paris', code: 'PRS'}\n        ]);\n        const value1 = ref();\n        const value2 = ref();\n        const value3 = ref();\n        const value4 = ref();\n        const value5 = ref();\n        const value6 = ref();\n        const value7 = ref();\n        const value8 = ref();\n        const value9 = ref();\n        const value10 = ref();\n        const selectedCity = ref();\n        const selectedNode = ref();\n        const nodes = ref();\n        const cascadeCountries = ref([\n            {\n                name: 'Australia',\n                code: 'AU',\n                states: [\n                    {\n                        name: 'New South Wales',\n                        cities: [\n                            {cname: 'Sydney', code: 'A-SY'},\n                            {cname: 'Newcastle', code: 'A-NE'},\n                            {cname: 'Wollongong', code: 'A-WO'}\n                        ]\n                    },\n                    {\n                        name: 'Queensland',\n                        cities: [\n                            {cname: 'Brisbane', code: 'A-BR'},\n                            {cname: 'Townsville', code: 'A-TO'}\n                        ]\n                    },\n                    \n                ]\n            },\n            {\n                name: 'Canada', \n                code: 'CA',\n                states: [\n                    {\n                        name: 'Quebec',\n                        cities: [\n                            {cname: 'Montreal', code: 'C-MO'},\n                            {cname: 'Quebec City', code: 'C-QU'}\n                        ]\n                    },\n                    {\n                        name: 'Ontario',\n                        cities: [\n                            {cname: 'Ottawa', code: 'C-OT'},\n                            {cname: 'Toronto', code: 'C-TO'}\n                        ]\n                    },\n                    \n                ]\n            },\n            {\n                name: 'United States',\n                code: 'US',\n                states: [\n                    {\n                        name: 'California',\n                        cities: [\n                            {cname: 'Los Angeles', code: 'US-LA'},\n                            {cname: 'San Diego', code: 'US-SD'},\n                            {cname: 'San Francisco', code: 'US-SF'}\n                        ]\n                    },\n                    {\n                        name: 'Florida',\n                        cities: [\n                            {cname: 'Jacksonville', code: 'US-JA'},\n                            {cname: 'Miami', code: 'US-MI'},\n                            {cname: 'Tampa', code: 'US-TA'},\n                            {cname: 'Orlando', code: 'US-OR'}\n                        ]\n                    },\n                    {\n                        name: 'Texas',\n                        cities: [\n                            {cname: 'Austin', code: 'US-AU'},\n                            {cname: 'Dallas', code: 'US-DA'},\n                            {cname: 'Houston', code: 'US-HO'}\n                        ]\n                    }\n                ]\n            }\n        ]);\n\n        const searchCountry = (event) => {\n            setTimeout(() => {\n                if (!event.query.trim().length) {\n                    filteredCountries.value = [...countries.value];\n                }\n                else {\n                    filteredCountries.value = countries.value.filter((country) => {\n                        return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n                    });\n                }\n            }, 250);\n        }\n\n        return { countryService, countries, filteredCountries, cities, value1, value2, value3, value4, \n            value5, value6, value7, value8, value9, value10, selectedCity, cascadeCountries, searchCountry,\n            nodes, selectedNode  }\n\n    }\n}\n<\\\\/script>\n`\n                },\n                'browser-source': {\n                    tabName :'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/autocomplete/autocomplete.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/calendar/calendar.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/chips/chips.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/inputmask/inputmask.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/cascadeselect/cascadeselect.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/multiselect/multiselect.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/treeselect/treeselect.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/password/password.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/textarea/textarea.min.js\"><\\\\/script>\n        <script src=\"./CountryService.js\"><\\\\/script>\n        <script src=\"./NodeService.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <div class=\"p-fluid p-grid\">\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <p-inputtext id=\"inputtext\" type=\"text\" v-model=\"value1\" placeholder=\"InputText\" class=\"p-invalid\"></p-inputtext>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <p-autocomplete v-model=\"value2\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\" placeholder=\"AutoComplete\" class=\"p-invalid\"></p-autocomplete>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <p-calendar id=\"calendar\" v-model=\"value3\" placeholder=\"Calendar\" class=\"p-invalid\" :show-icon=\"true\"></p-calendar>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <p-chips id=\"chips\" v-model=\"value4\" placeholder=\"Chips\" class=\"p-invalid\"></p-chips>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <p-inputmask id=\"inputmask\" v-model=\"value5\" mask=\"99/99/9999\" slot-char=\"mm/dd/yyyy\" placeholder=\"InputMask\" class=\"p-invalid\"></p-inputmask>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <p-inputnumber id=\"inputnumber\" v-model=\"value6\" placeholder=\"InputNumber\" class=\"p-invalid\"></p-inputnumber>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <p-cascadeselect v-model=\"selectedCity\" :options=\"cascadeCountries\" option-label=\"cname\" option-group-label=\"name\"\n                        :option-group-children=\"['states', 'cities']\" placeholder=\"CascadeSelect\" class=\"p-invalid\"></p-cascadeselect>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <p-dropdown id=\"dropdown\" v-model=\"value7\" :options=\"cities\" option-label=\"name\" placeholder=\"Dropdown\" class=\"p-invalid\"></p-dropdown>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <p-multiselect id=\"multiselect\" v-model=\"value8\" :options=\"cities\" option-label=\"name\" placeholder=\"MultiSelect\" class=\"p-invalid\"></p-multiselect>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <p-treeselect id=\"treeselect\" v-model=\"selectedNode\" :options=\"nodes\" placeholder=\"TreeSelect\" class=\"p-invalid\"></p-treeselect>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <p-password id=\"password\" v-model=\"value10\" placeholder=\"Password\" class=\"p-invalid\"></p-password>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <p-textarea id=\"textarea\" v-model=\"value9\" rows=\"3\" placeholder=\"Textarea\" class=\"p-invalid\"></p-textarea>\n                </div>\n            </div>\n        </div>                   \n\n        <script type=\"module\">\n        const { createApp, ref, onMounted } = Vue;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    countryService.value.getCountries().then(data => countries.value = data);\n                    nodeService.value.getTreeNodes().then(data => nodes.value = data);\n                })\n                const countryService = ref(new CountryService());\n                const nodeService = ref(new NodeService());\n                const countries = ref();\n                const filteredCountries = ref();\n                const cities = ref([\n                    {name: 'New York', code: 'NY'},\n                    {name: 'Rome', code: 'RM'},\n                    {name: 'London', code: 'LDN'},\n                    {name: 'Istanbul', code: 'IST'},\n                    {name: 'Paris', code: 'PRS'}\n                ]);\n                const value1 = ref();\n                const value2 = ref();\n                const value3 = ref();\n                const value4 = ref();\n                const value5 = ref();\n                const value6 = ref();\n                const value7 = ref();\n                const value8 = ref();\n                const value9 = ref();\n                const value10 = ref();\n                const selectedCity = ref();\n                const selectedNode = ref();\n                const nodes = ref();\n                const cascadeCountries = ref([\n                    {\n                        name: 'Australia',\n                        code: 'AU',\n                        states: [\n                            {\n                                name: 'New South Wales',\n                                cities: [\n                                    {cname: 'Sydney', code: 'A-SY'},\n                                    {cname: 'Newcastle', code: 'A-NE'},\n                                    {cname: 'Wollongong', code: 'A-WO'}\n                                ]\n                            },\n                            {\n                                name: 'Queensland',\n                                cities: [\n                                    {cname: 'Brisbane', code: 'A-BR'},\n                                    {cname: 'Townsville', code: 'A-TO'}\n                                ]\n                            },\n                            \n                        ]\n                    },\n                    {\n                        name: 'Canada', \n                        code: 'CA',\n                        states: [\n                            {\n                                name: 'Quebec',\n                                cities: [\n                                    {cname: 'Montreal', code: 'C-MO'},\n                                    {cname: 'Quebec City', code: 'C-QU'}\n                                ]\n                            },\n                            {\n                                name: 'Ontario',\n                                cities: [\n                                    {cname: 'Ottawa', code: 'C-OT'},\n                                    {cname: 'Toronto', code: 'C-TO'}\n                                ]\n                            },\n                            \n                        ]\n                    },\n                    {\n                        name: 'United States',\n                        code: 'US',\n                        states: [\n                            {\n                                name: 'California',\n                                cities: [\n                                    {cname: 'Los Angeles', code: 'US-LA'},\n                                    {cname: 'San Diego', code: 'US-SD'},\n                                    {cname: 'San Francisco', code: 'US-SF'}\n                                ]\n                            },\n                            {\n                                name: 'Florida',\n                                cities: [\n                                    {cname: 'Jacksonville', code: 'US-JA'},\n                                    {cname: 'Miami', code: 'US-MI'},\n                                    {cname: 'Tampa', code: 'US-TA'},\n                                    {cname: 'Orlando', code: 'US-OR'}\n                                ]\n                            },\n                            {\n                                name: 'Texas',\n                                cities: [\n                                    {cname: 'Austin', code: 'US-AU'},\n                                    {cname: 'Dallas', code: 'US-DA'},\n                                    {cname: 'Houston', code: 'US-HO'}\n                                ]\n                            }\n                        ]\n                    }\n                ]);\n\n                const searchCountry = (event) => {\n                    setTimeout(() => {\n                        if (!event.query.trim().length) {\n                            filteredCountries.value = [...countries.value];\n                        }\n                        else {\n                            filteredCountries.value = countries.value.filter((country) => {\n                                return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n                            });\n                        }\n                    }, 250);\n                }\n\n                return { countryService, countries, filteredCountries, cities, value1, value2, value3, value4, \n                    value5, value6, value7, value8, value9, value10, selectedCity, cascadeCountries, searchCountry,\n                    nodes, selectedNode  }\n\n            },\n            components: {\n                \"p-inputtext\": primevue.inputtext,\n                \"p-autocomplete\": primevue.autocomplete,\n                \"p-calendar\": primevue.calendar,\n                \"p-chips\": primevue.chips,\n                \"p-inputmask\": primevue.inputmask,\n                \"p-inputnumber\": primevue.inputnumber,\n                \"p-cascadeselect\": primevue.cascadeselect,\n                \"p-dropdown\": primevue.dropdown,\n                \"p-multiselect\": primevue.multiselect,\n                \"p-treeselect\": primevue.treeselect,\n                \"p-textarea\": primevue.textarea,\n                \"p-password\": primevue.password\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\\\/script>\n\n`\n                }\n            }\n        }\n    },\n    countryService: null,\n    nodeService: null,\n    created() {\n        this.countryService = new CountryService();\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.countryService.getCountries().then(data => this.countries = data);\n        this.nodeService.getTreeNodes().then(data => this.nodes = data);\n    },\n    methods: {\n        searchCountry(event) {\n            setTimeout(() => {\n                if (!event.query.trim().length) {\n                    this.filteredCountries = [...this.countries];\n                }\n                else {\n                    this.filteredCountries = this.countries.filter((country) => {\n                        return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n                    });\n                }\n            }, 250);\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\ntextarea {\n    resize: none;\n}\n</style>"]}]}