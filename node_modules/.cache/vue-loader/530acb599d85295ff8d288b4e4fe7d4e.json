{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/liveeditor/LiveEditor.vue?vue&type=template&id=6eb57a36","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/liveeditor/LiveEditor.vue","mtime":1634589566272},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8c3BhbiB2LWlmPSJzaG93RWRpdG9yIiBjbGFzcz0icC1kLWZsZXggcC1qYy1lbmQiPgogICAgICAgIDxTcGxpdEJ1dHRvbiA6bW9kZWw9Iml0ZW1zIiBsYWJlbD0iRWRpdCBpbiBDb2RlU2FuZGJveCIgY2xhc3M9ImxpdmVFZGl0b3JTcGxpdEJ1dHRvbiIgQGNsaWNrPSJvcGVuRGVmYXVsdENTQiIgdi1zaG93PSJmYWxzZSIvPgogICAgPC9zcGFuPgo="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/liveeditor/LiveEditor.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/liveeditor/LiveEditor.vue","sourceRoot":"","sourcesContent":["<template>\n    <span v-if=\"showEditor\" class=\"p-d-flex p-jc-end\">\n        <SplitButton :model=\"items\" label=\"Edit in CodeSandbox\" class=\"liveEditorSplitButton\" @click=\"openDefaultCSB\" v-show=\"false\"/>\n    </span>\n</template>\n\n<script>\nimport EventBus from '@/AppEventBus';\nimport { services, data } from './LiveEditorData';\n\nexport default {\n    data() {\n        return {\n            sandbox_id: null,\n            showCodeHighlight: false,\n            items: [\n                {label: \"Options API\", command: () => { this.postSandboxParameters('options-api') }},\n                {label: \"Composition API\", command: () => { this.postSandboxParameters('composition-api') }},\n                {label: \"Browser Source\", command: () => { this.postSandboxParameters('browser-source') }}\n            ]\n        }\n    },\n    props: {\n        name: {\n            type: String,\n            default: null\n        },\n        sources: {\n            type: Object,\n            default: null\n        },\n        service: {\n            type: Array,\n            default: null\n        },\n        data: {\n            type: Array,\n            default: null\n        },\n        extPages: {\n            type: Array,\n            default: null\n        },\n        dependencies: {\n            type: Object,\n            default: null\n        },\n        extFiles: {\n            type: Object,\n            default: null\n        },\n        component: {\n            type: String,\n            default: null\n        }\n    },\n    runDemoListener: null,\n    mounted() {\n        this.runDemoListener = (type) => {\n            this.postSandboxParameters(type);\n        };\n        EventBus.on('run-demo', this.runDemoListener);\n    },\n    beforeUnmount() {\n        EventBus.off('run-demo', this.runDemoListener);\n    },\n    methods: {\n        postSandboxParameters(sourceType) {\n            fetch('https://codesandbox.io/api/v1/sandboxes/define?json=1', {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify(this.getSandboxParameters(sourceType))\n            })\n            .then(response => response.json())\n            .then(data => window.open(`https://codesandbox.io/s/${data.sandbox_id}`, '_blank'))\n            .catch(() => this.showCodeHighlight = true );\n        },\n\n        createSandboxParameters(sourceType, nameWithExt, files, extDependencies) {\n            const boolExtFiles = !this.extFiles;\n            let extFiles = !boolExtFiles ? {...this.extFiles} : {};\n            let extIndexCSS = extFiles['index.css'] || '';\n            delete extFiles['index.css'];\n\n            const dependencies = require('../../../package.json') ? require('../../../package.json').devDependencies : {};\n\n            let defaultCss = {\n                content: `html {\n        font-size: 14px;\n    }\n\n    body {\n        background-color: #ffffff;\n        font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol;\n        font-weight: normal;\n        color: #495057;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        padding: .5em;\n        margin-bottom: 50px;\n    }\n\n    h1, h2, h3, h4, h5, h6 {\n        margin: 1.5rem 0 1rem 0;\n        font-family: inherit;\n        font-weight: 600;\n        line-height: 1.2;\n        color: inherit;\n    }\n\n    h1 { font-size: 2.5rem; }\n    h2 { font-size: 2rem; }\n    h3 { font-size: 1.75rem; }\n    h4 { font-size: 1.5rem; }\n    h5 { font-size: 1.25rem; }\n    h6 { font-size: 1rem; }\n    p {\n        line-height: 1.5;\n        margin: 0 0 1rem 0;\n    }\n\n    .card {\n        margin-bottom: 2rem;\n    }\n\n    input[type=\"number\"] {\n        -moz-appearance: textfield;\n    }\n\n    input[type=\"number\"]::-webkit-outer-spin-button,\n    input[type=\"number\"]::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n    }\n\n    @keyframes pulse {\n        0% {\n            background-color: rgba(165, 165, 165, 0.1)\n        }\n        50% {\n            background-color: rgba(165, 165, 165, 0.3)\n        }\n        100% {\n            background-color: rgba(165, 165, 165, 0.1)\n        }\n    }\n\n    .customer-badge {\n        border-radius: 2px;\n        padding: .25em .5rem;\n        text-transform: uppercase;\n        font-weight: 700;\n        font-size: 12px;\n        letter-spacing: .3px;\n    }\n\n    .customer-badge.status-qualified {\n        background-color: #C8E6C9;\n        color: #256029;\n    }\n\n    .customer-badge.status-unqualified {\n        background-color: #FFCDD2;\n        color: #C63737;\n    }\n\n    .customer-badge.status-negotiation {\n        background-color: #FEEDAF;\n        color: #8A5340;\n    }\n\n    .customer-badge.status-new {\n        background-color: #B3E5FC;\n        color: #23547B;\n    }\n\n    .customer-badge.status-renewal {\n        background-color: #ECCFFF;\n        color: #694382;\n    }\n\n    .customer-badge.status-proposal {\n        background-color: #FFD8B2;\n        color: #805B36;\n    }\n\n    .product-badge {\n        border-radius: 2px;\n        padding: .25em .5rem;\n        text-transform: uppercase;\n        font-weight: 700;\n        font-size: 12px;\n        letter-spacing: .3px;\n    }\n\n    .product-badge.status-instock {\n        background: #C8E6C9;\n        color: #256029;\n    }\n\n    .product-badge.status-outofstock {\n        background: #FFCDD2;\n        color: #C63737;\n    }\n\n    .product-badge.status-lowstock {\n        background: #FEEDAF;\n        color: #8A5340;\n    }\n\n    .order-badge {\n        border-radius: 2px;\n        padding: .25em .5rem;\n        text-transform: uppercase;\n        font-weight: 700;\n        font-size: 12px;\n        letter-spacing: .3px;\n    }\n\n    .order-badge.order-delivered {\n        background: #C8E6C9;\n        color: #256029;\n    }\n\n    .order-badge.order-cancelled {\n        background: #FFCDD2;\n        color: #C63737;\n    }\n\n    .order-badge.order-pending {\n        background: #FEEDAF;\n        color: #8A5340;\n    }\n\n    .order-badge.order-returned {\n        background: #ECCFFF;\n        color: #694382;\n    }\n\n    .image-text {\n        margin-left: .5rem;\n    }\n\n    .p-multiselect-representative-option {\n        display: inline-block;\n        vertical-align: middle;\n    }\n\n    .p-multiselect-representative-option img {\n        vertical-align: middle;\n        width: 24px;\n    }\n\n    .p-multiselect-representative-option span {\n        margin-top: .125rem;\n    }\n\n    .country-item {\n        display: flex;\n        align-items: center;\n    }\n\n    .country-item img.flag {\n        width: 18px;\n        margin-right: .5rem;\n    }\n\n    .flag {\n        vertical-align: middle;\n    }\n\n    span.flag {\n        width:44px;\n        height:30px;\n        display:inline-block;\n    }\n\n    img.flag {\n        width:30px\n    }\n\n    .true-icon {\n        color: #256029;\n    }\n\n    .false-icon {\n        color: #C63737;\n    }\n    ${extIndexCSS}\n    `\n};\n            \n            if (sourceType === 'browser-source') {\n                return {\n                    files: {\n                        'index.css': defaultCss,\n                        ...files\n                    }\n                }\n            }\n             \n\n            return {\n                files: {\n                    'package.json': {\n                        content: {\n                            main: `src/demo/${nameWithExt}`,\n                            dependencies: {\n                                ...extDependencies,\n                                'vue': dependencies['vue'],\n                                'primevue': '^3.7.2',\n                                'primeflex': dependencies['primeflex'],\n                                'primeicons': dependencies['primeicons'],\n                                '@babel/cli': dependencies['@babel/cli'],\n                                'core-js': dependencies['core-js'],\n                                'vue-router': dependencies['vue-router']\n                            },\n                            devDependencies: {\n                                '@vue/cli-plugin-babel': dependencies['@vue/cli-plugin-babel'],\n                                '@vue/cli-plugin-eslint': dependencies['@vue/cli-plugin-eslint'],\n                                '@vue/cli-service': dependencies['@vue/cli-service'],\n                                '@vue/compiler-sfc': dependencies['@vue/compiler-sfc'],\n                                'eslint': dependencies['eslint'],\n                                'eslint-plugin-vue': dependencies['eslint-plugin-vue']\n                            }\n                        }\n                    },\n                    'babel.config.js': {\n                        content: `module.exports = {\n    presets: [\n        '@vue/cli-plugin-babel/preset'\n    ]\n}`\n                    },\n                    '.eslintrc.js': {\n                        content: `module.exports = {\n  root: true,\n  env: {\n    node: true\n  },\n  'extends': [\n    'plugin:vue/vue3-essential',\n    'eslint:recommended'\n  ],\n  parserOptions: {\n    parser: 'babel-eslint'\n  }\n}`\n                    },\n                    'src/index.css': defaultCss,\n                    ...files,\n                    ...extFiles\n                }\n            }\n        },\n\n        getSandboxParameters(sourceType) {\n            /* eslint-disable */\n            let name = this.name;\n            let extension = '.vue';\n            let extDependencies = this.dependencies || {};\n            let extImport = '';\n            let extElement = '';\n            let content = this.sources[sourceType].content.replaceAll('<\\\\/script>', '<\\/script>');\n            let imports = this.sources[sourceType].imports ? this.sources[sourceType].imports.replaceAll('<\\\\/script>', '<\\/script>') : '';\n            let pages = this.extPages ? this.extPages : '';\n            let _files = {}, element = '';\n\n            if (this.service) {\n                let dataArr = [], serviceArr = [], path = '';\n\n                this.service.forEach(el => {\n                    serviceArr.push(el.split(','))\n                })\n\n                if (this.data) {\n                    this.data.forEach(el => {\n                        dataArr.push(el.split(','))\n                    })\n\n                    if (dataArr) {\n                        dataArr.forEach(el => {\n                            let _path = `${el}.json`;\n                            path = sourceType === 'browser-source' ? _path : `public/demo/data/${_path}`;\n\n                            _files[path] = {\n                                content: data[el]\n                            };\n                        });\n                    }\n                }\n\n                serviceArr.forEach(serv => {\n                    path = sourceType === 'browser-source' ? `${serv}.js` : `src/service/${serv}.js`;\n                    let _content = sourceType === 'browser-source' ? \n                                `${services[serv].replaceAll('export default class', 'class').replaceAll('demo/data/', './')}` : \n                                `${services[serv]}`;\n\n                    _files[path] = {\n                        content: _content\n                    }\n                })\n            }\n\n            if (sourceType === 'browser-source') {\n                _files['index.html'] = {\n                    content: `<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\" />\n        <title>${name}</title>\n\n        <!-- PrimeVue -->\n        <link href=\"https://unpkg.com/primevue@^3/resources/themes/saga-blue/theme.css\" rel=\"stylesheet\" />\n        <link href=\"https://unpkg.com/primevue@^3/resources/primevue.min.css\" rel=\"stylesheet\" />\n        <link href=\"https://unpkg.com/primeflex@2.0.0/primeflex.min.css\" rel=\"stylesheet\" />\n        <link href=\"https://unpkg.com/primeicons/primeicons.css\" rel=\"stylesheet\" />\n\n        <!-- Dependencies -->\n        <script src=\"https://unpkg.com/vue@next\"><\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/core/core.js\"><\\/script>\n\n        <!-- Demo -->\n        ${imports}\n        <link href=\"./index.css\" rel=\"stylesheet\" />\n    </head>\n    <body>${content}\n    </body>\n</html>`\n                }\n            }\n            else {\n                element += `import ${name} from \"./${name}.vue\"`;\n\n                _files['src/main.js'] = {\n                    content: `import \"primeflex/primeflex.css\";\nimport \"primevue/resources/themes/saga-blue/theme.css\";\nimport \"primevue/resources/primevue.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"./index.css\";\n\nimport { createApp } from \"vue\";\n${element}\nimport { router } from \"./router\";\nimport PrimeVue from \"primevue/config\";\nimport AutoComplete from 'primevue/autocomplete';\nimport Accordion from 'primevue/accordion';\nimport AccordionTab from 'primevue/accordiontab';\nimport Avatar from 'primevue/avatar';\nimport AvatarGroup from 'primevue/avatargroup';\nimport Badge from 'primevue/badge';\nimport BadgeDirective from \"primevue/badgedirective\";\nimport BlockUI from 'primevue/blockui';\nimport Button from 'primevue/button';\nimport Breadcrumb from 'primevue/breadcrumb';\nimport Calendar from 'primevue/calendar';\nimport Card from 'primevue/card';\nimport CascadeSelect from 'primevue/cascadeselect';\nimport Carousel from 'primevue/carousel';\nimport Checkbox from 'primevue/checkbox';\nimport Chip from 'primevue/chip';\nimport Chips from 'primevue/chips';\nimport ColorPicker from 'primevue/colorpicker';\nimport Column from 'primevue/column';\nimport ColumnGroup from 'primevue/columngroup';\nimport ConfirmDialog from 'primevue/confirmdialog';\nimport ConfirmPopup from 'primevue/confirmpopup';\nimport ConfirmationService from 'primevue/confirmationservice';\nimport ContextMenu from 'primevue/contextmenu';\nimport DataTable from 'primevue/datatable';\nimport DataView from 'primevue/dataview';\nimport DataViewLayoutOptions from 'primevue/dataviewlayoutoptions';\nimport DeferredContent from 'primevue/deferredcontent';\nimport Dialog from 'primevue/dialog';\nimport Divider from 'primevue/divider';\nimport Dock from 'primevue/dock';\nimport Dropdown from 'primevue/dropdown';\nimport Fieldset from 'primevue/fieldset';\nimport FileUpload from 'primevue/fileupload';\nimport Galleria from 'primevue/galleria';\nimport Image from 'primevue/image';\nimport InlineMessage from 'primevue/inlinemessage';\nimport Inplace from 'primevue/inplace';\nimport InputSwitch from 'primevue/inputswitch';\nimport InputText from 'primevue/inputtext';\nimport InputMask from 'primevue/inputmask';\nimport InputNumber from 'primevue/inputnumber';\nimport Knob from 'primevue/knob';\nimport Listbox from 'primevue/listbox';\nimport MegaMenu from 'primevue/megamenu';\nimport Menu from 'primevue/menu';\nimport Menubar from 'primevue/menubar';\nimport Message from 'primevue/message';\nimport MultiSelect from 'primevue/multiselect';\nimport OrderList from 'primevue/orderlist';\nimport OrganizationChart from 'primevue/organizationchart';\nimport OverlayPanel from 'primevue/overlaypanel';\nimport Paginator from 'primevue/paginator';\nimport Panel from 'primevue/panel';\nimport PanelMenu from 'primevue/panelmenu';\nimport Password from 'primevue/password';\nimport PickList from 'primevue/picklist';\nimport ProgressBar from 'primevue/progressbar';\nimport ProgressSpinner from 'primevue/progressspinner';\nimport Rating from 'primevue/rating';\nimport RadioButton from 'primevue/radiobutton';\nimport Ripple from 'primevue/ripple';\nimport Row from 'primevue/row';\nimport SelectButton from 'primevue/selectbutton';\nimport ScrollPanel from 'primevue/scrollpanel';\nimport ScrollTop from 'primevue/scrolltop';\nimport Skeleton from 'primevue/skeleton';\nimport Slider from 'primevue/slider';\nimport Sidebar from 'primevue/sidebar';\nimport SpeedDial from 'primevue/speeddial';\nimport SplitButton from 'primevue/splitbutton';\nimport Splitter from 'primevue/splitter';\nimport SplitterPanel from 'primevue/splitterpanel';\nimport Steps from 'primevue/steps';\nimport StyleClass from 'primevue/styleclass';\nimport TabMenu from 'primevue/tabmenu';\nimport TieredMenu from 'primevue/tieredmenu';\nimport Textarea from 'primevue/textarea';\nimport Toast from 'primevue/toast';\nimport ToastService from 'primevue/toastservice';\nimport Toolbar from 'primevue/toolbar';\nimport TabView from 'primevue/tabview';\nimport TabPanel from 'primevue/tabpanel';\nimport Tag from 'primevue/tag';\nimport Terminal from 'primevue/terminal';\nimport Timeline from 'primevue/timeline';\nimport ToggleButton from 'primevue/togglebutton';\nimport Tooltip from 'primevue/tooltip';\nimport Tree from 'primevue/tree';\nimport TreeSelect from 'primevue/treeselect';\nimport TreeTable from 'primevue/treetable';\nimport TriStateCheckbox from 'primevue/tristatecheckbox';\nimport VirtualScroller from 'primevue/virtualscroller';\n${extImport}\n\nconst app = createApp(${name});\n\napp.use(PrimeVue, { ripple: true });\napp.use(ConfirmationService);\napp.use(ToastService);\napp.use(router);\n\napp.directive('tooltip', Tooltip);\napp.directive('badge', BadgeDirective);\napp.directive('ripple', Ripple);\napp.directive('styleclass', StyleClass);\n\napp.component('Accordion', Accordion);\napp.component('AccordionTab', AccordionTab);\napp.component('AutoComplete', AutoComplete);\napp.component('Avatar', Avatar);\napp.component('AvatarGroup', AvatarGroup);\napp.component('Badge', Badge);\napp.component('BlockUI', BlockUI);\napp.component('Breadcrumb', Breadcrumb);\napp.component('Button', Button);\napp.component('Calendar', Calendar);\napp.component('Card', Card);\napp.component('Carousel', Carousel);\napp.component('CascadeSelect', CascadeSelect);\napp.component('Checkbox', Checkbox);\napp.component('Chip', Chip);\napp.component('Chips', Chips);\napp.component('ColorPicker', ColorPicker);\napp.component('Column', Column);\napp.component('ColumnGroup', ColumnGroup);\napp.component('ConfirmDialog', ConfirmDialog);\napp.component('ConfirmPopup', ConfirmPopup);\napp.component('ContextMenu', ContextMenu);\napp.component('DataTable', DataTable);\napp.component('DataView', DataView);\napp.component('DataViewLayoutOptions', DataViewLayoutOptions);\napp.component('DeferredContent', DeferredContent);\napp.component('Dialog', Dialog);\napp.component('Divider', Divider);\napp.component('Dock', Dock);\napp.component('Dropdown', Dropdown);\napp.component('Fieldset', Fieldset);\napp.component('FileUpload', FileUpload);\napp.component('Galleria', Galleria);\napp.component('Image', Image);\napp.component('InlineMessage', InlineMessage);\napp.component('Inplace', Inplace);\napp.component('InputMask', InputMask);\napp.component('InputNumber', InputNumber);\napp.component('InputSwitch', InputSwitch);\napp.component('InputText', InputText);\napp.component('Knob', Knob);\napp.component('Listbox', Listbox);\napp.component('MegaMenu', MegaMenu);\napp.component('Menu', Menu);\napp.component('Menubar', Menubar);\napp.component('Message', Message);\napp.component('MultiSelect', MultiSelect);\napp.component('OrderList', OrderList);\napp.component('OrganizationChart', OrganizationChart);\napp.component('OverlayPanel', OverlayPanel);\napp.component('Paginator', Paginator);\napp.component('Panel', Panel);\napp.component('PanelMenu', PanelMenu);\napp.component('Password', Password);\napp.component('PickList', PickList);\napp.component('ProgressBar', ProgressBar);\napp.component('ProgressSpinner', ProgressSpinner);\napp.component('RadioButton', RadioButton);\napp.component('Rating', Rating);\napp.component('Row', Row);\napp.component('SelectButton', SelectButton);\napp.component('ScrollPanel', ScrollPanel);\napp.component('ScrollTop', ScrollTop);\napp.component('Slider', Slider);\napp.component('Sidebar', Sidebar);\napp.component('Skeleton', Skeleton);\napp.component('SpeedDial', SpeedDial);\napp.component('SplitButton', SplitButton);\napp.component('Splitter', Splitter);\napp.component('SplitterPanel', SplitterPanel);\napp.component('Steps', Steps);\napp.component('TabMenu', TabMenu);\napp.component('TabView', TabView);\napp.component('TabPanel', TabPanel);\napp.component('Tag', Tag);\napp.component('Textarea', Textarea);\napp.component('Terminal', Terminal);\napp.component('TieredMenu', TieredMenu);\napp.component('Timeline', Timeline);\napp.component('Toast', Toast);\napp.component('Toolbar', Toolbar);\napp.component('ToggleButton', ToggleButton);\napp.component('Tree', Tree);\napp.component('TreeSelect', TreeSelect);\napp.component('TreeTable', TreeTable);\napp.component('TriStateCheckbox', TriStateCheckbox);\napp.component('VirtualScroller', VirtualScroller);\n${extElement}\n\napp.mount(\"#app\");\n`\n                }\n\n                _files['public/index.html'] = {\n                    content: `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\" />\n    <link href=\"https://unpkg.com/primeicons/primeicons.css\" rel=\"stylesheet\">\n</head>\n<body>\n    <div id=\"app\"></div>\n</body>\n</html>\n`\n                }\n\n                _files[`src/${name}${extension}`] = {\n                    content: `${content}\n`\n                }\n\n                if (this.component) {\n                    extImport += `import ${this.component} from 'primevue/${this.component.toLowerCase()}';`\n                    extElement += `app.component('${this.component}', ${this.component});`;\n                }\n\n                if (pages) {\n                    let routes = [], routeImports = '';\n\n                    pages.forEach((page, i) => {\n                        _files[`src/components/${page.tabName}.vue`] = {\n                            'content': `${page.content.replace('<\\\\/script>', '<\\/script>')}`\n                        }\n\n                        let route = '';\n\n                        routeImports += `import ${page.tabName} from './components/${page.tabName}.vue';\n    `;\n\n                        if(i === 0) {\n                            route += `{\n        path: \"/\",\n        component: ${page.tabName}\n    }`;\n                        }\n                        else {\n                            route += `{\n        path: \"/${page.tabName.slice(0, -4).toLowerCase()}\",\n        component: ${page.tabName}\n    }`;\n                        }\n\n                        routes.push(route);\n                    })\n\n                    _files['src/router.js'] = {\n                        'content': `import { createRouter, createWebHistory } from \"vue-router\";\n${routeImports}\nexport const router = createRouter({\n    history: createWebHistory(),\n    routes: [\n        ${routes}\n    ]\n});\n`\n                    }\n                }\n                else {\n                    _files[`src/router.js`] = {\n                        content: `import { createRouter, createWebHistory } from \"vue-router\";\n    ${element}\n\n    export const router = createRouter({\n    history: createWebHistory(),\n    routes: [{ path: \"/\", component: ${name} }]\n});`\n                    }\n                }\n            }\n\n            return this.createSandboxParameters(sourceType, `${name}${extension}`, _files, extDependencies);\n        },\n\n        openDefaultCSB() {\n            this.postSandboxParameters(this.defaultSourceType);\n        }\n    },\n    computed: {\n        showEditor() {\n            return this.$appState.codeSandbox;\n        },\n        defaultSourceType() {\n            return this.$appState.sourceType;\n        }\n    }\n}\n</script>\n"]}]}