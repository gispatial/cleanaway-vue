{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/chips/Chips.vue?vue&type=style&index=0&id=16bb85bf&lang=css","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/chips/Chips.vue","mtime":1634589566211},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/css-loader/dist/cjs.js","mtime":1634585948787},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/postcss-loader/src/index.js","mtime":1634585949822},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5wLWNoaXBzIHsKICAgIGRpc3BsYXk6IGlubGluZS1mbGV4Owp9CgoucC1jaGlwcy1tdWx0aXBsZS1jb250YWluZXIgewogICAgbWFyZ2luOiAwOwogICAgcGFkZGluZzogMDsKICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsKICAgIGN1cnNvcjogdGV4dDsKICAgIG92ZXJmbG93OiBoaWRkZW47CiAgICBkaXNwbGF5OiBmbGV4OwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIGZsZXgtd3JhcDogd3JhcDsKfQoKLnAtY2hpcHMtdG9rZW4gewogICAgY3Vyc29yOiBkZWZhdWx0OwogICAgZGlzcGxheTogaW5saW5lLWZsZXg7CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgZmxleDogMCAwIGF1dG87Cn0KCi5wLWNoaXBzLWlucHV0LXRva2VuIHsKICAgIGZsZXg6IDEgMSBhdXRvOwogICAgZGlzcGxheTogaW5saW5lLWZsZXg7Cn0KCi5wLWNoaXBzLXRva2VuLWljb24gewogICAgY3Vyc29yOiBwb2ludGVyOwp9CgoucC1jaGlwcy1pbnB1dC10b2tlbiBpbnB1dCB7CiAgICBib3JkZXI6IDAgbm9uZTsKICAgIG91dGxpbmU6IDAgbm9uZTsKICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OwogICAgbWFyZ2luOiAwOwogICAgcGFkZGluZzogMDsKICAgIGJveC1zaGFkb3c6IG5vbmU7CiAgICBib3JkZXItcmFkaXVzOiAwOwogICAgd2lkdGg6IDEwMCU7Cn0KCi5wLWZsdWlkIC5wLWNoaXBzIHsKICAgIGRpc3BsYXk6IGZsZXg7Cn0K"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/chips/Chips.vue"],"names":[],"mappings":"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","file":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/chips/Chips.vue","sourceRoot":"","sourcesContent":["<template>\n    <div :class=\"containerClass\" :style=\"style\">\n        <ul :class=\"['p-inputtext p-chips-multiple-container', {'p-disabled': $attrs.disabled, 'p-focus': focused}]\" @click=\"onWrapperClick()\">\n            <li v-for=\"(val,i) of modelValue\" :key=\"`${i}_${val}`\" class=\"p-chips-token\">\n                <slot name=\"chip\" :value=\"val\">\n                    <span class=\"p-chips-token-label\">{{val}}</span>\n                </slot>\n                <span class=\"p-chips-token-icon pi pi-times-circle\" @click=\"removeItem($event, i)\"></span>\n            </li>\n            <li class=\"p-chips-input-token\">\n                <input ref=\"input\" type=\"text\" v-bind=\"$attrs\" @focus=\"onFocus\" @blur=\"onBlur($event)\" @input=\"onInput\" @keydown=\"onKeyDown($event)\" @paste=\"onPaste($event)\"\n                     :disabled=\"$attrs.disabled || maxedOut\">\n            </li>\n        </ul>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'Chips',\n    inheritAttrs: false,\n    emits: ['update:modelValue', 'add', 'remove'],\n    props: {\n        modelValue: {\n            type: Array,\n            default: null\n        },\n        max: {\n            type: Number,\n            default: null\n        },\n        separator: {\n            type: String,\n            default: null\n        },\n        addOnBlur: {\n            type: Boolean,\n            default: null\n        },\n        allowDuplicate: {\n            type: Boolean,\n            default: true\n        },\n        class: null,\n        style: null\n    },\n    data() {\n        return {\n            inputValue: null,\n            focused: false\n        };\n    },\n    methods: {\n        onWrapperClick() {\n            this.$refs.input.focus();\n        },\n        onInput(event) {\n            this.inputValue = event.target.value;\n        },\n        onFocus() {\n            this.focused = true;\n        },\n        onBlur(event) {\n            this.focused = false;\n            if (this.addOnBlur) {\n                this.addItem(event, event.target.value, false);\n            }\n        },\n        onKeyDown(event) {\n            const inputValue = event.target.value;\n\n            switch(event.which) {\n                //backspace\n                case 8:\n                    if (inputValue.length === 0 && this.modelValue && this.modelValue.length > 0) {\n                        this.removeItem(event, this.modelValue.length - 1);\n                    }\n                break;\n\n                //enter\n                case 13:\n                    if (inputValue && inputValue.trim().length && !this.maxedOut) {\n                        this.addItem(event, inputValue, true);\n                    }\n                break;\n\n                default:\n                    if (this.separator) {\n                        if (this.separator === ',' && event.which === 188) {\n                            this.addItem(event, inputValue, true);\n                        }\n                    }\n                break;\n            }\n        },\n        onPaste(event) {\n            if (this.separator) {\n                let pastedData = (event.clipboardData || window['clipboardData']).getData('Text');\n                if (pastedData) {\n                    let value = this.modelValue || [];\n                    let pastedValues = pastedData.split(this.separator);\n                    pastedValues = pastedValues.filter(val => (this.allowDuplicate || value.indexOf(val) === -1));\n                    value = [...value, ...pastedValues];\n                    this.updateModel(event, value, true);\n                }\n            }\n        },\n        updateModel(event, value, preventDefault) {\n            this.$emit('update:modelValue', value);\n            this.$emit('add', {\n                originalEvent: event,\n                value: value\n            });\n            this.$refs.input.value = '';\n            this.inputValue = '';\n\n            if (preventDefault) {\n                event.preventDefault();\n            }\n        },\n        addItem(event, item, preventDefault) {\n            if (item && item.trim().length) {\n                let value = this.modelValue ? [...this.modelValue]: [];\n                if (this.allowDuplicate || value.indexOf(item) === -1) {\n                    value.push(item);\n                    this.updateModel(event, value, preventDefault);\n                }\n            }\n        },\n        removeItem(event, index) {\n            if (this.$attrs.disabled) {\n                return;\n            }\n\n            let values = [...this.modelValue];\n            const removedItem = values.splice(index, 1);\n            this.$emit('update:modelValue', values);\n            this.$emit('remove', {\n                originalEvent: event,\n                value: removedItem\n            });\n        }\n    },\n    computed: {\n        maxedOut() {\n            return this.max && this.modelValue && this.max === this.modelValue.length;\n        },\n        containerClass() {\n            return ['p-chips p-component p-inputwrapper', this.class, {\n                'p-inputwrapper-filled': ((this.modelValue && this.modelValue.length) || (this.inputValue && this.inputValue.length)),\n                'p-inputwrapper-focus': this.focused\n            }];\n        }\n    }\n}\n</script>\n\n<style>\n.p-chips {\n    display: inline-flex;\n}\n\n.p-chips-multiple-container {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    cursor: text;\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n}\n\n.p-chips-token {\n    cursor: default;\n    display: inline-flex;\n    align-items: center;\n    flex: 0 0 auto;\n}\n\n.p-chips-input-token {\n    flex: 1 1 auto;\n    display: inline-flex;\n}\n\n.p-chips-token-icon {\n    cursor: pointer;\n}\n\n.p-chips-input-token input {\n    border: 0 none;\n    outline: 0 none;\n    background-color: transparent;\n    margin: 0;\n    padding: 0;\n    box-shadow: none;\n    border-radius: 0;\n    width: 100%;\n}\n\n.p-fluid .p-chips {\n    display: flex;\n}\n</style>\n"]}]}