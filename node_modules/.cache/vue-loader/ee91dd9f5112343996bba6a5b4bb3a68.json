{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/knob/Knob.vue?vue&type=template&id=472f71a2","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/knob/Knob.vue","mtime":1634589566224},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8ZGl2IDpjbGFzcz0iY29udGFpbmVyQ2xhc3MiPgogICAgICAgIDxzdmcgdmlld0JveD0iMCAwIDEwMCAxMDAiIDp3aWR0aD0ic2l6ZSIgOmhlaWdodD0ic2l6ZSIgQGNsaWNrPSJvbkNsaWNrIiBAbW91c2Vkb3duPSJvbk1vdXNlRG93biIgQG1vdXNldXA9Im9uTW91c2VVcCIKICAgICAgICAgICAgQHRvdWNoc3RhcnQ9Im9uVG91Y2hTdGFydCIgQHRvdWNoZW5kPSJvblRvdWNoRW5kIj4KICAgICAgICAgICAgPHBhdGggOmQ9InJhbmdlUGF0aCIgOnN0cm9rZS13aWR0aD0ic3Ryb2tlV2lkdGgiIDpzdHJva2U9InJhbmdlQ29sb3IiIGNsYXNzPSJwLWtub2ItcmFuZ2UiPjwvcGF0aD4KICAgICAgICAgICAgPHBhdGggOmQ9InZhbHVlUGF0aCIgOnN0cm9rZS13aWR0aD0ic3Ryb2tlV2lkdGgiIDpzdHJva2U9InZhbHVlQ29sb3IiIGNsYXNzPSJwLWtub2ItdmFsdWUiPjwvcGF0aD4KICAgICAgICAgICAgPHRleHQgdi1pZj0ic2hvd1ZhbHVlIiA6eD0iNTAiIDp5PSI1NyIgdGV4dC1hbmNob3I9Im1pZGRsZSIgOmZpbGw9InRleHRDb2xvciIgY2xhc3M9InAta25vYi10ZXh0Ij57e3ZhbHVlVG9EaXNwbGF5fX08L3RleHQ+CiAgICAgICAgPC9zdmc+CiAgICA8L2Rpdj4K"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/knob/Knob.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxjH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjfile":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/knob/Knob.vue","sourceRoot":"","sourcesContent":["<template>\n    <div :class=\"containerClass\">\n        <svg viewBox=\"0 0 100 100\" :width=\"size\" :height=\"size\" @click=\"onClick\" @mousedown=\"onMouseDown\" @mouseup=\"onMouseUp\"\n            @touchstart=\"onTouchStart\" @touchend=\"onTouchEnd\">\n            <path :d=\"rangePath\" :stroke-width=\"strokeWidth\" :stroke=\"rangeColor\" class=\"p-knob-range\"></path>\n            <path :d=\"valuePath\" :stroke-width=\"strokeWidth\" :stroke=\"valueColor\" class=\"p-knob-value\"></path>\n            <text v-if=\"showValue\" :x=\"50\" :y=\"57\" text-anchor=\"middle\" :fill=\"textColor\" class=\"p-knob-text\">{{valueToDisplay}}</text>\n        </svg>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'Knob',\n    emits: ['update:modelValue', 'change'],\n    data() {\n        return {\n            radius: 40,\n            midX: 50,\n            midY: 50,\n            minRadians: 4 * Math.PI / 3,\n            maxRadians: -Math.PI / 3\n        }\n    },\n    props: {\n        modelValue: {\n            type: Number,\n            default: null\n        },\n        size: {\n            type: Number,\n            default: 100\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        readonly: {\n            type: Boolean,\n            default: false\n        },\n        step: {\n            type: Number,\n            default: 1\n        },\n        min: {\n            type: Number,\n            default: 0\n        },\n        max: {\n            type: Number,\n            default: 100\n        },\n        valueColor: {\n            type: String,\n            default: 'var(--primary-color, Black)'\n        },\n        rangeColor: {\n            type: String,\n            default: 'var(--surface-d, LightGray)'\n        },\n        textColor: {\n            type: String,\n            default: 'var(--text-color-secondary, Black)'\n        },\n        strokeWidth: {\n            type: Number,\n            default: 14\n        },\n        showValue: {\n            type: Boolean,\n            default: true\n        },\n        valueTemplate: {\n            type: String,\n            default: \"{value}\"\n        }\n    },\n    methods: {\n        updateValue(offsetX, offsetY) {\n            let dx = offsetX - this.size / 2;\n            let dy =  this.size / 2 - offsetY;\n            let angle = Math.atan2(dy, dx);\n            let start = -Math.PI / 2 - Math.PI / 6;\n            this.updateModel(angle, start);\n        },\n        updateModel(angle, start) {\n            let mappedValue;\n            if (angle > this.maxRadians)\n                mappedValue = this.mapRange(angle, this.minRadians, this.maxRadians, this.min, this.max);\n            else if (angle < start)\n                mappedValue = this.mapRange(angle + 2 * Math.PI, this.minRadians, this.maxRadians, this.min, this.max);\n            else\n                return;\n\n            let newValue = Math.round((mappedValue - this.min) / this.step) * this.step + this.min;\n            this.$emit('update:modelValue', newValue);\n            this.$emit('change', newValue);\n        },\n        mapRange(x, inMin, inMax, outMin, outMax) {\n            return (x - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;\n        },\n        onClick(event) {\n            if (!this.disabled && !this.readonly) {\n                this.updateValue(event.offsetX, event.offsetY);\n            }\n        },\n        onMouseDown(event) {\n            if (!this.disabled && !this.readonly) {\n                window.addEventListener('mousemove', this.onMouseMove);\n                window.addEventListener('mouseup', this.onMouseUp);\n                event.preventDefault();\n            }\n        },\n        onMouseUp(event) {\n            if (!this.disabled && !this.readonly) {\n                window.removeEventListener('mousemove', this.onMouseMove);\n                window.removeEventListener('mouseup', this.onMouseUp);\n                event.preventDefault();\n            }\n        },\n        onTouchStart(event) {\n            if (!this.disabled && !this.readonly) {\n                window.addEventListener('touchmove', this.onTouchMove);\n                window.addEventListener('touchend', this.onTouchEnd);\n                event.preventDefault();\n            }\n        },\n        onTouchEnd(event) {\n            if (!this.disabled && !this.readonly) {\n                window.removeEventListener('touchmove', this.onTouchMove);\n                window.removeEventListener('touchend', this.onTouchEnd);\n                event.preventDefault();\n            }\n        },\n        onMouseMove(event) {\n            if (!this.disabled && !this.readonly) {\n                this.updateValue(event.offsetX, event.offsetY);\n                event.preventDefault();\n            }\n        },\n        onTouchMove(event) {\n            if (!this.disabled && !this.readonly && event.touches.length == 1) {\n                const rect = this.$el.getBoundingClientRect();\n                const touch = event.targetTouches.item(0);\n                const offsetX = touch.clientX - rect.left;\n                const offsetY = touch.clientY - rect.top;\n                this.updateValue(offsetX, offsetY);\n            }\n        }\n    },\n    computed: {\n        containerClass() {\n            return [\n                'p-knob p-component', {\n                    'p-disabled': this.disabled\n                }\n            ];\n        },\n        rangePath() {\n            return `M ${this.minX} ${this.minY} A ${this.radius} ${this.radius} 0 1 1 ${this.maxX} ${this.maxY}`;\n        },\n        valuePath() {\n            return `M ${this.zeroX} ${this.zeroY} A ${this.radius} ${this.radius} 0 ${this.largeArc} ${this.sweep} ${this.valueX} ${this.valueY}`;\n        },\n        zeroRadians() {\n            if (this.min > 0 && this.max > 0)\n                return this.mapRange(this.min, this.min, this.max, this.minRadians, this.maxRadians);\n            else\n                return this.mapRange(0, this.min, this.max, this.minRadians, this.maxRadians);\n        },\n        valueRadians() {\n            return this.mapRange(this.modelValue, this.min, this.max, this.minRadians, this.maxRadians);\n        },\n        minX() {\n            return this.midX + Math.cos(this.minRadians) * this.radius;\n        },\n        minY() {\n            return this.midY - Math.sin(this.minRadians) * this.radius;\n        },\n        maxX() {\n            return this.midX + Math.cos(this.maxRadians) * this.radius;\n        },\n        maxY() {\n            return this.midY - Math.sin(this.maxRadians) * this.radius;\n        },\n        zeroX() {\n            return this.midX + Math.cos(this.zeroRadians) * this.radius;\n        },\n        zeroY() {\n            return this.midY - Math.sin(this.zeroRadians) * this.radius;\n        },\n        valueX() {\n            return this.midX + Math.cos(this.valueRadians) * this.radius;\n        },\n        valueY() {\n            return this.midY - Math.sin(this.valueRadians) * this.radius;\n        },\n        largeArc() {\n            return Math.abs(this.zeroRadians - this.valueRadians) < Math.PI ? 0 : 1;\n        },\n        sweep() {\n            return this.valueRadians > this.zeroRadians ? 0 : 1;\n        },\n        valueToDisplay() {\n            return this.valueTemplate.replace(/{value}/g, this.modelValue);\n        }\n    }\n}\n//Derived and forked from https://github.com/kramer99/vue-knob-control\n</script>\n\n<style>\n@keyframes dash-frame {\n    100% {\n        stroke-dashoffset: 0;\n    }\n}\n.p-knob-range {\n    fill: none;\n    transition: stroke .1s ease-in;\n}\n.p-knob-value {\n    animation-name: dash-frame;\n    animation-fill-mode: forwards;\n    fill: none;\n}\n.p-knob-text {\n    font-size: 1.3rem;\n    text-align: center;\n}\n</style>\n"]}]}