{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTableContextMenuDemo.vue?vue&type=template&id=a06dae5c","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTableContextMenuDemo.vue","mtime":1634589566258},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Cgk8ZGl2PgoJCTxkaXYgY2xhc3M9ImNvbnRlbnQtc2VjdGlvbiBpbnRyb2R1Y3Rpb24iPgoJCQk8ZGl2IGNsYXNzPSJmZWF0dXJlLWludHJvIj4KCQkJCTxoMT5EYXRhVGFibGUgPHNwYW4+Q29udGV4dE1lbnU8L3NwYW4+PC9oMT4KCQkJCTxwPkRhdGFUYWJsZSBoYXMgZXhjbHVzaXZlIGludGVncmF0aW9uIHdpdGggQ29udGV4dE1lbnUuPC9wPgoJCQk8L2Rpdj4KICAgICAgICAgICAgPEFwcERlbW9BY3Rpb25zIC8+CgkJPC9kaXY+CgoJCTxkaXYgY2xhc3M9ImNvbnRlbnQtc2VjdGlvbiBpbXBsZW1lbnRhdGlvbiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQiPgogICAgICAgICAgICAgICAgPERhdGFUYWJsZSA6dmFsdWU9InByb2R1Y3RzIiBjb250ZXh0TWVudSB2LW1vZGVsOmNvbnRleHRNZW51U2VsZWN0aW9uPSJzZWxlY3RlZFByb2R1Y3QiIEByb3ctY29udGV4dG1lbnU9Im9uUm93Q29udGV4dE1lbnUiIHJlc3BvbnNpdmVMYXlvdXQ9InNjcm9sbCI+CiAgICAgICAgICAgICAgICAgICAgPENvbHVtbiBmaWVsZD0iY29kZSIgaGVhZGVyPSJDb2RlIj48L0NvbHVtbj4KICAgICAgICAgICAgICAgICAgICA8Q29sdW1uIGZpZWxkPSJuYW1lIiBoZWFkZXI9Ik5hbWUiPjwvQ29sdW1uPgogICAgICAgICAgICAgICAgICAgIDxDb2x1bW4gZmllbGQ9ImNhdGVnb3J5IiBoZWFkZXI9IkNhdGVnb3J5Ij48L0NvbHVtbj4KICAgICAgICAgICAgICAgICAgICA8Q29sdW1uIGZpZWxkPSJwcmljZSIgaGVhZGVyPSJQcmljZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSAjYm9keT0ic2xvdFByb3BzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7Zm9ybWF0Q3VycmVuY3koc2xvdFByb3BzLmRhdGEucHJpY2UpfX0KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICAgICAgICA8L0NvbHVtbj4KICAgICAgICAgICAgICAgIDwvRGF0YVRhYmxlPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxDb250ZXh0TWVudSA6bW9kZWw9Im1lbnVNb2RlbCIgcmVmPSJjbSIgLz4KCQk8L2Rpdj4KCiAgICAgICAgPEFwcERvYyBuYW1lPSJEYXRhVGFibGVDb250ZXh0TWVudURlbW8iIDpzb3VyY2VzPSJzb3VyY2VzIiA6c2VydmljZT0iWydQcm9kdWN0U2VydmljZSddIiA6ZGF0YT0iWydwcm9kdWN0cy1zbWFsbCddIiBnaXRodWI9ImRhdGF0YWJsZS9EYXRhVGFibGVDb250ZXh0TWVudURlbW8udnVlIiAvPgoJPC9kaXY+Cg=="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTableContextMenuDemo.vue"],"names":[],"mappings":"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":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTableContextMenuDemo.vue","sourceRoot":"","sourcesContent":["<template>\n\t<div>\n\t\t<div class=\"content-section introduction\">\n\t\t\t<div class=\"feature-intro\">\n\t\t\t\t<h1>DataTable <span>ContextMenu</span></h1>\n\t\t\t\t<p>DataTable has exclusive integration with ContextMenu.</p>\n\t\t\t</div>\n            <AppDemoActions />\n\t\t</div>\n\n\t\t<div class=\"content-section implementation\">\n            <div class=\"card\">\n                <DataTable :value=\"products\" contextMenu v-model:contextMenuSelection=\"selectedProduct\" @row-contextmenu=\"onRowContextMenu\" responsiveLayout=\"scroll\">\n                    <Column field=\"code\" header=\"Code\"></Column>\n                    <Column field=\"name\" header=\"Name\"></Column>\n                    <Column field=\"category\" header=\"Category\"></Column>\n                    <Column field=\"price\" header=\"Price\">\n                        <template #body=\"slotProps\">\n                            {{formatCurrency(slotProps.data.price)}}\n                        </template>\n                    </Column>\n                </DataTable>\n            </div>\n\n            <ContextMenu :model=\"menuModel\" ref=\"cm\" />\n\t\t</div>\n\n        <AppDoc name=\"DataTableContextMenuDemo\" :sources=\"sources\" :service=\"['ProductService']\" :data=\"['products-small']\" github=\"datatable/DataTableContextMenuDemo.vue\" />\n\t</div>\n</template>\n\n<script>\nimport ProductService from '../../service/ProductService';\n\nexport default {\n    data() {\n        return {\n            products: null,\n            selectedProduct: null,\n            menuModel: [\n                {label: 'View', icon: 'pi pi-fw pi-search', command: () => this.viewProduct(this.selectedProduct)},\n                {label: 'Delete', icon: 'pi pi-fw pi-times', command: () => this.deleteProduct(this.selectedProduct)}\n            ],\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div>\n        <Toast />\n        <DataTable :value=\"products\" contextMenu v-model:contextMenuSelection=\"selectedProduct\" @rowContextmenu=\"onRowContextMenu\" responsiveLayout=\"scroll\">\n            <Column field=\"code\" header=\"Code\"></Column>\n            <Column field=\"name\" header=\"Name\"></Column>\n            <Column field=\"category\" header=\"Category\"></Column>\n            <Column field=\"price\" header=\"Price\">\n                <template #body=\"slotProps\">\n                    {{formatCurrency(slotProps.data.price)}}\n                </template>\n            </Column>\n        </DataTable>\n\n        <ContextMenu :model=\"menuModel\" ref=\"cm\" />\n    </div>\n</template>\n\n<script>\nimport ProductService from './service/ProductService';\n\nexport default {\n    data() {\n        return {\n            products: null,\n            selectedProduct: null,\n            menuModel: [\n                {label: 'View', icon: 'pi pi-fw pi-search', command: () => this.viewProduct(this.selectedProduct)},\n                {label: 'Delete', icon: 'pi pi-fw pi-times', command: () => this.deleteProduct(this.selectedProduct)}\n            ]\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n    },\n    mounted() {\n        this.productService.getProductsSmall().then(data => this.products = data);\n    },\n    methods: {\n        onRowContextMenu(event) {\n            this.$refs.cm.show(event.originalEvent);\n        },\n        viewProduct(product) {\n            this.$toast.add({severity: 'info', summary: 'Product Selected', detail: product.name});\n        },\n        deleteProduct(product) {\n            this.products = this.products.filter((p) => p.id !== product.id);\n            this.$toast.add({severity: 'error', summary: 'Product Deleted', detail: product.name});\n            this.selectedProduct = null;\n        },\n        formatCurrency(value) {\n            return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\n        }\n    }\n}\n<\\\\/script>\n`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div>\n        <Toast />\n        <DataTable :value=\"products\" contextMenu v-model:contextMenuSelection=\"selectedProduct\" @rowContextmenu=\"onRowContextMenu\" responsiveLayout=\"scroll\">\n            <Column field=\"code\" header=\"Code\"></Column>\n            <Column field=\"name\" header=\"Name\"></Column>\n            <Column field=\"category\" header=\"Category\"></Column>\n            <Column field=\"price\" header=\"Price\">\n                <template #body=\"slotProps\">\n                    {{formatCurrency(slotProps.data.price)}}\n                </template>\n            </Column>\n        </DataTable>\n\n        <ContextMenu :model=\"menuModel\" ref=\"cm\" />\n    </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { useToast } from 'primevue/usetoast';\nimport ProductService from './service/ProductService';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            productService.value.getProductsSmall().then(data => products.value = data);\n        })\n\n        const cm = ref();\n        const toast = useToast();\n        const products = ref();\n        const productService = ref(new ProductService());\n        const selectedProduct = ref();\n        const menuModel = ref([\n            {label: 'View', icon: 'pi pi-fw pi-search', command: () => viewProduct(selectedProduct)},\n            {label: 'Delete', icon: 'pi pi-fw pi-times', command: () => deleteProduct(selectedProduct)}\n        ]);\n        const onRowContextMenu = (event) => {\n            cm.value.show(event.originalEvent);\n        };\n        const viewProduct = (product) => {\n            toast.add({severity: 'info', summary: 'Product Selected', detail: product.name});\n        };\n        const deleteProduct = (product) => {\n            products.value = products.value.filter((p) => p.id !== product.value.id);\n            toast.add({severity: 'error', summary: 'Product Deleted', detail: product.name});\n            selectedProduct.value = null;\n        };\n        const formatCurrency = (value) => {\n            return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\n        };\n\n        return { cm, products, selectedProduct, menuModel, onRowContextMenu, viewProduct, deleteProduct, formatCurrency }\n    }\n}\n<\\\\/script>\n`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/datatable/datatable.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/column/column.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/contextmenu/contextmenu.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/toast/toast.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/toastservice/toastservice.min.js\"><\\\\/script>\n        <script src=\"./ProductService.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <p-toast></p-toast>\n\n            <p-datatable :value=\"products\" context-menu v-model:context-menu-selection=\"selectedProduct\" @row-contextmenu=\"onRowContextMenu\" responsive-layout=\"scroll\">\n                <p-column field=\"code\" header=\"Code\"></p-column>\n                <p-column field=\"name\" header=\"Name\"></p-column>\n                <p-column field=\"category\" header=\"Category\"></p-column>\n                <p-column field=\"price\" header=\"Price\">\n                    <template #body=\"slotProps\">\n                        {{formatCurrency(slotProps.data.price)}}\n                    </template>\n                </p-column>\n            </p-datatable>\n\n            <p-contextmenu :model=\"menuModel\" ref=\"cm\"></p-contextmenu>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref, onMounted } = Vue;\n        const { useToast } = primevue.usetoast;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    productService.value.getProductsSmall().then(data => products.value = data);\n                })\n\n                const cm = ref();\n                const toast = useToast();\n                const products = ref();\n                const productService = ref(new ProductService());\n                const selectedProduct = ref();\n                const menuModel = ref([\n                    {label: 'View', icon: 'pi pi-fw pi-search', command: () => viewProduct(selectedProduct)},\n                    {label: 'Delete', icon: 'pi pi-fw pi-times', command: () => deleteProduct(selectedProduct)}\n                ]);\n                const onRowContextMenu = (event) => {\n                    cm.value.show(event.originalEvent);\n                };\n                const viewProduct = (product) => {\n                    toast.add({severity: 'info', summary: 'Product Selected', detail: product.name});\n                };\n                const deleteProduct = (product) => {\n                    products.value = products.value.filter((p) => p.id !== product.value.id);\n                    toast.add({severity: 'error', summary: 'Product Deleted', detail: product.name});\n                    selectedProduct.value = null;\n                };\n                const formatCurrency = (value) => {\n                    return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\n                };\n\n                return { cm, products, selectedProduct, menuModel, onRowContextMenu, viewProduct, deleteProduct, formatCurrency }\n            },\n            components: {\n                \"p-datatable\": primevue.datatable,\n                \"p-column\": primevue.column,\n                \"p-contextmenu\": primevue.contextmenu,\n                \"p-toast\":primevue.toast\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .use(primevue.toastservice)\n            .mount(\"#app\");\n        <\\\\/script>\n`\n                }\n            }\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n    },\n    mounted() {\n        this.productService.getProductsSmall().then(data => this.products = data);\n    },\n    methods: {\n        onRowContextMenu(event) {\n            this.$refs.cm.show(event.originalEvent);\n        },\n        viewProduct(product) {\n            this.$toast.add({severity: 'info', summary: 'Product Selected', detail: product.name});\n        },\n        deleteProduct(product) {\n            this.products = this.products.filter((p) => p.id !== product.id);\n            this.$toast.add({severity: 'error', summary: 'Product Deleted', detail: product.name});\n            this.selectedProduct = null;\n        },\n        formatCurrency(value) {\n            return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\n        }\n    }\n}\n</script>"]}]}