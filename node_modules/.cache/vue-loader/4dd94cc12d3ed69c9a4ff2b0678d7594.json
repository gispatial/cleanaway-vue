{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTableRowExpandDemo.vue?vue&type=style&index=0&id=8a4c8b10&lang=scss&scoped=true","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTableRowExpandDemo.vue","mtime":1634589566260},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/css-loader/dist/cjs.js","mtime":1634585948787},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/postcss-loader/src/index.js","mtime":1634585949822},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/sass-loader/dist/cjs.js","mtime":1634589727478},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5wcm9kdWN0LWltYWdlIHsKICAgIHdpZHRoOiAxMDBweDsKICAgIGJveC1zaGFkb3c6IDAgM3B4IDZweCByZ2JhKDAsIDAsIDAsIDAuMTYpLCAwIDNweCA2cHggcmdiYSgwLCAwLCAwLCAwLjIzKQp9Cgoub3JkZXJzLXN1YnRhYmxlIHsKICAgIHBhZGRpbmc6IDFyZW07Cn0K"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTableRowExpandDemo.vue"],"names":[],"mappings":";AAueA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3E;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACjB","file":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTableRowExpandDemo.vue","sourceRoot":"","sourcesContent":["<template>\n\t<div>\n\t\t<div class=\"content-section introduction\">\n\t\t\t<div class=\"feature-intro\">\n\t\t\t\t<h1>DataTable <span>Row Expansion</span></h1>\n\t\t\t\t<p>A row can be expanded to display additional content.</p>\n\t\t\t</div>\n            <AppDemoActions />\n\t\t</div>\n\n\t\t<div class=\"content-section implementation\">\n            <div class=\"card\">\n                <DataTable :value=\"products\" v-model:expandedRows=\"expandedRows\" dataKey=\"id\"\n                    @row-expand=\"onRowExpand\" @row-collapse=\"onRowCollapse\" responsiveLayout=\"scroll\">\n                    <template #header>\n                        <div class=\"table-header-container\">\n                            <Button icon=\"pi pi-plus\" label=\"Expand All\" @click=\"expandAll\" class=\"p-mr-2\" />\n                            <Button icon=\"pi pi-minus\" label=\"Collapse All\" @click=\"collapseAll\" />\n                        </div>\n                    </template>\n                     <Column :expander=\"true\" headerStyle=\"width: 3rem\" />\n                    <Column field=\"name\" header=\"Name\" sortable></Column>\n                    <Column header=\"Image\">\n                         <template #body=\"slotProps\">\n                            <img :src=\"'demo/images/product/' + slotProps.data.image\" :alt=\"slotProps.data.image\" class=\"product-image\" />\n                        </template>\n                    </Column>\n                    <Column field=\"price\" header=\"Price\" sortable>\n                        <template #body=\"slotProps\">\n                            {{formatCurrency(slotProps.data.price)}}\n                        </template>\n                    </Column>\n                    <Column field=\"category\" header=\"Category\" sortable></Column>\n                    <Column field=\"rating\" header=\"Reviews\" sortable>\n                        <template #body=\"slotProps\">\n                           <Rating :modelValue=\"slotProps.data.rating\" :readonly=\"true\" :cancel=\"false\" />\n                        </template>\n                    </Column>\n                    <Column field=\"inventoryStatus\" header=\"Status\" sortable>\n                        <template #body=\"slotProps\">\n                            <span :class=\"'product-badge status-' + slotProps.data.inventoryStatus.toLowerCase()\">{{slotProps.data.inventoryStatus}}</span>\n                        </template>\n                    </Column>\n                    <template #expansion=\"slotProps\">\n                        <div class=\"orders-subtable\">\n                            <h5>Orders for {{slotProps.data.name}}</h5>\n                            <DataTable :value=\"slotProps.data.orders\" responsiveLayout=\"scroll\">\n                                <Column field=\"id\" header=\"Id\" sortable></Column>\n                                <Column field=\"customer\" header=\"Customer\" sortable></Column>\n                                <Column field=\"date\" header=\"Date\" sortable></Column>\n                                <Column field=\"amount\" header=\"Amount\" sortable>\n                                    <template #body=\"slotProps\" sortable>\n                                        {{formatCurrency(slotProps.data.amount)}}\n                                    </template>\n                                </Column>\n                                <Column field=\"status\" header=\"Status\" sortable>\n                                    <template #body=\"slotProps\">\n                                        <span :class=\"'order-badge order-' + slotProps.data.status.toLowerCase()\">{{slotProps.data.status}}</span>\n                                    </template>\n                                </Column>\n                                <Column headerStyle=\"width:4rem\">\n                                    <template #body>\n                                        <Button icon=\"pi pi-search\" />\n                                    </template>\n                                </Column>\n                            </DataTable>\n                        </div>\n                    </template>\n                </DataTable>\n            </div>\n\t\t</div>\n\n        <AppDoc name=\"DataTableRowExpandDemo\" :sources=\"sources\" :service=\"['ProductService']\" :data=\"['products-orders-small']\" github=\"datatable/DataTableRowExpandDemo.vue\" />\n            \n\t</div>\n</template>\n\n<script>\nimport ProductService from '../../service/ProductService';\n\nexport default {\n    data() {\n        return {\n            products: null,\n            expandedRows: [],\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n\t<div>\n        <Toast />\n\n        <DataTable :value=\"products\" v-model:expandedRows=\"expandedRows\" dataKey=\"id\"\n            @rowExpand=\"onRowExpand\" @rowCollapse=\"onRowCollapse\" responsiveLayout=\"scroll\">\n            <template #header>\n                <div class=\"table-header-container\">\n                    <Button icon=\"pi pi-plus\" label=\"Expand All\" @click=\"expandAll\" class=\"p-mr-2\" />\n                    <Button icon=\"pi pi-minus\" label=\"Collapse All\" @click=\"collapseAll\" />\n                </div>\n            </template>\n             <Column :expander=\"true\" headerStyle=\"width: 3rem\" />\n            <Column field=\"name\" header=\"Name\" sortable></Column>\n            <Column header=\"Image\">\n                 <template #body=\"slotProps\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" :alt=\"slotProps.data.image\" class=\"product-image\" />\n                </template>\n            </Column>\n            <Column field=\"price\" header=\"Price\" sortable>\n                <template #body=\"slotProps\">\n                    {{formatCurrency(slotProps.data.price)}}\n                </template>\n            </Column>\n            <Column field=\"category\" header=\"Category\" sortable></Column>\n            <Column field=\"rating\" header=\"Reviews\" sortable>\n                <template #body=\"slotProps\">\n                   <Rating :modelValue=\"slotProps.data.rating\" :readonly=\"true\" :cancel=\"false\" />\n                </template>\n            </Column>\n            <Column field=\"inventoryStatus\" header=\"Status\" sortable>\n                <template #body=\"slotProps\">\n                    <span :class=\"'product-badge status-' + slotProps.data.inventoryStatus.toLowerCase()\">{{slotProps.data.inventoryStatus}}</span>\n                </template>\n            </Column>\n            <template #expansion=\"slotProps\">\n                <div class=\"orders-subtable\">\n                    <h5>Orders for {{slotProps.data.name}}</h5>\n                    <DataTable :value=\"slotProps.data.orders\" responsiveLayout=\"scroll\">\n                        <Column field=\"id\" header=\"Id\" sortable></Column>\n                        <Column field=\"customer\" header=\"Customer\" sortable></Column>\n                        <Column field=\"date\" header=\"Date\" sortable></Column>\n                        <Column field=\"amount\" header=\"Amount\" sortable>\n                            <template #body=\"slotProps\" sortable>\n                                {{formatCurrency(slotProps.data.amount)}}\n                            </template>\n                        </Column>\n                        <Column field=\"status\" header=\"Status\" sortable>\n                            <template #body=\"slotProps\">\n                                <span :class=\"'order-badge order-' + slotProps.data.status.toLowerCase()\">{{slotProps.data.status}}</span>\n                            </template>\n                        </Column>\n                        <Column headerStyle=\"width:4rem\">\n                            <template #body>\n                                <Button icon=\"pi pi-search\" />\n                            </template>\n                        </Column>\n                    </DataTable>\n                </div>\n            </template>\n        </DataTable>\n\t</div>\n</template>\n\n<script>\nimport ProductService from './service/ProductService';\n\nexport default {\n    data() {\n        return {\n            products: null,\n            expandedRows: [] \n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n    },\n    mounted() {\n        this.productService.getProductsWithOrdersSmall().then(data => this.products = data);\n    },\n    methods: {\n        onRowExpand(event) {\n            this.$toast.add({severity: 'info', summary: 'Product Expanded', detail: event.data.name, life: 3000});\n        },\n        onRowCollapse(event) {\n            this.$toast.add({severity: 'success', summary: 'Product Collapsed', detail: event.data.name, life: 3000});\n        },\n        expandAll() {\n            this.expandedRows = this.products.filter(p => p.id);\n            this.$toast.add({severity: 'success', summary: 'All Rows Expanded', life: 3000});\n        },\n        collapseAll() {\n            this.expandedRows = null;\n            this.$toast.add({severity: 'success', summary: 'All Rows Collapsed', life: 3000});\n        },\n        formatCurrency(value) {\n            return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\n        }\n    }\n}\n<\\\\/script>\n\n<style lang=\"scss\" scoped>\n.product-image {\n    width: 50px;\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23)\n}\n\n.orders-subtable {\n    padding: 1rem;\n}\n</style>                    \n`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n\t<div>\n        <Toast />\n        \n        <DataTable :value=\"products\" v-model:expandedRows=\"expandedRows\" dataKey=\"id\"\n            @rowExpand=\"onRowExpand\" @rowCollapse=\"onRowCollapse\" responsiveLayout=\"scroll\">\n            <template #header>\n                <div class=\"table-header-container\">\n                    <Button icon=\"pi pi-plus\" label=\"Expand All\" @click=\"expandAll\" class=\"p-mr-2\" />\n                    <Button icon=\"pi pi-minus\" label=\"Collapse All\" @click=\"collapseAll\" />\n                </div>\n            </template>\n             <Column :expander=\"true\" headerStyle=\"width: 3rem\" />\n            <Column field=\"name\" header=\"Name\" sortable></Column>\n            <Column header=\"Image\">\n                 <template #body=\"slotProps\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" :alt=\"slotProps.data.image\" class=\"product-image\" />\n                </template>\n            </Column>\n            <Column field=\"price\" header=\"Price\" sortable>\n                <template #body=\"slotProps\">\n                    {{formatCurrency(slotProps.data.price)}}\n                </template>\n            </Column>\n            <Column field=\"category\" header=\"Category\" sortable></Column>\n            <Column field=\"rating\" header=\"Reviews\" sortable>\n                <template #body=\"slotProps\">\n                   <Rating :modelValue=\"slotProps.data.rating\" :readonly=\"true\" :cancel=\"false\" />\n                </template>\n            </Column>\n            <Column field=\"inventoryStatus\" header=\"Status\" sortable>\n                <template #body=\"slotProps\">\n                    <span :class=\"'product-badge status-' + slotProps.data.inventoryStatus.toLowerCase()\">{{slotProps.data.inventoryStatus}}</span>\n                </template>\n            </Column>\n            <template #expansion=\"slotProps\">\n                <div class=\"orders-subtable\">\n                    <h5>Orders for {{slotProps.data.name}}</h5>\n                    <DataTable :value=\"slotProps.data.orders\" responsiveLayout=\"scroll\">\n                        <Column field=\"id\" header=\"Id\" sortable></Column>\n                        <Column field=\"customer\" header=\"Customer\" sortable></Column>\n                        <Column field=\"date\" header=\"Date\" sortable></Column>\n                        <Column field=\"amount\" header=\"Amount\" sortable>\n                            <template #body=\"slotProps\" sortable>\n                                {{formatCurrency(slotProps.data.amount)}}\n                            </template>\n                        </Column>\n                        <Column field=\"status\" header=\"Status\" sortable>\n                            <template #body=\"slotProps\">\n                                <span :class=\"'order-badge order-' + slotProps.data.status.toLowerCase()\">{{slotProps.data.status}}</span>\n                            </template>\n                        </Column>\n                        <Column headerStyle=\"width:4rem\">\n                            <template #body>\n                                <Button icon=\"pi pi-search\" />\n                            </template>\n                        </Column>\n                    </DataTable>\n                </div>\n            </template>\n        </DataTable>\n\t</div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { useToast } from 'primevue/usetoast';\nimport ProductService from './service/ProductService';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            productService.value.getProductsWithOrdersSmall().then(data => products.value = data);\n        })\n\n        const toast = useToast();\n        const products = ref();\n        const productService = ref(new ProductService());\n        const expandedRows = ref([]);\n\n        const onRowExpand = (event) => {\n            toast.add({severity: 'info', summary: 'Product Expanded', detail: event.data.name, life: 3000});\n        };\n        const onRowCollapse = (event) => {\n            toast.add({severity: 'success', summary: 'Product Collapsed', detail: event.data.name, life: 3000});\n        };\n        const expandAll = () => {\n            expandedRows.value = products.value.filter(p => p.id);\n            toast.add({severity: 'success', summary: 'All Rows Expanded', life: 3000});\n        };\n        const collapseAll = () => {\n            expandedRows.value = null;\n            toast.add({severity: 'success', summary: 'All Rows Collapsed', life: 3000});\n        };\n        const formatCurrency = (value) => {\n            return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\n        };\n\n        return { products, expandedRows, onRowExpand, onRowCollapse, expandAll, collapseAll, formatCurrency }\n    }\n}\n<\\\\/script>\n\n<style lang=\"scss\" scoped>\n.product-image {\n    width: 50px;\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23)\n}\n\n.orders-subtable {\n    padding: 1rem;\n}\n</style>                    \n`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/datatable/datatable.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/column/column.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/rating/rating.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/toast/toast.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/toastservice/toastservice.min.js\"><\\\\/script>\n        <script src=\"./ProductService.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <p-toast></p-toast>\n            \n            <p-datatable :value=\"products\" v-model:expanded-rows=\"expandedRows\" dataKey=\"id\"\n                @row-expand=\"onRowExpand\" @row-collapse=\"onRowCollapse\" responsive-layout=\"scroll\">\n                <template #header>\n                    <div class=\"table-header-container\">\n                        <p-button icon=\"pi pi-plus\" label=\"Expand All\" @click=\"expandAll\" class=\"p-mr-2\"></p-button>\n                        <p-button icon=\"pi pi-minus\" label=\"Collapse All\" @click=\"collapseAll\"></p-button>\n                    </div>\n                </template>\n                <p-column :expander=\"true\" headerStyle=\"width: 3rem\"></p-column>\n                <p-column field=\"name\" header=\"Name\" sortable></p-column>\n                <p-column header=\"Image\">\n                    <template #body=\"slotProps\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" :alt=\"slotProps.data.image\" class=\"product-image\" />\n                    </template>\n                </p-column>\n                <p-column field=\"price\" header=\"Price\" sortable>\n                    <template #body=\"slotProps\">\n                        {{formatCurrency(slotProps.data.price)}}\n                    </template>\n                </p-column>\n                <p-column field=\"category\" header=\"Category\" sortable></p-column>\n                <p-column field=\"rating\" header=\"Reviews\" sortable>\n                    <template #body=\"slotProps\">\n                    <p-rating :modelValue=\"slotProps.data.rating\" :readonly=\"true\" :cancel=\"false\"></p-rating>\n                    </template>\n                </p-column>\n                <p-column field=\"inventoryStatus\" header=\"Status\" sortable>\n                    <template #body=\"slotProps\">\n                        <span :class=\"'product-badge status-' + slotProps.data.inventoryStatus.toLowerCase()\">{{slotProps.data.inventoryStatus}}</span>\n                    </template>\n                </p-column>\n                <template #expansion=\"slotProps\">\n                    <div class=\"orders-subtable\">\n                        <h5>Orders for {{slotProps.data.name}}</h5>\n                        <p-datatable :value=\"slotProps.data.orders\" responsive-layout=\"scroll\">\n                            <p-column field=\"id\" header=\"Id\" sortable></p-column>\n                            <p-column field=\"customer\" header=\"Customer\" sortable></p-column>\n                            <p-column field=\"date\" header=\"Date\" sortable></p-column>\n                            <p-column field=\"amount\" header=\"Amount\" sortable>\n                                <template #body=\"slotProps\" sortable>\n                                    {{formatCurrency(slotProps.data.amount)}}\n                                </template>\n                            </p-column>\n                            <p-column field=\"status\" header=\"Status\" sortable>\n                                <template #body=\"slotProps\">\n                                    <span :class=\"'order-badge order-' + slotProps.data.status.toLowerCase()\">{{slotProps.data.status}}</span>\n                                </template>\n                            </p-column>\n                            <p-column header-style=\"width:4rem\">\n                                <template #body>\n                                    <p-button icon=\"pi pi-search\"></p-button>\n                                </template>\n                            </p-column>\n                        </p-datatable>\n                    </div>\n                </template>\n            </p-datatable>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref, onMounted } = Vue;\n        const { useToast } = primevue.usetoast;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    productService.value.getProductsWithOrdersSmall().then(data => products.value = data);\n                })\n\n                const toast = useToast();\n                const products = ref();\n                const productService = ref(new ProductService());\n                const expandedRows = ref([]);\n\n                const onRowExpand = (event) => {\n                    toast.add({severity: 'info', summary: 'Product Expanded', detail: event.data.name, life: 3000});\n                };\n                const onRowCollapse = (event) => {\n                    toast.add({severity: 'success', summary: 'Product Collapsed', detail: event.data.name, life: 3000});\n                };\n                const expandAll = () => {\n                    expandedRows.value = products.value.filter(p => p.id);\n                    toast.add({severity: 'success', summary: 'All Rows Expanded', life: 3000});\n                };\n                const collapseAll = () => {\n                    expandedRows.value = null;\n                    toast.add({severity: 'success', summary: 'All Rows Collapsed', life: 3000});\n                };\n                const formatCurrency = (value) => {\n                    return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\n                };\n\n                return { products, expandedRows, onRowExpand, onRowCollapse, expandAll, collapseAll, formatCurrency }\n            },\n            components: {\n                \"p-datatable\": primevue.datatable,\n                \"p-column\": primevue.column,\n                \"p-button\": primevue.button,\n                \"p-toast\": primevue.toast,\n                \"p-rating\": primevue.rating\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .use(primevue.toastservice)\n            .mount(\"#app\");\n        <\\\\/script>\n\n        <style>\n        .product-image {\n            width: 50px;\n            box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23)\n        }\n\n        .orders-subtable {\n            padding: 1rem;\n        }\n        </style>                    \n`\n                }\n            }\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n    },\n    mounted() {\n        this.productService.getProductsWithOrdersSmall().then(data => this.products = data);\n    },\n    methods: {\n        onRowExpand(event) {\n            this.$toast.add({severity: 'info', summary: 'Product Expanded', detail: event.data.name, life: 3000});\n        },\n        onRowCollapse(event) {\n            this.$toast.add({severity: 'success', summary: 'Product Collapsed', detail: event.data.name, life: 3000});\n        },\n        expandAll() {\n            this.expandedRows = this.products.filter(p => p.id);\n            this.$toast.add({severity: 'success', summary: 'All Rows Expanded', life: 3000});\n        },\n        collapseAll() {\n            this.expandedRows = null;\n            this.$toast.add({severity: 'success', summary: 'All Rows Collapsed', life: 3000});\n        },\n        formatCurrency(value) {\n            return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\n        }\n    },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.product-image {\n    width: 100px;\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23)\n}\n\n.orders-subtable {\n    padding: 1rem;\n}\n</style>"]}]}