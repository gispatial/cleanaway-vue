{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/autocomplete/AutoCompleteDoc.vue?vue&type=template&id=4af0cc63","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/autocomplete/AutoCompleteDoc.vue","mtime":1634589566247},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8QXBwRG9jIG5hbWU9IkF1dG9Db21wbGV0ZURlbW8iIDpzb3VyY2VzPSJzb3VyY2VzIiA6c2VydmljZT0iWydDb3VudHJ5U2VydmljZSddIiA6ZGF0YT0iWydjb3VudHJpZXMnXSIgZ2l0aHViPSJhdXRvY29tcGxldGUvQXV0b0NvbXBsZXRlRGVtby52dWUiPgogICAgICAgIDxoNT5JbXBvcnQ8L2g1Pgo8cHJlIHYtY29kZS5zY3JpcHQ+PGNvZGU+CmltcG9ydCBBdXRvQ29tcGxldGUgZnJvbSAncHJpbWV2dWUvYXV0b2NvbXBsZXRlJzsKCjwvY29kZT48L3ByZT4KCiAgICAgICAgPGg1PkltcG9ydCB2aWEgQ0ROPC9oNT4KPHByZSB2LWNvZGU+PGNvZGU+CiZsdDtzY3JpcHQgc3JjPSJodHRwczovL3VucGtnLmNvbS9wcmltZXZ1ZUBeMy9jb3JlL2NvcmUuanMiJmd0OyZsdDsvc2NyaXB0Jmd0OwombHQ7c2NyaXB0IHNyYz0iaHR0cHM6Ly91bnBrZy5jb20vcHJpbWV2dWVAXjMvYXV0b2NvbXBsZXRlL2F1dG9jb21wbGV0ZS5taW4uanMiJmd0OyZsdDsvc2NyaXB0Jmd0OwoKPC9jb2RlPjwvcHJlPgoKCQk8aDU+R2V0dGluZyBTdGFydGVkPC9oNT4KCQk8cD5BdXRvQ29tcGxldGUgdXNlcyB2LW1vZGVsIGZvciB0d28td2F5IGJpbmRpbmcsIHJlcXVpcmVzIGEgbGlzdCBvZiBzdWdnZXN0aW9ucyBhbmQgYSBjb21wbGV0ZSBtZXRob2QgdG8gcXVlcnkgZm9yIHRoZSByZXN1bHRzLiBUaGUgY29tcGxldGUgbWV0aG9kCgkJCWdldHMgdGhlIHF1ZXJ5IHRleHQgYXMgZXZlbnQucXVlcnkgcHJvcGVydHkgYW5kIHNob3VsZCB1cGRhdGUgdGhlIHN1Z2dlc3Rpb25zIHdpdGggdGhlIHNlYXJjaCByZXN1bHRzLiBFeGFtcGxlIGJlbG93IGNvbm5lY3RzIHRvIGEgcmVtb3RlIGRhdGFzb3VyY2UgdG8gZmV0Y2ggdGhlIHJlc3VsdHM7PC9wPgo8cHJlIHYtY29kZT48Y29kZT4KJmx0O0F1dG9Db21wbGV0ZSB2LW1vZGVsPSJzZWxlY3RlZENvdW50cnkiIDpzdWdnZXN0aW9ucz0iZmlsdGVyZWRDb3VudHJpZXNCYXNpYyIgQGNvbXBsZXRlPSJzZWFyY2hDb3VudHJ5KCRldmVudCkiIGZpZWxkPSJuYW1lIiAvJmd0OwoKPC9jb2RlPjwvcHJlPgo8cHJlIHYtY29kZS5zY3JpcHQ+PGNvZGU+CmV4cG9ydCBkZWZhdWx0IHsKCWRhdGEoKSB7CgkJcmV0dXJuIHsKCQkJc2VsZWN0ZWRDb3VudHJ5OiBudWxsLAoJCQlmaWx0ZXJlZENvdW50cmllczogbnVsbAoJCX0KCX0sCgljb3VudHJ5U2VydmljZTogbnVsbCwKCWNyZWF0ZWQoKSB7CgkJdGhpcy5jb3VudHJ5U2VydmljZSA9IG5ldyBDb3VudHJ5U2VydmljZSgpOwoJfSwKCW1ldGhvZHM6IHsKCQlzZWFyY2hDb3VudHJ5KGV2ZW50KSB7CiAgICAgICAgICAgIHRoaXMuZmlsdGVyZWRDb3VudHJpZXNCYXNpYyA9IHRoaXMuY291bnRyeVNlcnZpY2Uuc2VhcmNoKGV2ZW50LnF1ZXJ5KTsKCQl9Cgl9Cn0KCjwvY29kZT48L3ByZT4KCgkJPGg1PkRyb3Bkb3duPC9oNT4KCQk8cD5FbmFibGluZyA8aT5kcm9wZG93bjwvaT4gcHJvcGVydHkgZGlzcGxheXMgYSBidXR0b24gbmV4dCB0byB0aGUgaW5wdXQgZmllbGQgd2hlcmUgY2xpY2sgYmVoYXZpb3Igb2YgdGhlIGJ1dHRvbiBpcyBkZWZpbmVkIHVzaW5nCgkJCWRyb3Bkb3duTW9kZSBwcm9wZXJ0eSB0aGF0IHRha2VzICJibGFuayIgb3IgImN1cnJlbnQiIGFzIHBvc3NpYmxlIHZhbHVlcy4KCQkJImJsYW5rIiBpcyB0aGUgZGVmYXVsdCBtb2RlIHRvIHNlbmQgYSBxdWVyeSB3aXRoIGFuIGVtcHR5IHN0cmluZyB3aGVyZWFzCgkJCSJjdXJyZW50IiBzZXR0aW5nIHNlbmRzIGEgcXVlcnkgd2l0aCB0aGUgY3VycmVudCB2YWx1ZSBvZiB0aGUgaW5wdXQuPC9wPgo8cHJlIHYtY29kZT48Y29kZT4KJmx0O0F1dG9Db21wbGV0ZSB2LW1vZGVsPSJicmFuZCIgOmRyb3Bkb3duPSJ0cnVlIiA6c3VnZ2VzdGlvbnM9ImZpbHRlcmVkQnJhbmRzIiBAY29tcGxldGU9InNlYXJjaEJyYW5kKCRldmVudCkiIHBsYWNlaG9sZGVyPSJIaW50OiB0eXBlICd2JyBvciAnZiciIC8mZ3Q7Cgo8L2NvZGU+PC9wcmU+CgoJCTxoNT5NdWx0aXBsZSBNb2RlPC9oNT4KCQk8cD5NdWx0aXBsZSBtb2RlIGlzIGVuYWJsZWQgdXNpbmcgPGk+bXVsdGlwbGU8L2k+IHByb3BlcnR5IHRvIHNlbGVjdCBtb3JlIHRoYW4gb25lIHZhbHVlIGZyb20gdGhlIGF1dG9jb21wbGV0ZS4gSW4gdGhpcyBjYXNlLCB2YWx1ZSByZWZlcmVuY2Ugc2hvdWxkIGJlIGFuIGFycmF5LjwvcD4KPHByZSB2LWNvZGU+PGNvZGU+CiZsdDtBdXRvQ29tcGxldGUgOm11bHRpcGxlPSJ0cnVlIiB2LW1vZGVsPSJzZWxlY3RlZENvdW50cmllcyIgOnN1Z2dlc3Rpb25zPSJmaWx0ZXJlZENvdW50cmllc011bHRpcGxlIiBAY29tcGxldGU9InNlYXJjaENvdW50cnlNdWx0aXBsZSgkZXZlbnQpIiBmaWVsZD0ibmFtZSIgLyZndDsKCjwvY29kZT48L3ByZT4KCgkJPGg1Pk9iamVjdHM8L2g1PgoJCTxwPkF1dG9Db21wbGV0ZSBjYW4gYWxzbyB3b3JrIHdpdGggb2JqZWN0cyB1c2luZyB0aGUgIDxpPmZpZWxkPC9pPiBwcm9wZXJ0eSB0aGF0IGRlZmluZXMgdGhlIGxhYmVsIHRvIGRpc3BsYXkKCQkJYXMgYSBzdWdnZXN0aW9uLiBUaGUgdmFsdWUgcGFzc2VkIHRvIHRoZSBtb2RlbCB3b3VsZCBzdGlsbCBiZSB0aGUgb2JqZWN0IGluc3RhbmNlIG9mIGEgc3VnZ2VzdGlvbi4KCQkJSGVyZSBpcyBhbiBleGFtcGxlIHdpdGggYSBDb3VudHJ5IG9iamVjdCB0aGF0IGhhcyBuYW1lIGFuZCBjb2RlIGZpZWxkcyBzdWNoIGFzICYjMTIzO25hbWU6IlVuaXRlZCBTdGF0ZXMiLGNvZGU6IlVTQSImIzEyNTsuPC9wPgo8cHJlIHYtY29kZT48Y29kZT4KJmx0O0F1dG9Db21wbGV0ZSBmaWVsZD0ibGFiZWwiIHYtbW9kZWw9InNlbGVjdGVkQ291bnRyeSIgOnN1Z2dlc3Rpb25zPSJmaWx0ZXJlZENvdW50cmllc0Jhc2ljIiBAY29tcGxldGU9InNlYXJjaENvdW50cnlCYXNpYygkZXZlbnQpIiAvJmd0OwoKPC9jb2RlPjwvcHJlPgoKICAgICAgICA8aDU+R3JvdXBpbmc8L2g1PgoJCTxwPk9wdGlvbnMgZ3JvdXBzIGFyZSBzcGVjaWZpZWQgd2l0aCB0aGUgPGk+b3B0aW9uR3JvdXBMYWJlbDwvaT4gYW5kIDxpPm9wdGlvbkdyb3VwQ2hpbGRyZW48L2k+IHByb3BlcnRpZXMuPC9wPgo8cHJlIHYtY29kZS5zY3JpcHQ+PGNvZGU+CmV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgc2VsZWN0ZWRHcm91cGVkQ2l0eTogbnVsbCwKICAgICAgICAgICAgZ3JvdXBlZENpdGllczogW3sKICAgICAgICAgICAgICAgIGxhYmVsOiAnR2VybWFueScsIGNvZGU6ICdERScsCiAgICAgICAgICAgICAgICBpdGVtczogWwogICAgICAgICAgICAgICAgICAgIHtsYWJlbDogJ0JlcmxpbicsIHZhbHVlOiAnQmVybGluJ30sCiAgICAgICAgICAgICAgICAgICAge2xhYmVsOiAnRnJhbmtmdXJ0JywgdmFsdWU6ICdGcmFua2Z1cnQnfSwKICAgICAgICAgICAgICAgICAgICB7bGFiZWw6ICdIYW1idXJnJywgdmFsdWU6ICdIYW1idXJnJ30sCiAgICAgICAgICAgICAgICAgICAge2xhYmVsOiAnTXVuaWNoJywgdmFsdWU6ICdNdW5pY2gnfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBsYWJlbDogJ1VTQScsIGNvZGU6ICdVUycsCiAgICAgICAgICAgICAgICBpdGVtczogWwogICAgICAgICAgICAgICAgICAgIHtsYWJlbDogJ0NoaWNhZ28nLCB2YWx1ZTogJ0NoaWNhZ28nfSwKICAgICAgICAgICAgICAgICAgICB7bGFiZWw6ICdMb3MgQW5nZWxlcycsIHZhbHVlOiAnTG9zIEFuZ2VsZXMnfSwKICAgICAgICAgICAgICAgICAgICB7bGFiZWw6ICdOZXcgWW9yaycsIHZhbHVlOiAnTmV3IFlvcmsnfSwKICAgICAgICAgICAgICAgICAgICB7bGFiZWw6ICdTYW4gRnJhbmNpc2NvJywgdmFsdWU6ICdTYW4gRnJhbmNpc2NvJ30KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgbGFiZWw6ICdKYXBhbicsIGNvZGU6ICdKUCcsCiAgICAgICAgICAgICAgICBpdGVtczogWwogICAgICAgICAgICAgICAgICAgIHtsYWJlbDogJ0t5b3RvJywgdmFsdWU6ICdLeW90byd9LAogICAgICAgICAgICAgICAgICAgIHtsYWJlbDogJ09zYWthJywgdmFsdWU6ICdPc2FrYSd9LAogICAgICAgICAgICAgICAgICAgIHtsYWJlbDogJ1Rva3lvJywgdmFsdWU6ICdUb2t5byd9LAogICAgICAgICAgICAgICAgICAgIHtsYWJlbDogJ1lva29oYW1hJywgdmFsdWU6ICdZb2tvaGFtYSd9CiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgIH1dCiAgICAgICAgfQogICAgfQp9CjwvY29kZT48L3ByZT4KCjxwcmUgdi1jb2RlPjxjb2RlPjx0ZW1wbGF0ZSB2LXByZT4KJmx0O0F1dG9Db21wbGV0ZSB2LW1vZGVsPSJzZWxlY3RlZENpdHkiIDpzdWdnZXN0aW9ucz0iZmlsdGVyZWRDaXRpZXMiIEBjb21wbGV0ZT0ic2VhcmNoQ2l0eSgkZXZlbnQpIgogICAgZmllbGQ9ImxhYmVsIiBvcHRpb25Hcm91cExhYmVsPSJsYWJlbCIgb3B0aW9uR3JvdXBDaGlsZHJlbj0iaXRlbXMiJmd0OyZsdDsvQXV0b0NvbXBsZXRlJmd0Owo8L3RlbXBsYXRlPgo8L2NvZGU+PC9wcmU+CgogICAgICAgIDxoNT5Gb3JjZSBTZWxlY3Rpb248L2g1PgogICAgICAgIDxwPkZvcmNlU2VsZWN0aW9uIG1vZGUgdmFsaWRhdGVzIHRoZSBtYW51YWwgaW5wdXQgdG8gY2hlY2sgd2hldGhlciBpdCBhbHNvIGV4aXN0cyBpbiB0aGUgc3VnZ2VzdGlvbnMgbGlzdCwgaWYgbm90IHRoZSBpbnB1dCB2YWx1ZSBpcyBjbGVhcmVkCiAgICAgICAgdG8gbWFrZSBzdXJlIHRoZSB2YWx1ZSBwYXNzZWQgdG8gdGhlIG1vZGVsIGlzIGFsd2F5cyBvbmUgb2YgdGhlIHN1Z2dlc3Rpb25zLiBTaW1wbHkgZW5hYmxlIDxpPmZvcmNlU2VsZWN0aW9uPC9pPiB0byBlbmZvcmNlIHRoYXQgaW5wdXQgaXMgYWx3YXlzIGZyb20gdGhlIHN1Z2dlc3Rpb24gbGlzdC48L3A+CjxwcmUgdi1jb2RlPjxjb2RlPgombHQ7QXV0b0NvbXBsZXRlIGZvcmNlU2VsZWN0aW9uIHYtbW9kZWw9ImJyYW5kIiA6c3VnZ2VzdGlvbnM9ImZpbHRlcmVkQnJhbmRzIiBAY29tcGxldGU9InNlYXJjaEJyYW5kKCRldmVudCkiIC8mZ3Q7Cgo8L2NvZGU+PC9wcmU+CgoJCTxoNT5UZW1wbGF0aW5nPC9oNT4KCQk8cD5JdGVtIHRlbXBsYXRlIGFsbG93cyBkaXNwbGF5aW5nIGN1c3RvbSBjb250ZW50IGluc2lkZSB0aGUgc3VnZ2VzdGlvbnMgcGFuZWwuIFRoZSBzbG90UHJvcHMgdmFyaWFibGUgcGFzc2VkIHRvIHRoZSB0ZW1wbGF0ZSBwcm92aWRlcyBhbiBpdGVtIHByb3BlcnR5IHRvIHJlcHJlc2VudCBhbiBpdGVtIGluIHRoZSBzdWdnZXN0aW9ucyBjb2xsZWN0aW9uLgogICAgICAgICAgICBJbiBhZGRpdGlvbiA8aT5vcHRpb25ncm91cDwvaT4sIDxpPmNoaXA8L2k+LCA8aT5oZWFkZXI8L2k+IGFuZCA8aT5mb290ZXI8L2k+IHNsb3RzIGFyZSBwcm92aWRlZCBmb3IgZnVydGhlciBjdXN0b21pemF0aW9uPC9wPgo8cHJlIHYtY29kZT48Y29kZT48dGVtcGxhdGUgdi1wcmU+CiZsdDtBdXRvQ29tcGxldGUgdi1tb2RlbD0iYnJhbmQiIDpzdWdnZXN0aW9ucz0iZmlsdGVyZWRCcmFuZHMiIEBjb21wbGV0ZT0ic2VhcmNoQnJhbmQoJGV2ZW50KSIgcGxhY2Vob2xkZXI9IkhpbnQ6IHR5cGUgJ3YnIG9yICdmJyIgOmRyb3Bkb3duPSJ0cnVlIiZndDsKICAgICZsdDt0ZW1wbGF0ZSAjaXRlbT0ic2xvdFByb3BzIiZndDsKCQkmbHQ7aW1nIDphbHQ9InNsb3RQcm9wcy5pdGVtIiA6c3JjPSInZGVtby9pbWFnZXMvY2FyLycgKyBzbG90UHJvcHMuaXRlbSArICcucG5nJyIgLyZndDsKICAgICAgICAmbHQ7ZGl2Jmd0O3t7c2xvdFByb3BzLml0ZW19fSZsdDsvZGl2Jmd0OwoJJmx0Oy90ZW1wbGF0ZSZndDsKJmx0Oy9BdXRvQ29tcGxldGUmZ3Q7CjwvdGVtcGxhdGU+CjwvY29kZT48L3ByZT4KCgkJPGg1PlByb3BlcnRpZXM8L2g1PgogICAgICAgIDxwPkFueSBwcm9wZXJ0eSBzdWNoIGFzIG5hbWUgYW5kIHBsYWNlaG9sZGVyIGFyZSBwYXNzZWQgdG8gdGhlIHVuZGVybHlpbmcgaW5wdXQgZWxlbWVudC4gRm9sbG93aW5nIGFyZSB0aGUgYWRkaXRpb25hbCBwcm9wZXJ0aWVzIHRvIGNvbmZpZ3VyZSB0aGUgY29tcG9uZW50LjwvcD4KCQk8ZGl2IGNsYXNzPSJkb2MtdGFibGV3cmFwcGVyIj4KCQkJPHRhYmxlIGNsYXNzPSJkb2MtdGFibGUiPgoJCQkJPHRoZWFkPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRoPk5hbWU8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGg+VHlwZTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5EZWZhdWx0PC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRoPkRlc2NyaXB0aW9uPC90aD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgoJCQkJPC90aGVhZD4KCQkJCTx0Ym9keT4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5tb2RlbFZhbHVlPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPmFueTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5udWxsPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlZhbHVlIG9mIHRoZSBjb21wb25lbnQuPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnN1Z2dlc3Rpb25zPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPmFycmF5PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPm51bGw8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+QW4gYXJyYXkgb2Ygc3VnZ2VzdGlvbnMgdG8gZGlzcGxheS48L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+ZmllbGQ8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+YW55PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPm51bGw8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+UHJvcGVydHkgbmFtZSBvciBnZXR0ZXIgZnVuY3Rpb24gb2YgYSBzdWdnZXN0ZWQgb2JqZWN0IHRvIHJlc29sdmUgYW5kIGRpc3BsYXkuPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPm9wdGlvbkdyb3VwTGFiZWw8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+c3RyaW5nPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPm51bGw8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+UHJvcGVydHkgbmFtZSBvciBnZXR0ZXIgZnVuY3Rpb24gdG8gdXNlIGFzIHRoZSBsYWJlbCBvZiBhbiBvcHRpb24gZ3JvdXAuPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPm9wdGlvbkdyb3VwQ2hpbGRyZW48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+c3RyaW5nPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPm51bGw8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+UHJvcGVydHkgbmFtZSBvciBnZXR0ZXIgZnVuY3Rpb24gdGhhdCByZWZlcnMgdG8gdGhlIGNoaWxkcmVuIG9wdGlvbnMgb2Ygb3B0aW9uIGdyb3VwLjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5zY3JvbGxIZWlnaHQ8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+c3RyaW5nPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjIwMHB4PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPk1heGltdW0gaGVpZ2h0IG9mIHRoZSBzdWdnZXN0aW9ucyBwYW5lbC48L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+ZHJvcGRvd248L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+Ym9vbGVhbjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5mYWxzZTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5EaXNwbGF5cyBhIGJ1dHRvbiBuZXh0IHRvIHRoZSBpbnB1dCBmaWVsZCB3aGVuIGVuYWJsZWQuPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPmRyb3Bkb3duTW9kZTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5zdHJpbmc8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+Ymxhbms8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+U3BlY2lmaWVzIHRoZSBiZWhhdmlvciBkcm9wZG93biBidXR0b24uIERlZmF1bHQgImJsYW5rIiBtb2RlIHNlbmRzIGFuIGVtcHR5IHN0cmluZyBhbmQgImN1cnJlbnQiIG1vZGUgc2VuZHMgdGhlIGlucHV0IHZhbHVlLjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5hdXRvSGlnaGxpZ2h0PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPmJvb2xlYW48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+ZmFsc2U8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+SGlnaGxpZ2h0cyBhdXRvbWF0aWNhbGx5IHRoZSBmaXJzdCBpdGVtIG9mIHRoZSBkcm9wZG93biB0byBiZSBzZWxlY3RlZC48L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+bXVsdGlwbGU8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+Ym9vbGVhbjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5mYWxzZTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5TcGVjaWZpZXMgaWYgbXVsdGlwbGUgdmFsdWVzIGNhbiBiZSBzZWxlY3RlZC48L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+bWluTGVuZ3RoPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPm51bWJlcjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4xPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPk1pbmltdW0gbnVtYmVyIG9mIGNoYXJhY3RlcnMgdG8gaW5pdGlhdGUgYSBzZWFyY2guPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPmNvbXBsZXRlT25Gb2N1czwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5ib29sZWFuPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPmZhbHNlPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPldoZXRoZXIgdG8gcnVuIGEgcXVlcnkgd2hlbiBpbnB1dCByZWNlaXZlcyBmb2N1cy48L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+ZGVsYXk8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+bnVtYmVyPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjMwMDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5EZWxheSBiZXR3ZWVuIGtleXN0cm9rZXMgdG8gd2FpdCBiZWZvcmUgc2VuZGluZyBhIHF1ZXJ5LjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5hcHBlbmRUbzwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5zdHJpbmc8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+Ym9keTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5BIHZhbGlkIHF1ZXJ5IHNlbGVjdG9yIG9yIGFuIEhUTUxFbGVtZW50IHRvIHNwZWNpZnkgd2hlcmUgdGhlIG92ZXJsYXkgZ2V0cyBhdHRhY2hlZC4gU3BlY2lhbCBrZXl3b3JkcyBhcmUgImJvZHkiIGZvciBkb2N1bWVudCBib2R5CiAgICAgICAgICAgICAgICAgICAgICAgIGFuZCAic2VsZiIgZm9yIHRoZSBlbGVtZW50IGl0c2VsZi48L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+Zm9yY2VTZWxlY3Rpb248L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+Ym9vbGVhbjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5mYWxzZTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5XaGVuIHByZXNlbnQsIGF1dG9jb21wbGV0ZSBjbGVhcnMgdGhlIG1hbnVhbCBpbnB1dCBpZiBpdCBkb2VzIG5vdCBtYXRjaCBvZiB0aGUgc3VnZ2VzdGlvbnMgdG8gZm9yY2Ugb25seQogICAgICAgICAgICAgICAgICAgICAgICBhY2NlcHRpbmcgdmFsdWVzIGZyb20gdGhlIHN1Z2dlc3Rpb25zLjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5pbnB1dFN0eWxlPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPmFueTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5udWxsPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPklubGluZSBzdHlsZSBvZiB0aGUgaW5wdXQgZmllbGQuPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPmlucHV0Q2xhc3M8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+c3RyaW5nPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPm51bGw8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+U3R5bGUgY2xhc3Mgb2YgdGhlIGlucHV0IGZpZWxkLjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5zdHlsZTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5hbnk8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+bnVsbDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5TdHlsZSBjbGFzcyBvZiB0aGUgY29tcG9uZW50IGlucHV0IGZpZWxkLjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5jbGFzczwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5zdHJpbmc8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+bnVsbDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5JbmxpbmUgc3R5bGUgb2YgdGhlIGNvbXBvbmVudC48L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+cGFuZWxDbGFzczwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5zdHJpbmc8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+bnVsbDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5TdHlsZSBjbGFzcyBvZiB0aGUgb3ZlcmxheSBwYW5lbC48L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+dmlydHVhbFNjcm9sbGVyT3B0aW9uczwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5vYmplY3Q8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+bnVsbDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5XaGV0aGVyIHRvIHVzZSB0aGUgdmlydHVhbFNjcm9sbGVyIGZlYXR1cmUuIFRoZSBwcm9wZXJ0aWVzIG9mIDxyb3V0ZXItbGluayB0bz0iL3ZpcnR1YWxzY3JvbGxlciI+VmlydHVhbFNjcm9sbGVyPC9yb3V0ZXItbGluaz4gY29tcG9uZW50IGNhbiBiZSB1c2VkIGxpa2UgYW4gb2JqZWN0IGluIGl0LjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KCQkJCTwvdGJvZHk+CgkJCTwvdGFibGU+CgkJPC9kaXY+CgoJCTxoNT5FdmVudHM8L2g1PgogICAgICAgIDxwPkFueSB2YWxpZCBldmVudCBzdWNoIGFzIGZvY3VzLCBibHVyIGFuZCBpbnB1dCBhcmUgcGFzc2VkIHRvIHRoZSB1bmRlcmx5aW5nIGlucHV0IGVsZW1lbnQuIEZvbGxvd2luZyBhcmUgdGhlIGFkZGl0aW9uYWwgZXZlbnRzIHRvIGNvbmZpZ3VyZSB0aGUgY29tcG9uZW50LjwvcD4KCQk8ZGl2IGNsYXNzPSJkb2MtdGFibGV3cmFwcGVyIj4KCQkJPHRhYmxlIGNsYXNzPSJkb2MtdGFibGUiPgoJCQkJPHRoZWFkPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRoPk5hbWU8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGg+UGFyYW1ldGVyczwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5EZXNjcmlwdGlvbjwvdGg+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KCQkJCTwvdGhlYWQ+CgkJCQk8dGJvZHk+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+Y29tcGxldGU8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudC5vcmlnaW5hbEV2ZW50OiBCcm93c2VyIGV2ZW50IDxiciAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQucXVlcnk6IFZhbHVlIHRvIHNlYXJjaCB3aXRoCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5DYWxsYmFjayB0byBpbnZva2UgdG8gc2VhcmNoIGZvciBzdWdnZXN0aW9ucy48L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+aXRlbS1zZWxlY3Q8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+ZXZlbnQub3JpZ2luYWxFdmVudDogQnJvd3NlciBldmVudCA8YnIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50LnZhbHVlOiBTZWxlY3RlZCBpdGVtPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPkNhbGxiYWNrIHRvIGludm9rZSB3aGVuIGEgc3VnZ2VzdGlvbiBpcyBzZWxlY3RlZC48L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+aXRlbS11bnNlbGVjdDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5ldmVudC5vcmlnaW5hbEV2ZW50OiBCcm93c2VyIGV2ZW50IDxiciAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQudmFsdWU6IFVuc2VsZWN0ZWQgaXRlbTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5DYWxsYmFjayB0byBpbnZva2Ugd2hlbiBhIHNlbGVjdGVkIHZhbHVlIGlzIHJlbW92ZWQuPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPmRyb3Bkb3duLWNsaWNrPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQub3JpZ2luYWxFdmVudDogYnJvd3NlciBldmVudCA8YnIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50LnF1ZXJ5OiBDdXJyZW50IHZhbHVlIG9mIHRoZSBpbnB1dCBmaWVsZAogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+Q2FsbGJhY2sgdG8gaW52b2tlIHRvIHdoZW4gZHJvcGRvd24gYnV0dG9uIGlzIGNsaWNrZWQuPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPmNsZWFyPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPi08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+Q2FsbGJhY2sgdG8gaW52b2tlIHdoZW4gaW5wdXQgaXMgY2xlYXJlZCBieSB0aGUgdXNlci48L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CgkJCQk8L3Rib2R5PgoJCQk8L3RhYmxlPgoJCTwvZGl2PgoKICAgICAgICA8aDU+U2xvdHM8L2g1PgoJCTxkaXYgY2xhc3M9ImRvYy10YWJsZXdyYXBwZXIiPgogICAgICAgICAgICA8dGFibGUgY2xhc3M9ImRvYy10YWJsZSI+CgkJCQk8dGhlYWQ+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGg+TmFtZTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5QYXJhbWV0ZXJzPC90aD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgoJCQkJPC90aGVhZD4KCQkJCTx0Ym9keT4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5pdGVtPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPml0ZW06IE9wdGlvbiBpbnN0YW5jZSA8YnIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4OiBJbmRleCBvZiB0aGUgb3B0aW9uPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPm9wdGlvbmdyb3VwPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPml0ZW06IE9wdGlvbkdyb3VwIGluc3RhbmNlIDxiciAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXg6IEluZGV4IG9mIHRoZSBvcHRpb24gZ3JvdXA8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+aGVhZGVyPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnZhbHVlOiBWYWx1ZSBvZiB0aGUgY29tcG9uZW50IDxiciAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VnZ2VzdGlvbnM6IERpc3BsYXllZCBvcHRpb25zPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPmZvb3RlcjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD52YWx1ZTogVmFsdWUgb2YgdGhlIGNvbXBvbmVudCA8YnIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Z2dlc3Rpb25zOiBEaXNwbGF5ZWQgb3B0aW9uczwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5jaGlwPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnZhbHVlOiBBIHZhbHVlIGluIHRoZSBzZWxlY3Rpb248L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+Y29udGVudDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5pdGVtczogQW4gYXJyYXkgb2Ygb2JqZWN0cyB0byBkaXNwbGF5IGZvciB2aXJ0dWFsc2Nyb2xsZXI8YnIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlQ2xhc3M6IFN0eWxlIGNsYXNzIG9mIHRoZSBjb21wb25lbnQ8YnIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnRSZWY6IFJlZmVyYW5jZSBvZiB0aGUgY29udGVudDxiciAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0SXRlbU9wdGlvbnM6IE9wdGlvbnMgb2YgdGhlIGl0ZW1zPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPmxvYWRlcjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5vcHRpb25zOiBPcHRpb25zIG9mIHRoZSBsb2FkZXIgaXRlbXMgZm9yIHZpcnR1YWxzY3JvbGxlcjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KCQkJCTwvdGJvZHk+CgkJCTwvdGFibGU+CiAgICAgICAgPC9kaXY+CgoJCTxoNT5TdHlsaW5nPC9oNT4KCQk8cD5Gb2xsb3dpbmcgaXMgdGhlIGxpc3Qgb2Ygc3RydWN0dXJhbCBzdHlsZSBjbGFzc2VzPC9wPgoJCTxkaXYgY2xhc3M9ImRvYy10YWJsZXdyYXBwZXIiPgoJCQk8dGFibGUgY2xhc3M9ImRvYy10YWJsZSI+CgkJCQk8dGhlYWQ+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGg+TmFtZTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5FbGVtZW50PC90aD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgoJCQkJPC90aGVhZD4KCQkJCTx0Ym9keT4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5wLWF1dG9jb21wbGV0ZTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5Db250YWluZXIgZWxlbWVudDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5wLWF1dG9jb21wbGV0ZS1wYW5lbDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5PdmVybGF5IHBhbmVsIG9mIHN1Z2dlc3Rpb25zLjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5wLWF1dG9jb21wbGV0ZS1pdGVtczwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5MaXN0IGNvbnRhaW5lciBvZiBzdWdnZXN0aW9ucy48L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+cC1hdXRvY29tcGxldGUtaXRlbTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5MaXN0IGl0ZW0gb2YgYSBzdWdnZXN0aW9uLjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5wLWF1dG9jb21wbGV0ZS10b2tlbjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5FbGVtZW50IG9mIGEgc2VsZWN0ZWQgaXRlbSBpbiBtdWx0aXBsZSBtb2RlLjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5wLWF1dG9jb21wbGV0ZS10b2tlbi1pY29uPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPkNsb3NlIGljb24gZWxlbWVudCBvZiBhIHNlbGVjdGVkIGl0ZW0gaW4gbXVsdGlwbGUgbW9kZS48L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+cC1hdXRvY29tcGxldGUtdG9rZW4tbGFiZWw8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+TGFiZWwgb2YgYSBzZWxlY3RlZCBpdGVtIGluIG11bHRpcGxlIG1vZGUuPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgoJCQkJPC90Ym9keT4KCQkJPC90YWJsZT4KCQk8L2Rpdj4KCgkJPGg1PkRlcGVuZGVuY2llczwvaDU+CgkJPHA+Tm9uZS48L3A+CiAgICA8L0FwcERvYz4K"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/autocomplete/AutoCompleteDoc.vue"],"names":[],"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C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChhI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;GACxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;GACvE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1E,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjxJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrtK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjlK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;GAC3G,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;GACjjI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CA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,CAAC,CAAC,CAAC;EAClhxI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACjlJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAChF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC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AAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACxI,CAAC,CAAC,CAAC,CAAC;oBACJ,CAAC,CAAC,CAAC;wBACC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACnF,CAAC,CAAC,CAAC,CAAC;oBACJ,CAAC,CAAC,CAAC;wBACC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC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","file":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/autocomplete/AutoCompleteDoc.vue","sourceRoot":"","sourcesContent":["<template>\n    <AppDoc name=\"AutoCompleteDemo\" :sources=\"sources\" :service=\"['CountryService']\" :data=\"['countries']\" github=\"autocomplete/AutoCompleteDemo.vue\">\n        <h5>Import</h5>\n<pre v-code.script><code>\nimport AutoComplete from 'primevue/autocomplete';\n\n</code></pre>\n\n        <h5>Import via CDN</h5>\n<pre v-code><code>\n&lt;script src=\"https://unpkg.com/primevue@^3/core/core.js\"&gt;&lt;/script&gt;\n&lt;script src=\"https://unpkg.com/primevue@^3/autocomplete/autocomplete.min.js\"&gt;&lt;/script&gt;\n\n</code></pre>\n\n\t\t<h5>Getting Started</h5>\n\t\t<p>AutoComplete uses v-model for two-way binding, requires a list of suggestions and a complete method to query for the results. The complete method\n\t\t\tgets the query text as event.query property and should update the suggestions with the search results. Example below connects to a remote datasource to fetch the results;</p>\n<pre v-code><code>\n&lt;AutoComplete v-model=\"selectedCountry\" :suggestions=\"filteredCountriesBasic\" @complete=\"searchCountry($event)\" field=\"name\" /&gt;\n\n</code></pre>\n<pre v-code.script><code>\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tselectedCountry: null,\n\t\t\tfilteredCountries: null\n\t\t}\n\t},\n\tcountryService: null,\n\tcreated() {\n\t\tthis.countryService = new CountryService();\n\t},\n\tmethods: {\n\t\tsearchCountry(event) {\n            this.filteredCountriesBasic = this.countryService.search(event.query);\n\t\t}\n\t}\n}\n\n</code></pre>\n\n\t\t<h5>Dropdown</h5>\n\t\t<p>Enabling <i>dropdown</i> property displays a button next to the input field where click behavior of the button is defined using\n\t\t\tdropdownMode property that takes \"blank\" or \"current\" as possible values.\n\t\t\t\"blank\" is the default mode to send a query with an empty string whereas\n\t\t\t\"current\" setting sends a query with the current value of the input.</p>\n<pre v-code><code>\n&lt;AutoComplete v-model=\"brand\" :dropdown=\"true\" :suggestions=\"filteredBrands\" @complete=\"searchBrand($event)\" placeholder=\"Hint: type 'v' or 'f'\" /&gt;\n\n</code></pre>\n\n\t\t<h5>Multiple Mode</h5>\n\t\t<p>Multiple mode is enabled using <i>multiple</i> property to select more than one value from the autocomplete. In this case, value reference should be an array.</p>\n<pre v-code><code>\n&lt;AutoComplete :multiple=\"true\" v-model=\"selectedCountries\" :suggestions=\"filteredCountriesMultiple\" @complete=\"searchCountryMultiple($event)\" field=\"name\" /&gt;\n\n</code></pre>\n\n\t\t<h5>Objects</h5>\n\t\t<p>AutoComplete can also work with objects using the  <i>field</i> property that defines the label to display\n\t\t\tas a suggestion. The value passed to the model would still be the object instance of a suggestion.\n\t\t\tHere is an example with a Country object that has name and code fields such as &#123;name:\"United States\",code:\"USA\"&#125;.</p>\n<pre v-code><code>\n&lt;AutoComplete field=\"label\" v-model=\"selectedCountry\" :suggestions=\"filteredCountriesBasic\" @complete=\"searchCountryBasic($event)\" /&gt;\n\n</code></pre>\n\n        <h5>Grouping</h5>\n\t\t<p>Options groups are specified with the <i>optionGroupLabel</i> and <i>optionGroupChildren</i> properties.</p>\n<pre v-code.script><code>\nexport default {\n    data() {\n        return {\n            selectedGroupedCity: null,\n            groupedCities: [{\n                label: 'Germany', code: 'DE',\n                items: [\n                    {label: 'Berlin', value: 'Berlin'},\n                    {label: 'Frankfurt', value: 'Frankfurt'},\n                    {label: 'Hamburg', value: 'Hamburg'},\n                    {label: 'Munich', value: 'Munich'}\n                ]\n            },\n            {\n                label: 'USA', code: 'US',\n                items: [\n                    {label: 'Chicago', value: 'Chicago'},\n                    {label: 'Los Angeles', value: 'Los Angeles'},\n                    {label: 'New York', value: 'New York'},\n                    {label: 'San Francisco', value: 'San Francisco'}\n                ]\n            },\n            {\n                label: 'Japan', code: 'JP',\n                items: [\n                    {label: 'Kyoto', value: 'Kyoto'},\n                    {label: 'Osaka', value: 'Osaka'},\n                    {label: 'Tokyo', value: 'Tokyo'},\n                    {label: 'Yokohama', value: 'Yokohama'}\n                ]\n            }]\n        }\n    }\n}\n</code></pre>\n\n<pre v-code><code><template v-pre>\n&lt;AutoComplete v-model=\"selectedCity\" :suggestions=\"filteredCities\" @complete=\"searchCity($event)\"\n    field=\"label\" optionGroupLabel=\"label\" optionGroupChildren=\"items\"&gt;&lt;/AutoComplete&gt;\n</template>\n</code></pre>\n\n        <h5>Force Selection</h5>\n        <p>ForceSelection mode validates the manual input to check whether it also exists in the suggestions list, if not the input value is cleared\n        to make sure the value passed to the model is always one of the suggestions. Simply enable <i>forceSelection</i> to enforce that input is always from the suggestion list.</p>\n<pre v-code><code>\n&lt;AutoComplete forceSelection v-model=\"brand\" :suggestions=\"filteredBrands\" @complete=\"searchBrand($event)\" /&gt;\n\n</code></pre>\n\n\t\t<h5>Templating</h5>\n\t\t<p>Item template allows displaying custom content inside the suggestions panel. The slotProps variable passed to the template provides an item property to represent an item in the suggestions collection.\n            In addition <i>optiongroup</i>, <i>chip</i>, <i>header</i> and <i>footer</i> slots are provided for further customization</p>\n<pre v-code><code><template v-pre>\n&lt;AutoComplete v-model=\"brand\" :suggestions=\"filteredBrands\" @complete=\"searchBrand($event)\" placeholder=\"Hint: type 'v' or 'f'\" :dropdown=\"true\"&gt;\n    &lt;template #item=\"slotProps\"&gt;\n\t\t&lt;img :alt=\"slotProps.item\" :src=\"'demo/images/car/' + slotProps.item + '.png'\" /&gt;\n        &lt;div&gt;{{slotProps.item}}&lt;/div&gt;\n\t&lt;/template&gt;\n&lt;/AutoComplete&gt;\n</template>\n</code></pre>\n\n\t\t<h5>Properties</h5>\n        <p>Any property such as name and placeholder are passed to the underlying input element. Following are the additional properties to configure the component.</p>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Default</th>\n                        <th>Description</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>modelValue</td>\n                        <td>any</td>\n                        <td>null</td>\n                        <td>Value of the component.</td>\n                    </tr>\n                    <tr>\n                        <td>suggestions</td>\n                        <td>array</td>\n                        <td>null</td>\n                        <td>An array of suggestions to display.</td>\n                    </tr>\n                    <tr>\n                        <td>field</td>\n                        <td>any</td>\n                        <td>null</td>\n                        <td>Property name or getter function of a suggested object to resolve and display.</td>\n                    </tr>\n                    <tr>\n                        <td>optionGroupLabel</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Property name or getter function to use as the label of an option group.</td>\n                    </tr>\n                    <tr>\n                        <td>optionGroupChildren</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Property name or getter function that refers to the children options of option group.</td>\n                    </tr>\n                    <tr>\n                        <td>scrollHeight</td>\n                        <td>string</td>\n                        <td>200px</td>\n                        <td>Maximum height of the suggestions panel.</td>\n                    </tr>\n                    <tr>\n                        <td>dropdown</td>\n                        <td>boolean</td>\n                        <td>false</td>\n                        <td>Displays a button next to the input field when enabled.</td>\n                    </tr>\n                    <tr>\n                        <td>dropdownMode</td>\n                        <td>string</td>\n                        <td>blank</td>\n                        <td>Specifies the behavior dropdown button. Default \"blank\" mode sends an empty string and \"current\" mode sends the input value.</td>\n                    </tr>\n                    <tr>\n                        <td>autoHighlight</td>\n                        <td>boolean</td>\n                        <td>false</td>\n                        <td>Highlights automatically the first item of the dropdown to be selected.</td>\n                    </tr>\n                    <tr>\n                        <td>multiple</td>\n                        <td>boolean</td>\n                        <td>false</td>\n                        <td>Specifies if multiple values can be selected.</td>\n                    </tr>\n                    <tr>\n                        <td>minLength</td>\n                        <td>number</td>\n                        <td>1</td>\n                        <td>Minimum number of characters to initiate a search.</td>\n                    </tr>\n                    <tr>\n                        <td>completeOnFocus</td>\n                        <td>boolean</td>\n                        <td>false</td>\n                        <td>Whether to run a query when input receives focus.</td>\n                    </tr>\n                    <tr>\n                        <td>delay</td>\n                        <td>number</td>\n                        <td>300</td>\n                        <td>Delay between keystrokes to wait before sending a query.</td>\n                    </tr>\n                    <tr>\n                        <td>appendTo</td>\n                        <td>string</td>\n                        <td>body</td>\n                        <td>A valid query selector or an HTMLElement to specify where the overlay gets attached. Special keywords are \"body\" for document body\n                        and \"self\" for the element itself.</td>\n                    </tr>\n                    <tr>\n                        <td>forceSelection</td>\n                        <td>boolean</td>\n                        <td>false</td>\n                        <td>When present, autocomplete clears the manual input if it does not match of the suggestions to force only\n                        accepting values from the suggestions.</td>\n                    </tr>\n                    <tr>\n                        <td>inputStyle</td>\n                        <td>any</td>\n                        <td>null</td>\n                        <td>Inline style of the input field.</td>\n                    </tr>\n                    <tr>\n                        <td>inputClass</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Style class of the input field.</td>\n                    </tr>\n                    <tr>\n                        <td>style</td>\n                        <td>any</td>\n                        <td>null</td>\n                        <td>Style class of the component input field.</td>\n                    </tr>\n                    <tr>\n                        <td>class</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Inline style of the component.</td>\n                    </tr>\n                    <tr>\n                        <td>panelClass</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Style class of the overlay panel.</td>\n                    </tr>\n                    <tr>\n                        <td>virtualScrollerOptions</td>\n                        <td>object</td>\n                        <td>null</td>\n                        <td>Whether to use the virtualScroller feature. The properties of <router-link to=\"/virtualscroller\">VirtualScroller</router-link> component can be used like an object in it.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Events</h5>\n        <p>Any valid event such as focus, blur and input are passed to the underlying input element. Following are the additional events to configure the component.</p>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Parameters</th>\n                        <th>Description</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>complete</td>\n                        <td>\n                            event.originalEvent: Browser event <br />\n                            event.query: Value to search with\n                        </td>\n                        <td>Callback to invoke to search for suggestions.</td>\n                    </tr>\n                    <tr>\n                        <td>item-select</td>\n                        <td>event.originalEvent: Browser event <br />\n                            event.value: Selected item</td>\n                        <td>Callback to invoke when a suggestion is selected.</td>\n                    </tr>\n                    <tr>\n                        <td>item-unselect</td>\n                        <td>event.originalEvent: Browser event <br />\n                            event.value: Unselected item</td>\n                        <td>Callback to invoke when a selected value is removed.</td>\n                    </tr>\n                    <tr>\n                        <td>dropdown-click</td>\n                        <td>\n                            event.originalEvent: browser event <br />\n                            event.query: Current value of the input field\n                        </td>\n                        <td>Callback to invoke to when dropdown button is clicked.</td>\n                    </tr>\n                    <tr>\n                        <td>clear</td>\n                        <td>-</td>\n                        <td>Callback to invoke when input is cleared by the user.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n        <h5>Slots</h5>\n\t\t<div class=\"doc-tablewrapper\">\n            <table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Parameters</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>item</td>\n                        <td>item: Option instance <br />\n                            index: Index of the option</td>\n                    </tr>\n                    <tr>\n                        <td>optiongroup</td>\n                        <td>item: OptionGroup instance <br />\n                            index: Index of the option group</td>\n                    </tr>\n                    <tr>\n                        <td>header</td>\n                        <td>value: Value of the component <br />\n                            suggestions: Displayed options</td>\n                    </tr>\n                    <tr>\n                        <td>footer</td>\n                        <td>value: Value of the component <br />\n                            suggestions: Displayed options</td>\n                    </tr>\n                    <tr>\n                        <td>chip</td>\n                        <td>value: A value in the selection</td>\n                    </tr>\n                    <tr>\n                        <td>content</td>\n                        <td>items: An array of objects to display for virtualscroller<br />\n                            styleClass: Style class of the component<br />\n                            contentRef: Referance of the content<br />\n                            getItemOptions: Options of the items</td>\n                    </tr>\n                    <tr>\n                        <td>loader</td>\n                        <td>options: Options of the loader items for virtualscroller</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n        </div>\n\n\t\t<h5>Styling</h5>\n\t\t<p>Following is the list of structural style classes</p>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Element</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>p-autocomplete</td>\n                        <td>Container element</td>\n                    </tr>\n                    <tr>\n                        <td>p-autocomplete-panel</td>\n                        <td>Overlay panel of suggestions.</td>\n                    </tr>\n                    <tr>\n                        <td>p-autocomplete-items</td>\n                        <td>List container of suggestions.</td>\n                    </tr>\n                    <tr>\n                        <td>p-autocomplete-item</td>\n                        <td>List item of a suggestion.</td>\n                    </tr>\n                    <tr>\n                        <td>p-autocomplete-token</td>\n                        <td>Element of a selected item in multiple mode.</td>\n                    </tr>\n                    <tr>\n                        <td>p-autocomplete-token-icon</td>\n                        <td>Close icon element of a selected item in multiple mode.</td>\n                    </tr>\n                    <tr>\n                        <td>p-autocomplete-token-label</td>\n                        <td>Label of a selected item in multiple mode.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Dependencies</h5>\n\t\t<p>None.</p>\n    </AppDoc>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            sources:{\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content:`\n<template>\n    <div>\n        <div>\n            <h5>Basic</h5>\n            <AutoComplete v-model=\"selectedCountry1\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\" />\n\n            <h5>Grouped</h5>\n            <AutoComplete v-model=\"selectedCity\" :suggestions=\"filteredCities\" @complete=\"searchCity($event)\" field=\"label\" optionGroupLabel=\"label\" optionGroupChildren=\"items\">\n                <template #optiongroup=\"slotProps\">\n                    <div class=\"p-d-flex p-ai-center country-item\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"18\" />\n                        <div class=\"p-ml-2\">{{slotProps.item.label}}</div>\n                    </div>\n                </template>\n            </AutoComplete>\n\n            <h5>Dropdown, Templating and Force Selection</h5>\n            <AutoComplete v-model=\"selectedCountry2\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" :dropdown=\"true\" field=\"name\" forceSelection>\n                <template #item=\"slotProps\">\n                    <div class=\"country-item\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"18\" />\n                        <div class=\"p-ml-2\">{{slotProps.item.name}}</div>\n                    </div>\n                </template>\n            </AutoComplete>\n\n            <h5>Virtual Scroll (1000 Items)</h5>\n            <AutoComplete v-model=\"selectedItem\" :suggestions=\"filteredItems\" @complete=\"searchItems\" :virtualScrollerOptions=\"{ itemSize: 31 }\" field=\"label\" dropdown />\n\n            <h5>Multiple</h5>\n            <span class=\"p-fluid\">\n                <AutoComplete :multiple=\"true\" v-model=\"selectedCountries\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\" />\n            </span>\n        </div>\n    </div>\n</template>\n\n<script>\nimport CountryService from './service/CountryService';\nimport {FilterService,FilterMatchMode} from 'primevue/api';\n\nexport default {\n    data() {\n        return {\n            countries: null,\n            selectedCountry1: null,\n            selectedCountry2: null,\n            selectedCity: null,\n            filteredCities: null,\n            filteredCountries: null,\n            selectedCountries: [],\n            selectedItem: null,\n            filteredItems: null,\n            groupedCities: [{\n                label: 'Germany', code: 'DE',\n                items: [\n                    {label: 'Berlin', value: 'Berlin'},\n                    {label: 'Frankfurt', value: 'Frankfurt'},\n                    {label: 'Hamburg', value: 'Hamburg'},\n                    {label: 'Munich', value: 'Munich'}\n                ]\n            },\n            {\n                label: 'USA', code: 'US',\n                items: [\n                    {label: 'Chicago', value: 'Chicago'},\n                    {label: 'Los Angeles', value: 'Los Angeles'},\n                    {label: 'New York', value: 'New York'},\n                    {label: 'San Francisco', value: 'San Francisco'}\n                ]\n            },\n            {\n                label: 'Japan', code: 'JP',\n                items: [\n                    {label: 'Kyoto', value: 'Kyoto'},\n                    {label: 'Osaka', value: 'Osaka'},\n                    {label: 'Tokyo', value: 'Tokyo'},\n                    {label: 'Yokohama', value: 'Yokohama'}\n                ]\n            }],\n            items: Array.from({ length: 1000 }, (_, i) => ({ label: \\`Item #\\${i}\\`, value: i }))\n        }\n    },\n    countryService: null,\n    created() {\n        this.countryService = new CountryService();\n    },\n    mounted() {\n        this.countryService.getCountries().then(data => this.countries = data);\n    },\n    methods: {\n        searchCountry(event) {\n            setTimeout(() => {\n                if (!event.query.trim().length) {\n                    this.filteredCountries = [...this.countries];\n                }\n                else {\n                    this.filteredCountries = this.countries.filter((country) => {\n                        return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n                    });\n                }\n            }, 250);\n        },\n        searchCity(event) {\n            let query = event.query;\n            let filteredCities = [];\n\n            for (let country of this.groupedCities) {\n                let filteredItems = FilterService.filter(country.items, ['label'], query, FilterMatchMode.CONTAINS);\n                if (filteredItems && filteredItems.length) {\n                    filteredCities.push({...country, ...{items: filteredItems}});\n                }\n            }\n\n            this.filteredCities = filteredCities;\n        },\n        searchItems(event) {\n            //in a real application, make a request to a remote url with the query and return filtered results, for demo we filter at client side\n            let query = event.query;\n            let filteredItems = [];\n\n            for(let i = 0; i < this.items.length; i++) {\n                let item = this.items[i];\n                if (item.label.toLowerCase().indexOf(query.toLowerCase()) === 0) {\n                    filteredItems.push(item);\n                }\n            }\n\n            this.filteredItems = filteredItems;\n        }\n    }\n}\n<\\\\/script>`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content:`\n<template>\n    <div>\n        <div>\n            <h5>Basic</h5>\n            <AutoComplete v-model=\"selectedCountry1\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\" />\n\n            <h5>Grouped</h5>\n            <AutoComplete v-model=\"selectedCity\" :suggestions=\"filteredCities\" @complete=\"searchCity($event)\" field=\"label\" optionGroupLabel=\"label\" optionGroupChildren=\"items\">\n                <template #optiongroup=\"slotProps\">\n                    <div class=\"p-d-flex p-ai-center country-item\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"18\" />\n                        <div class=\"p-ml-2\">{{slotProps.item.label}}</div>\n                    </div>\n                </template>\n            </AutoComplete>\n\n            <h5>Dropdown, Templating and Force Selection</h5>\n            <AutoComplete v-model=\"selectedCountry2\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" :dropdown=\"true\" field=\"name\" forceSelection>\n                <template #item=\"slotProps\">\n                    <div class=\"country-item\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"18\" />\n                        <div class=\"p-ml-2\">{{slotProps.item.name}}</div>\n                    </div>\n                </template>\n            </AutoComplete>\n\n            <h5>Virtual Scroll (1000 Items)</h5>\n            <AutoComplete v-model=\"selectedItem\" :suggestions=\"filteredItems\" @complete=\"searchItems\" :virtualScrollerOptions=\"{ itemSize: 31 }\" field=\"label\" dropdown />\n\n            <h5>Multiple</h5>\n            <span class=\"p-fluid\">\n                <AutoComplete :multiple=\"true\" v-model=\"selectedCountries\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\" />\n            </span>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport CountryService from './service/CountryService';\nimport {FilterService,FilterMatchMode} from 'primevue/api';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            countryService.value.getCountries().then(data => countries.value = data);\n        })\n\n        const countries = ref();\n        const countryService = ref(new CountryService());\n        const selectedCountry1 = ref();\n        const selectedCountry2 = ref();\n        const selectedCity = ref();\n        const filteredCities = ref();\n        const filteredCountries = ref();\n        const selectedCountries = ref([]);\n        const selectedItem = ref();\n        const filteredItems = ref();\n        const groupedCities = ref ([{\n            label: 'Germany', code: 'DE',\n            items: [\n                {label: 'Berlin', value: 'Berlin'},\n                {label: 'Frankfurt', value: 'Frankfurt'},\n                {label: 'Hamburg', value: 'Hamburg'},\n                {label: 'Munich', value: 'Munich'}\n            ]\n        },\n        {\n            label: 'USA', code: 'US',\n            items: [\n                {label: 'Chicago', value: 'Chicago'},\n                {label: 'Los Angeles', value: 'Los Angeles'},\n                {label: 'New York', value: 'New York'},\n                {label: 'San Francisco', value: 'San Francisco'}\n            ]\n        },\n        {\n            label: 'Japan', code: 'JP',\n            items: [\n                {label: 'Kyoto', value: 'Kyoto'},\n                {label: 'Osaka', value: 'Osaka'},\n                {label: 'Tokyo', value: 'Tokyo'},\n                {label: 'Yokohama', value: 'Yokohama'}\n            ]\n        }]);\n        const items = Array.from({ length: 1000 }, (_, i) => ({ label: \\`Item #\\${i}\\`, value: i }));\n\n        const searchCountry = (event) => {\n            setTimeout(() => {\n                if (!event.query.trim().length) {\n                    filteredCountries.value = [...countries.value];\n                }\n                else {\n                    filteredCountries.value = countries.value.filter((country) => {\n                        return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n                    });\n                }\n            }, 250);\n        };\n        const searchCity = (event) => {\n            let query = event.query;\n            let newFilteredCities = [];\n\n            for (let country of groupedCities.value) {\n                let filteredItems = FilterService.filter(country.items, ['label'], query, FilterMatchMode.CONTAINS);\n                if (filteredItems && filteredItems.length) {\n                    newFilteredCities.push({...country, ...{items: filteredItems}});\n                }\n            }\n\n            filteredCities.value = newFilteredCities;\n        }\n        const searchItems = (event) => {\n            //in a real application, make a request to a remote url with the query and return filtered results, for demo we filter at client side\n            let query = event.query;\n            let _filteredItems = [];\n\n            for(let i = 0; i < this.items.length; i++) {\n                let item = this.items[i];\n                if (item.label.toLowerCase().indexOf(query.toLowerCase()) === 0) {\n                    _filteredItems.push(item);\n                }\n            }\n\n            filteredItems.value = _filteredItems;\n        }\n\n        return { countries, countryService, selectedCountry1, selectedCountry2, selectedCity, filteredCities, filteredCountries, selectedCountries, groupedCities, searchCountry, searchCity, searchItems, selectedItem, filteredItems, items }\n    }\n}\n<\\\\/script>`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/autocomplete/autocomplete.min.js\"><\\\\/script>\n        <script src=\"./CountryService.js\"><\\\\/script>`,\n                    content:`<div id=\"app\">\n            <h5>Basic</h5>\n            <p-autocomplete v-model=\"selectedCountry1\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\"></p-autocomplete>\n\n            <h5>Grouped</h5>\n            <p-autocomplete v-model=\"selectedCity\" :suggestions=\"filteredCities\" @complete=\"searchCity($event)\" field=\"label\" option-group-label=\"label\" option-group-children=\"items\">\n                <template #optiongroup=\"slotProps\">\n                    <div class=\"p-d-flex p-ai-center country-item\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"18\" />\n                        <div class=\"p-ml-2\">{{slotProps.item.label}}</div>\n                    </div>\n                </template>\n            </p-autocomplete>\n\n            <h5>Dropdown, Templating and Force Selection</h5>\n            <p-autocomplete v-model=\"selectedCountry2\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" :dropdown=\"true\" field=\"name\" force-selection>\n                <template #item=\"slotProps\">\n                    <div class=\"country-item\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"18\" />\n                        <div class=\"p-ml-2\">{{slotProps.item.name}}</div>\n                    </div>\n                </template>\n            </p-autocomplete>\n\n            <h5>Virtual Scroll (1000 Items)</h5>\n            <p-autocomplete v-model=\"selectedItem\" :suggestions=\"filteredItems\" @complete=\"searchItems\" :virtual-scroller-options=\"{ itemSize: 31 }\" field=\"label\" dropdown></p-autocomplete>\n\n            <h5>Multiple</h5>\n            <span class=\"p-fluid\">\n                <p-autocomplete :multiple=\"true\" v-model=\"selectedCountries\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\"></p-autocomplete>\n            </span>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref, onMounted } = Vue;\n        const { FilterService,FilterMatchMode } = primevue.api;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    countryService.value.getCountries().then(data => countries.value = data);\n                })\n\n                const countries = ref();\n                const countryService = ref(new CountryService());\n                const selectedCountry1 = ref();\n                const selectedCountry2 = ref();\n                const selectedCity = ref();\n                const filteredCities = ref();\n                const filteredCountries = ref();\n                const selectedCountries = ref([]);\n                const selectedItem = ref();\n                const filteredItems = ref();\n                const groupedCities = ref ([{\n                    label: 'Germany', code: 'DE',\n                    items: [\n                        {label: 'Berlin', value: 'Berlin'},\n                        {label: 'Frankfurt', value: 'Frankfurt'},\n                        {label: 'Hamburg', value: 'Hamburg'},\n                        {label: 'Munich', value: 'Munich'}\n                    ]\n                },\n                {\n                    label: 'USA', code: 'US',\n                    items: [\n                        {label: 'Chicago', value: 'Chicago'},\n                        {label: 'Los Angeles', value: 'Los Angeles'},\n                        {label: 'New York', value: 'New York'},\n                        {label: 'San Francisco', value: 'San Francisco'}\n                    ]\n                },\n                {\n                    label: 'Japan', code: 'JP',\n                    items: [\n                        {label: 'Kyoto', value: 'Kyoto'},\n                        {label: 'Osaka', value: 'Osaka'},\n                        {label: 'Tokyo', value: 'Tokyo'},\n                        {label: 'Yokohama', value: 'Yokohama'}\n                    ]\n                }]);\n                const items = Array.from({ length: 1000 }, (_, i) => ({ label: \\`Item #\\${i}\\`, value: i }));\n\n                const searchCountry = (event) => {\n                    setTimeout(() => {\n                        if (!event.query.trim().length) {\n                            filteredCountries.value = [...countries.value];\n                        }\n                        else {\n                            filteredCountries.value = countries.value.filter((country) => {\n                                return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n                            });\n                        }\n                    }, 250);\n                };\n                const searchCity = (event) => {\n                    let query = event.query;\n                    let newFilteredCities = [];\n\n                    for (let country of groupedCities.value) {\n                        let filteredItems = FilterService.filter(country.items, ['label'], query, FilterMatchMode.CONTAINS);\n                        if (filteredItems && filteredItems.length) {\n                            newFilteredCities.push({...country, ...{items: filteredItems}});\n                        }\n                    }\n\n                    filteredCities.value = newFilteredCities;\n                };\n                const searchItems = (event) => {\n                    //in a real application, make a request to a remote url with the query and return filtered results, for demo we filter at client side\n                    let query = event.query;\n                    let _filteredItems = [];\n\n                    for(let i = 0; i < this.items.length; i++) {\n                        let item = this.items[i];\n                        if (item.label.toLowerCase().indexOf(query.toLowerCase()) === 0) {\n                            _filteredItems.push(item);\n                        }\n                    }\n\n                    filteredItems.value = _filteredItems;\n                }\n\n                return { countries, countryService, selectedCountry1, selectedCountry2, selectedCity, filteredCities, filteredCountries, selectedCountries, groupedCities, searchCountry, searchCity, searchItems, selectedItem, filteredItems, items }\n            },\n            components: {\n                \"p-autocomplete\": primevue.autocomplete\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\\\/script>`\n                }\n            }\n        }\n    }\n}\n</script>\n"]}]}