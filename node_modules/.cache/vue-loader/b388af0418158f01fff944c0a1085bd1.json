{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/chart/PolarAreaChartDoc.vue?vue&type=template&id=9d04d16c","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/chart/PolarAreaChartDoc.vue","mtime":1634589566255},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:PEFwcERvYyBuYW1lPSJDaGFydERlbW8iIDpzb3VyY2VzPSJzb3VyY2VzIiA6ZGVwZW5kZW5jaWVzPSJ7J2NoYXJ0LmpzJzogJzMuMy4yJ30iIGNvbXBvbmVudD0iQ2hhcnQiIGdpdGh1Yj0iY2hhcnQvUG9sYXJBcmVhQ2hhcnREZW1vLnZ1ZSIgLz4="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/chart/PolarAreaChartDoc.vue"],"names":[],"mappingsfile":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/chart/PolarAreaChartDoc.vue","sourceRoot":"","sourcesContent":["<template>\n\t<AppDoc name=\"ChartDemo\" :sources=\"sources\" :dependencies=\"{'chart.js': '3.3.2'}\" component=\"Chart\" github=\"chart/PolarAreaChartDemo.vue\" />\n</template>\n\n<script>\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tsources: {\n\t\t\t\t'options-api': {\n\t\t\t\t\ttabName: 'Options API Source',\n\t\t\t\t\tcontent: `\n<template>\n    <div>\n        <Chart type=\"polarArea\" :data=\"chartData\" :options=\"chartOptions\" />\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            chartData: {\n                datasets: [{\n                    data: [11,16,7,3,14],\n                    backgroundColor: [\"#42A5F5\",\"#66BB6A\",\"#FFA726\",\"#26C6DA\",\"#7E57C2\"],\n                    label: 'My dataset'\n                }],\n                labels: [\"Red\",\"Green\",\"Yellow\",\"Grey\",\"Blue\"]\n            },\n            chartOptions: {\n                plugins: {\n                    legend: {\n                        labels: {\n                            color: '#495057'\n                        }\n                    }\n                },\n                scales: {\n                    r: {\n                        grid: {\n                            color: '#ebedef'\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n<\\\\/script>\n`\n\t\t\t\t},\n\t\t\t\t'composition-api': {\n\t\t\t\t\ttabName: 'Composition API Source',\n\t\t\t\t\tcontent: `\n<template>\n    <div>\n        <Chart type=\"polarArea\" :data=\"chartData\" :options=\"chartOptions\" />\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n    setup() {\n        const chartData = ref({\n            datasets: [{\n                data: [11,16,7,3,14],\n                backgroundColor: [\"#42A5F5\",\"#66BB6A\",\"#FFA726\",\"#26C6DA\",\"#7E57C2\"],\n                label: 'My dataset'\n            }],\n            labels: [\"Red\",\"Green\",\"Yellow\",\"Grey\",\"Blue\"]\n        });\n\n        const chartOptions = ref(\n            {\n                plugins: {\n                    legend: {\n                        labels: {\n                            color: '#495057'\n                        }\n                    }\n                },\n                scales: {\n                    r: {\n                        grid: {\n                            color: '#ebedef'\n                        }\n                    }\n                }\n            }\n        );\n\n\t\treturn { chartData, chartOptions }\n    }\n}\n<\\\\/script>\n`\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n</script>"]}]}