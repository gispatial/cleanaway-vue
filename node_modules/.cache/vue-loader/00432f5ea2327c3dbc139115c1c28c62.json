{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTableCrudDemo.vue?vue&type=style&index=0&id=eeb8d720&lang=scss&scoped=true","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTableCrudDemo.vue","mtime":1634589566258},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/css-loader/dist/cjs.js","mtime":1634585948787},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/postcss-loader/src/index.js","mtime":1634585949822},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/sass-loader/dist/cjs.js","mtime":1634589727478},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci50YWJsZS1oZWFkZXIgewogICAgZGlzcGxheTogZmxleDsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CgogICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTYwcHgpIHsKICAgICAgICBhbGlnbi1pdGVtczogc3RhcnQ7Cgl9Cn0KCi5wcm9kdWN0LWltYWdlIHsKICAgIHdpZHRoOiAxMDBweDsKICAgIGJveC1zaGFkb3c6IDAgM3B4IDZweCByZ2JhKDAsIDAsIDAsIDAuMTYpLCAwIDNweCA2cHggcmdiYSgwLCAwLCAwLCAwLjIzKTsKfQoKLnAtZGlhbG9nIC5wcm9kdWN0LWltYWdlIHsKICAgIHdpZHRoOiAxNTBweDsKICAgIG1hcmdpbjogMCBhdXRvIDJyZW0gYXV0bzsKICAgIGRpc3BsYXk6IGJsb2NrOwp9CgouY29uZmlybWF0aW9uLWNvbnRlbnQgewogICAgZGlzcGxheTogZmxleDsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKfQoKQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTYwcHgpIHsKCTo6di1kZWVwKC5wLXRvb2xiYXIpIHsKCQlmbGV4LXdyYXA6IHdyYXA7CgoJCS5wLWJ1dHRvbiB7CiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDAuMjVyZW07CiAgICAgICAgfQoJfQp9Cg=="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTableCrudDemo.vue"],"names":[],"mappings":";AA+uCA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAE9B,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;CACzB;AACD;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5E;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACrB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;CACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;EAEf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B;CACP;AACD","file":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTableCrudDemo.vue","sourceRoot":"","sourcesContent":["<template>\n\t<div>\n\t\t<div class=\"content-section introduction\">\n\t\t\t<div class=\"feature-intro\">\n\t\t\t\t<h1>DataTable <span>Crud</span></h1>\n\t\t\t\t<p>This sample demonstrates a CRUD implementation using various PrimeVue components.</p>\n\t\t\t</div>\n            <AppDemoActions />\n\t\t</div>\n\n\t\t<div class=\"content-section implementation\">\n            <div class=\"card\">\n                <Toolbar class=\"p-mb-4\">\n                    <template #left>\n                        <Button label=\"New\" icon=\"pi pi-plus\" class=\"p-button-success p-mr-2\" @click=\"openNew\" />\n                        <Button label=\"Delete\" icon=\"pi pi-trash\" class=\"p-button-danger\" @click=\"confirmDeleteSelected\" :disabled=\"!selectedProducts || !selectedProducts.length\" />\n                    </template>\n\n                    <template #right>\n                        <FileUpload mode=\"basic\" accept=\"image/*\" :maxFileSize=\"1000000\" label=\"Import\" chooseLabel=\"Import\" class=\"p-mr-2 p-d-inline-block\" />\n                        <Button label=\"Export\" icon=\"pi pi-upload\" class=\"p-button-help\" @click=\"exportCSV($event)\"  />\n                    </template>\n                </Toolbar>\n\n                <DataTable ref=\"dt\" :value=\"products\" v-model:selection=\"selectedProducts\" dataKey=\"id\"\n                    :paginator=\"true\" :rows=\"10\" :filters=\"filters\"\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" :rowsPerPageOptions=\"[5,10,25]\"\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} products\" responsiveLayout=\"scroll\">\n                    <template #header>\n                        <div class=\"table-header p-d-flex p-flex-column p-flex-md-row p-jc-md-between\">\n\t\t\t\t\t\t\t<h5 class=\"p-mb-2 p-m-md-0 p-as-md-center\">Manage Products</h5>\n\t\t\t\t\t\t\t<span class=\"p-input-icon-left\">\n                                <i class=\"pi pi-search\" />\n                                <InputText v-model=\"filters['global'].value\" placeholder=\"Search...\" />\n                            </span>\n\t\t\t\t\t\t</div>\n                    </template>\n\n                    <Column selectionMode=\"multiple\" style=\"width: 3rem\" :exportable=\"false\"></Column>\n                    <Column field=\"code\" header=\"Code\" :sortable=\"true\" style=\"min-width:12rem\"></Column>\n                    <Column field=\"name\" header=\"Name\" :sortable=\"true\" style=\"min-width:16rem\"></Column>\n                    <Column header=\"Image\">\n                         <template #body=\"slotProps\">\n                            <img :src=\"'demo/images/product/' + slotProps.data.image\" :alt=\"slotProps.data.image\" class=\"product-image\" />\n                        </template>\n                    </Column>\n                    <Column field=\"price\" header=\"Price\" :sortable=\"true\" style=\"min-width:8rem\">\n                        <template #body=\"slotProps\">\n                            {{formatCurrency(slotProps.data.price)}}\n                        </template>\n                    </Column>\n                    <Column field=\"category\" header=\"Category\" :sortable=\"true\" style=\"min-width:10rem\"></Column>\n                    <Column field=\"rating\" header=\"Reviews\" :sortable=\"true\" style=\"min-width:12rem\">\n                        <template #body=\"slotProps\">\n                           <Rating :modelValue=\"slotProps.data.rating\" :readonly=\"true\" :cancel=\"false\" />\n                        </template>\n                    </Column>\n                    <Column field=\"inventoryStatus\" header=\"Status\" :sortable=\"true\" style=\"min-width:12rem\">\n                        <template #body=\"slotProps\">\n                            <span :class=\"'product-badge status-' + (slotProps.data.inventoryStatus ? slotProps.data.inventoryStatus.toLowerCase() : '')\">{{slotProps.data.inventoryStatus}}</span>\n                        </template>\n                    </Column>\n                    <Column :exportable=\"false\" style=\"min-width:8rem\">\n                        <template #body=\"slotProps\">\n                            <Button icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-success p-mr-2\" @click=\"editProduct(slotProps.data)\" />\n                            <Button icon=\"pi pi-trash\" class=\"p-button-rounded p-button-warning\" @click=\"confirmDeleteProduct(slotProps.data)\" />\n                        </template>\n                    </Column>\n                </DataTable>\n            </div>\n\n            <Dialog v-model:visible=\"productDialog\" :style=\"{width: '450px'}\" header=\"Product Details\" :modal=\"true\" class=\"p-fluid\">\n                <img :src=\"'demo/images/product/' + product.image\" :alt=\"product.image\" class=\"product-image\" v-if=\"product.image\" />\n                <div class=\"p-field\">\n                    <label for=\"name\">Name</label>\n                    <InputText id=\"name\" v-model.trim=\"product.name\" required=\"true\" autofocus :class=\"{'p-invalid': submitted && !product.name}\" />\n                    <small class=\"p-error\" v-if=\"submitted && !product.name\">Name is required.</small>\n                </div>\n                <div class=\"p-field\">\n                    <label for=\"description\">Description</label>\n                    <Textarea id=\"description\" v-model=\"product.description\" required=\"true\" rows=\"3\" cols=\"20\" />\n                </div>\n\n                <div class=\"p-field\">\n\t\t\t\t\t<label for=\"inventoryStatus\" class=\"p-mb-3\">Inventory Status</label>\n\t\t\t\t\t<Dropdown id=\"inventoryStatus\" v-model=\"product.inventoryStatus\" :options=\"statuses\" optionLabel=\"label\" placeholder=\"Select a Status\">\n\t\t\t\t\t\t<template #value=\"slotProps\">\n\t\t\t\t\t\t\t<div v-if=\"slotProps.value && slotProps.value.value\">\n\t\t\t\t\t\t\t\t<span :class=\"'product-badge status-' +slotProps.value.value\">{{slotProps.value.label}}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div v-else-if=\"slotProps.value && !slotProps.value.value\">\n\t\t\t\t\t\t\t\t<span :class=\"'product-badge status-' +slotProps.value.toLowerCase()\">{{slotProps.value}}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span v-else>\n\t\t\t\t\t\t\t\t{{slotProps.placeholder}}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</Dropdown>\n\t\t\t\t</div>\n\n                <div class=\"p-field\">\n                    <label class=\"p-mb-3\">Category</label>\n                    <div class=\"p-formgrid p-grid\">\n                        <div class=\"p-field-radiobutton p-col-6\">\n                            <RadioButton id=\"category1\" name=\"category\" value=\"Accessories\" v-model=\"product.category\" />\n                            <label for=\"category1\">Accessories</label>\n                        </div>\n                        <div class=\"p-field-radiobutton p-col-6\">\n                            <RadioButton id=\"category2\" name=\"category\" value=\"Clothing\" v-model=\"product.category\" />\n                            <label for=\"category2\">Clothing</label>\n                        </div>\n                        <div class=\"p-field-radiobutton p-col-6\">\n                            <RadioButton id=\"category3\" name=\"category\" value=\"Electronics\" v-model=\"product.category\" />\n                            <label for=\"category3\">Electronics</label>\n                        </div>\n                        <div class=\"p-field-radiobutton p-col-6\">\n                            <RadioButton id=\"category4\" name=\"category\" value=\"Fitness\" v-model=\"product.category\" />\n                            <label for=\"category4\">Fitness</label>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"p-formgrid p-grid\">\n                    <div class=\"p-field p-col\">\n                        <label for=\"price\">Price</label>\n                        <InputNumber id=\"price\" v-model=\"product.price\" mode=\"currency\" currency=\"USD\" locale=\"en-US\" />\n                    </div>\n                    <div class=\"p-field p-col\">\n                        <label for=\"quantity\">Quantity</label>\n                        <InputNumber id=\"quantity\" v-model=\"product.quantity\" integeronly />\n                    </div>\n                </div>\n                <template #footer>\n                    <Button label=\"Cancel\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"hideDialog\"/>\n                    <Button label=\"Save\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"saveProduct\" />\n                </template>\n            </Dialog>\n\n            <Dialog v-model:visible=\"deleteProductDialog\" :style=\"{width: '450px'}\" header=\"Confirm\" :modal=\"true\">\n                <div class=\"confirmation-content\">\n                    <i class=\"pi pi-exclamation-triangle p-mr-3\" style=\"font-size: 2rem\" />\n                    <span v-if=\"product\">Are you sure you want to delete <b>{{product.name}}</b>?</span>\n                </div>\n                <template #footer>\n                    <Button label=\"No\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"deleteProductDialog = false\"/>\n                    <Button label=\"Yes\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"deleteProduct\" />\n                </template>\n            </Dialog>\n\n            <Dialog v-model:visible=\"deleteProductsDialog\" :style=\"{width: '450px'}\" header=\"Confirm\" :modal=\"true\">\n                <div class=\"confirmation-content\">\n                    <i class=\"pi pi-exclamation-triangle p-mr-3\" style=\"font-size: 2rem\" />\n                    <span v-if=\"product\">Are you sure you want to delete the selected products?</span>\n                </div>\n                <template #footer>\n                    <Button label=\"No\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"deleteProductsDialog = false\"/>\n                    <Button label=\"Yes\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"deleteSelectedProducts\" />\n                </template>\n            </Dialog>\n\t\t</div>\n\n       <AppDoc name=\"DataTableCrudDemo\" :sources=\"sources\" :service=\"['ProductService']\" :data=\"['products']\" github=\"datatable/DataTableCrudDemo.vue\" />\n\t</div>\n</template>\n\n<script>\nimport {FilterMatchMode} from 'primevue/api';\nimport ProductService from '../../service/ProductService';\n\nexport default {\n    data() {\n        return {\n            products: null,\n            productDialog: false,\n            deleteProductDialog: false,\n            deleteProductsDialog: false,\n            product: {},\n            selectedProducts: null,\n            filters: {},\n            submitted: false,\n            statuses: [\n\t\t\t\t{label: 'INSTOCK', value: 'instock'},\n\t\t\t\t{label: 'LOWSTOCK', value: 'lowstock'},\n\t\t\t\t{label: 'OUTOFSTOCK', value: 'outofstock'}\n            ],\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div>\n        <div class=\"card\">\n            <Toolbar class=\"p-mb-4\">\n                <template #left>\n                    <Button label=\"New\" icon=\"pi pi-plus\" class=\"p-button-success p-mr-2\" @click=\"openNew\" />\n                    <Button label=\"Delete\" icon=\"pi pi-trash\" class=\"p-button-danger\" @click=\"confirmDeleteSelected\" :disabled=\"!selectedProducts || !selectedProducts.length\" />\n                </template>\n\n                <template #right>\n                    <FileUpload mode=\"basic\" accept=\"image/*\" :maxFileSize=\"1000000\" label=\"Import\" chooseLabel=\"Import\" class=\"p-mr-2 p-d-inline-block\" />\n                    <Button label=\"Export\" icon=\"pi pi-upload\" class=\"p-button-help\" @click=\"exportCSV($event)\"  />\n                </template>\n            </Toolbar>\n\n            <DataTable ref=\"dt\" :value=\"products\" v-model:selection=\"selectedProducts\" dataKey=\"id\" \n                :paginator=\"true\" :rows=\"10\" :filters=\"filters\"\n                paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" :rowsPerPageOptions=\"[5,10,25]\"\n                currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} products\" responsiveLayout=\"scroll\">\n                <template #header>\n                    <div class=\"table-header p-d-flex p-flex-column p-flex-md-row p-jc-md-between\">\n\t\t\t\t\t\t<h5 class=\"p-mb-2 p-m-md-0 p-as-md-center\">Manage Products</h5>\n\t\t\t\t\t\t<span class=\"p-input-icon-left\">\n                            <i class=\"pi pi-search\" />\n                            <InputText v-model=\"filters['global'].value\" placeholder=\"Search...\" />\n                        </span>\n\t\t\t\t\t</div>\n                </template>\n\n                <Column selectionMode=\"multiple\" style=\"width: 3rem\" :exportable=\"false\"></Column>\n                <Column field=\"code\" header=\"Code\" :sortable=\"true\" style=\"min-width:12rem\"></Column>\n                <Column field=\"name\" header=\"Name\" :sortable=\"true\" style=\"min-width:16rem\"></Column>\n                <Column header=\"Image\">\n                     <template #body=\"slotProps\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" :alt=\"slotProps.data.image\" class=\"product-image\" />\n                    </template>\n                </Column>\n                <Column field=\"price\" header=\"Price\" :sortable=\"true\" style=\"min-width:8rem\">\n                    <template #body=\"slotProps\">\n                        {{formatCurrency(slotProps.data.price)}}\n                    </template>\n                </Column>\n                <Column field=\"category\" header=\"Category\" :sortable=\"true\" style=\"min-width:10rem\"></Column>\n                <Column field=\"rating\" header=\"Reviews\" :sortable=\"true\" style=\"min-width:12rem\">\n                    <template #body=\"slotProps\">\n                       <Rating :modelValue=\"slotProps.data.rating\" :readonly=\"true\" :cancel=\"false\" />\n                    </template>\n                </Column>\n                <Column field=\"inventoryStatus\" header=\"Status\" :sortable=\"true\" style=\"min-width:12rem\">\n                    <template #body=\"slotProps\">\n                        <span :class=\"'product-badge status-' + (slotProps.data.inventoryStatus ? slotProps.data.inventoryStatus.toLowerCase() : '')\">{{slotProps.data.inventoryStatus}}</span>\n                    </template>\n                </Column>\n                <Column :exportable=\"false\" style=\"min-width:8rem\">\n                    <template #body=\"slotProps\">\n                        <Button icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-success p-mr-2\" @click=\"editProduct(slotProps.data)\" />\n                        <Button icon=\"pi pi-trash\" class=\"p-button-rounded p-button-warning\" @click=\"confirmDeleteProduct(slotProps.data)\" />\n                    </template>\n                </Column>\n            </DataTable>\n        </div>\n\n        <Dialog v-model:visible=\"productDialog\" :style=\"{width: '450px'}\" header=\"Product Details\" :modal=\"true\" class=\"p-fluid\">\n            <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" :alt=\"product.image\" class=\"product-image\" v-if=\"product.image\" />\n            <div class=\"p-field\">\n                <label for=\"name\">Name</label>\n                <InputText id=\"name\" v-model.trim=\"product.name\" required=\"true\" autofocus :class=\"{'p-invalid': submitted && !product.name}\" />\n                <small class=\"p-error\" v-if=\"submitted && !product.name\">Name is required.</small>\n            </div>\n            <div class=\"p-field\">\n                <label for=\"description\">Description</label>\n                <Textarea id=\"description\" v-model=\"product.description\" required=\"true\" rows=\"3\" cols=\"20\" />\n            </div>\n\n            <div class=\"p-field\">\n\t\t\t\t<label for=\"inventoryStatus\" class=\"p-mb-3\">Inventory Status</label>\n\t\t\t\t<Dropdown id=\"inventoryStatus\" v-model=\"product.inventoryStatus\" :options=\"statuses\" optionLabel=\"label\" placeholder=\"Select a Status\">\n\t\t\t\t\t<template #value=\"slotProps\">\n\t\t\t\t\t\t<div v-if=\"slotProps.value && slotProps.value.value\">\n\t\t\t\t\t\t\t<span :class=\"'product-badge status-' +slotProps.value.value\">{{slotProps.value.label}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div v-else-if=\"slotProps.value && !slotProps.value.value\">\n\t\t\t\t\t\t\t<span :class=\"'product-badge status-' +slotProps.value.toLowerCase()\">{{slotProps.value}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<span v-else>\n\t\t\t\t\t\t\t{{slotProps.placeholder}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</template>\n\t\t\t\t</Dropdown>\n\t\t\t</div>\n\n            <div class=\"p-field\">\n                <label class=\"p-mb-3\">Category</label>\n                <div class=\"p-formgrid p-grid\">\n                    <div class=\"p-field-radiobutton p-col-6\">\n                        <RadioButton id=\"category1\" name=\"category\" value=\"Accessories\" v-model=\"product.category\" />\n                        <label for=\"category1\">Accessories</label>\n                    </div>\n                    <div class=\"p-field-radiobutton p-col-6\">\n                        <RadioButton id=\"category2\" name=\"category\" value=\"Clothing\" v-model=\"product.category\" />\n                        <label for=\"category2\">Clothing</label>\n                    </div>\n                    <div class=\"p-field-radiobutton p-col-6\">\n                        <RadioButton id=\"category3\" name=\"category\" value=\"Electronics\" v-model=\"product.category\" />\n                        <label for=\"category3\">Electronics</label>\n                    </div>\n                    <div class=\"p-field-radiobutton p-col-6\">\n                        <RadioButton id=\"category4\" name=\"category\" value=\"Fitness\" v-model=\"product.category\" />\n                        <label for=\"category4\">Fitness</label>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"p-formgrid p-grid\">\n                <div class=\"p-field p-col\">\n                    <label for=\"price\">Price</label>\n                    <InputNumber id=\"price\" v-model=\"product.price\" mode=\"currency\" currency=\"USD\" locale=\"en-US\" />\n                </div>\n                <div class=\"p-field p-col\">\n                    <label for=\"quantity\">Quantity</label>\n                    <InputNumber id=\"quantity\" v-model=\"product.quantity\" integeronly />\n                </div>\n            </div>\n            <template #footer>\n                <Button label=\"Cancel\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"hideDialog\"/>\n                <Button label=\"Save\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"saveProduct\" />\n            </template>\n        </Dialog>\n\n        <Dialog v-model:visible=\"deleteProductDialog\" :style=\"{width: '450px'}\" header=\"Confirm\" :modal=\"true\">\n            <div class=\"confirmation-content\">\n                <i class=\"pi pi-exclamation-triangle p-mr-3\" style=\"font-size: 2rem\" />\n                <span v-if=\"product\">Are you sure you want to delete <b>{{product.name}}</b>?</span>\n            </div>\n            <template #footer>\n                <Button label=\"No\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"deleteProductDialog = false\"/>\n                <Button label=\"Yes\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"deleteProduct\" />\n            </template>\n        </Dialog>\n\n        <Dialog v-model:visible=\"deleteProductsDialog\" :style=\"{width: '450px'}\" header=\"Confirm\" :modal=\"true\">\n            <div class=\"confirmation-content\">\n                <i class=\"pi pi-exclamation-triangle p-mr-3\" style=\"font-size: 2rem\" />\n                <span v-if=\"product\">Are you sure you want to delete the selected products?</span>\n            </div>\n            <template #footer>\n                <Button label=\"No\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"deleteProductsDialog = false\"/>\n                <Button label=\"Yes\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"deleteSelectedProducts\" />\n            </template>\n        </Dialog>\n\t</div>\n</template>\n\n<script>\nimport { FilterMatchMode } from 'primevue/api';\nimport ProductService from './service/ProductService';\n\nexport default {\n    data() {\n        return {\n            products: null,\n            productDialog: false,\n            deleteProductDialog: false,\n            deleteProductsDialog: false,\n            product: {},\n            selectedProducts: null,\n            filters: {},\n            submitted: false,\n            statuses: [\n\t\t\t\t{label: 'INSTOCK', value: 'instock'},\n\t\t\t\t{label: 'LOWSTOCK', value: 'lowstock'},\n\t\t\t\t{label: 'OUTOFSTOCK', value: 'outofstock'}\n            ]\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n        this.initFilters();\n    },\n    mounted() {\n        this.productService.getProducts().then(data => this.products = data);\n    },\n    methods: {\n        formatCurrency(value) {\n            if(value)\n\t\t\t\treturn value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\n\t\t\treturn;\n        },\n        openNew() {\n            this.product = {};\n            this.submitted = false;\n            this.productDialog = true;\n        },\n        hideDialog() {\n            this.productDialog = false;\n            this.submitted = false;\n        },\n        saveProduct() {\n            this.submitted = true;\n\n\t\t\tif (this.product.name.trim()) {\n                if (this.product.id) {\n                    this.product.inventoryStatus = this.product.inventoryStatus.value ? this.product.inventoryStatus.value: this.product.inventoryStatus;\n                    this.products[this.findIndexById(this.product.id)] = this.product;\n                    this.$toast.add({severity:'success', summary: 'Successful', detail: 'Product Updated', life: 3000});\n                }\n                else {\n                    this.product.id = this.createId();\n                    this.product.code = this.createId();\n                    this.product.image = 'product-placeholder.svg';\n                    this.product.inventoryStatus = this.product.inventoryStatus ? this.product.inventoryStatus.value : 'INSTOCK';\n                    this.products.push(this.product);\n                    this.$toast.add({severity:'success', summary: 'Successful', detail: 'Product Created', life: 3000});\n                }\n\n                this.productDialog = false;\n                this.product = {};\n            }\n        },\n        editProduct(product) {\n            this.product = {...product};\n            this.productDialog = true;\n        },\n        confirmDeleteProduct(product) {\n            this.product = product;\n            this.deleteProductDialog = true;\n        },\n        deleteProduct() {\n            this.products = this.products.filter(val => val.id !== this.product.id);\n            this.deleteProductDialog = false;\n            this.product = {};\n            this.$toast.add({severity:'success', summary: 'Successful', detail: 'Product Deleted', life: 3000});\n        },\n        findIndexById(id) {\n            let index = -1;\n            for (let i = 0; i < this.products.length; i++) {\n                if (this.products[i].id === id) {\n                    index = i;\n                    break;\n                }\n            }\n\n            return index;\n        },\n        createId() {\n            let id = '';\n            var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n            for ( var i = 0; i < 5; i++ ) {\n                id += chars.charAt(Math.floor(Math.random() * chars.length));\n            }\n            return id;\n        },\n        exportCSV() {\n            this.$refs.dt.exportCSV();\n        },\n        confirmDeleteSelected() {\n            this.deleteProductsDialog = true;\n        },\n        deleteSelectedProducts() {\n            this.products = this.products.filter(val => !this.selectedProducts.includes(val));\n            this.deleteProductsDialog = false;\n            this.selectedProducts = null;\n            this.$toast.add({severity:'success', summary: 'Successful', detail: 'Products Deleted', life: 3000});\n        },\n        initFilters() {\n            this.filters = {\n                'global': {value: null, matchMode: FilterMatchMode.CONTAINS},\n            }\n        }\n    }\n}\n<\\\\/script>\n\n<style lang=\"scss\" scoped>\n.table-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    @media screen and (max-width: 960px) {\n        align-items: start;\n\t}\n}\n\n.product-image {\n    width: 50px;\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n}\n\n.p-dialog .product-image {\n    width: 50px;\n    margin: 0 auto 2rem auto;\n    display: block;\n}\n\n.confirmation-content {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n@media screen and (max-width: 960px) {\n\t::v-deep(.p-toolbar) {\n\t\tflex-wrap: wrap;\n        \n\t\t.p-button {\n            margin-bottom: 0.25rem;\n        }\n\t}\n}\n</style>\n`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div>\n        <div class=\"card\">\n            <Toolbar class=\"p-mb-4\">\n                <template #left>\n                    <Button label=\"New\" icon=\"pi pi-plus\" class=\"p-button-success p-mr-2\" @click=\"openNew\" />\n                    <Button label=\"Delete\" icon=\"pi pi-trash\" class=\"p-button-danger\" @click=\"confirmDeleteSelected\" :disabled=\"!selectedProducts || !selectedProducts.length\" />\n                </template>\n\n                <template #right>\n                    <FileUpload mode=\"basic\" accept=\"image/*\" :maxFileSize=\"1000000\" label=\"Import\" chooseLabel=\"Import\" class=\"p-mr-2 p-d-inline-block\" />\n                    <Button label=\"Export\" icon=\"pi pi-upload\" class=\"p-button-help\" @click=\"exportCSV($event)\"  />\n                </template>\n            </Toolbar>\n\n            <DataTable ref=\"dt\" :value=\"products\" v-model:selection=\"selectedProducts\" dataKey=\"id\" \n                :paginator=\"true\" :rows=\"10\" :filters=\"filters\"\n                paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" :rowsPerPageOptions=\"[5,10,25]\"\n                currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} products\" responsiveLayout=\"scroll\">\n                <template #header>\n                    <div class=\"table-header p-d-flex p-flex-column p-flex-md-row p-jc-md-between\">\n\t\t\t\t\t\t<h5 class=\"p-mb-2 p-m-md-0 p-as-md-center\">Manage Products</h5>\n\t\t\t\t\t\t<span class=\"p-input-icon-left\">\n                            <i class=\"pi pi-search\" />\n                            <InputText v-model=\"filters['global'].value\" placeholder=\"Search...\" />\n                        </span>\n\t\t\t\t\t</div>\n                </template>\n\n                <Column selectionMode=\"multiple\" style=\"width: 3rem\" :exportable=\"false\"></Column>\n                <Column field=\"code\" header=\"Code\" :sortable=\"true\" style=\"min-width:12rem\"></Column>\n                <Column field=\"name\" header=\"Name\" :sortable=\"true\" style=\"min-width:16rem\"></Column>\n                <Column header=\"Image\">\n                     <template #body=\"slotProps\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" :alt=\"slotProps.data.image\" class=\"product-image\" />\n                    </template>\n                </Column>\n                <Column field=\"price\" header=\"Price\" :sortable=\"true\" style=\"min-width:8rem\">\n                    <template #body=\"slotProps\">\n                        {{formatCurrency(slotProps.data.price)}}\n                    </template>\n                </Column>\n                <Column field=\"category\" header=\"Category\" :sortable=\"true\" style=\"min-width:10rem\"></Column>\n                <Column field=\"rating\" header=\"Reviews\" :sortable=\"true\" style=\"min-width:12rem\">\n                    <template #body=\"slotProps\">\n                       <Rating :modelValue=\"slotProps.data.rating\" :readonly=\"true\" :cancel=\"false\" />\n                    </template>\n                </Column>\n                <Column field=\"inventoryStatus\" header=\"Status\" :sortable=\"true\" style=\"min-width:12rem\">\n                    <template #body=\"slotProps\">\n                        <span :class=\"'product-badge status-' + (slotProps.data.inventoryStatus ? slotProps.data.inventoryStatus.toLowerCase() : '')\">{{slotProps.data.inventoryStatus}}</span>\n                    </template>\n                </Column>\n                <Column :exportable=\"false\" style=\"min-width:8rem\">\n                    <template #body=\"slotProps\">\n                        <Button icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-success p-mr-2\" @click=\"editProduct(slotProps.data)\" />\n                        <Button icon=\"pi pi-trash\" class=\"p-button-rounded p-button-warning\" @click=\"confirmDeleteProduct(slotProps.data)\" />\n                    </template>\n                </Column>\n            </DataTable>\n        </div>\n\n        <Dialog v-model:visible=\"productDialog\" :style=\"{width: '450px'}\" header=\"Product Details\" :modal=\"true\" class=\"p-fluid\">\n            <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" :alt=\"product.image\" class=\"product-image\" v-if=\"product.image\" />\n            <div class=\"p-field\">\n                <label for=\"name\">Name</label>\n                <InputText id=\"name\" v-model.trim=\"product.name\" required=\"true\" autofocus :class=\"{'p-invalid': submitted && !product.name}\" />\n                <small class=\"p-error\" v-if=\"submitted && !product.name\">Name is required.</small>\n            </div>\n            <div class=\"p-field\">\n                <label for=\"description\">Description</label>\n                <Textarea id=\"description\" v-model=\"product.description\" required=\"true\" rows=\"3\" cols=\"20\" />\n            </div>\n\n            <div class=\"p-field\">\n\t\t\t\t<label for=\"inventoryStatus\" class=\"p-mb-3\">Inventory Status</label>\n\t\t\t\t<Dropdown id=\"inventoryStatus\" v-model=\"product.inventoryStatus\" :options=\"statuses\" optionLabel=\"label\" placeholder=\"Select a Status\">\n\t\t\t\t\t<template #value=\"slotProps\">\n\t\t\t\t\t\t<div v-if=\"slotProps.value && slotProps.value.value\">\n\t\t\t\t\t\t\t<span :class=\"'product-badge status-' +slotProps.value.value\">{{slotProps.value.label}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div v-else-if=\"slotProps.value && !slotProps.value.value\">\n\t\t\t\t\t\t\t<span :class=\"'product-badge status-' +slotProps.value.toLowerCase()\">{{slotProps.value}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<span v-else>\n\t\t\t\t\t\t\t{{slotProps.placeholder}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</template>\n\t\t\t\t</Dropdown>\n\t\t\t</div>\n\n            <div class=\"p-field\">\n                <label class=\"p-mb-3\">Category</label>\n                <div class=\"p-formgrid p-grid\">\n                    <div class=\"p-field-radiobutton p-col-6\">\n                        <RadioButton id=\"category1\" name=\"category\" value=\"Accessories\" v-model=\"product.category\" />\n                        <label for=\"category1\">Accessories</label>\n                    </div>\n                    <div class=\"p-field-radiobutton p-col-6\">\n                        <RadioButton id=\"category2\" name=\"category\" value=\"Clothing\" v-model=\"product.category\" />\n                        <label for=\"category2\">Clothing</label>\n                    </div>\n                    <div class=\"p-field-radiobutton p-col-6\">\n                        <RadioButton id=\"category3\" name=\"category\" value=\"Electronics\" v-model=\"product.category\" />\n                        <label for=\"category3\">Electronics</label>\n                    </div>\n                    <div class=\"p-field-radiobutton p-col-6\">\n                        <RadioButton id=\"category4\" name=\"category\" value=\"Fitness\" v-model=\"product.category\" />\n                        <label for=\"category4\">Fitness</label>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"p-formgrid p-grid\">\n                <div class=\"p-field p-col\">\n                    <label for=\"price\">Price</label>\n                    <InputNumber id=\"price\" v-model=\"product.price\" mode=\"currency\" currency=\"USD\" locale=\"en-US\" />\n                </div>\n                <div class=\"p-field p-col\">\n                    <label for=\"quantity\">Quantity</label>\n                    <InputNumber id=\"quantity\" v-model=\"product.quantity\" integeronly />\n                </div>\n            </div>\n            <template #footer>\n                <Button label=\"Cancel\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"hideDialog\"/>\n                <Button label=\"Save\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"saveProduct\" />\n            </template>\n        </Dialog>\n\n        <Dialog v-model:visible=\"deleteProductDialog\" :style=\"{width: '450px'}\" header=\"Confirm\" :modal=\"true\">\n            <div class=\"confirmation-content\">\n                <i class=\"pi pi-exclamation-triangle p-mr-3\" style=\"font-size: 2rem\" />\n                <span v-if=\"product\">Are you sure you want to delete <b>{{product.name}}</b>?</span>\n            </div>\n            <template #footer>\n                <Button label=\"No\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"deleteProductDialog = false\"/>\n                <Button label=\"Yes\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"deleteProduct\" />\n            </template>\n        </Dialog>\n\n        <Dialog v-model:visible=\"deleteProductsDialog\" :style=\"{width: '450px'}\" header=\"Confirm\" :modal=\"true\">\n            <div class=\"confirmation-content\">\n                <i class=\"pi pi-exclamation-triangle p-mr-3\" style=\"font-size: 2rem\" />\n                <span v-if=\"product\">Are you sure you want to delete the selected products?</span>\n            </div>\n            <template #footer>\n                <Button label=\"No\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"deleteProductsDialog = false\"/>\n                <Button label=\"Yes\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"deleteSelectedProducts\" />\n            </template>\n        </Dialog>\n\t</div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { FilterMatchMode } from 'primevue/api';\nimport { useToast } from 'primevue/usetoast';\nimport ProductService from './service/ProductService';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            productService.value.getProducts().then(data => products.value = data);\n        })\n\n        const toast = useToast();\n        const dt = ref();\n        const products = ref();\n        const productDialog = ref(false);\n        const deleteProductDialog = ref(false);\n        const deleteProductsDialog = ref(false);\n        const product = ref({});\n        const productService = ref(new ProductService());\n        const selectedProducts = ref();\n        const filters = ref({\n            'global': {value: null, matchMode: FilterMatchMode.CONTAINS},\n        });\n        const submitted = ref(false);\n        const statuses = ref([\n\t     \t{label: 'INSTOCK', value: 'instock'},\n\t     \t{label: 'LOWSTOCK', value: 'lowstock'},\n\t     \t{label: 'OUTOFSTOCK', value: 'outofstock'}\n        ]);\n\n        const formatCurrency = (value) => {\n            if(value)\n\t\t\t\treturn value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\n\t\t\treturn;\n        };\n        const openNew = () => {\n            product.value = {};\n            submitted.value = false;\n            productDialog.value = true;\n        };\n        const hideDialog = () => {\n            productDialog.value = false;\n            submitted.value = false;\n        };\n        const saveProduct = () => {\n            submitted.value = true;\n\n\t\t\tif (product.value.name.trim()) {\n                if (product.value.id) {\n                    product.value.inventoryStatus = product.value.inventoryStatus.value ? product.value.inventoryStatus.value : product.value.inventoryStatus;\n                    products.value[findIndexById(product.value.id)] = product.value;\n                    toast.add({severity:'success', summary: 'Successful', detail: 'Product Updated', life: 3000});\n                }\n                else {\n                    product.value.id = createId();\n                    product.value.code = createId();\n                    product.value.image = 'product-placeholder.svg';\n                    product.value.inventoryStatus = product.value.inventoryStatus ? product.value.inventoryStatus.value : 'INSTOCK';\n                    products.value.push(product.value);\n                    toast.add({severity:'success', summary: 'Successful', detail: 'Product Created', life: 3000});\n                }\n\n                productDialog.value = false;\n                product.value = {};\n            }\n        };\n        const editProduct = (prod) => {\n            product.value = {...prod};\n            productDialog.value = true;\n        };\n        const confirmDeleteProduct = (prod) => {\n            product.value = prod;\n            deleteProductDialog.value = true;\n        };\n        const deleteProduct = () => {\n            products.value = products.value.filter(val => val.id !== product.value.id);\n            deleteProductDialog.value = false;\n            product.value = {};\n            toast.add({severity:'success', summary: 'Successful', detail: 'Product Deleted', life: 3000});\n        };\n        const findIndexById = (id) => {\n            let index = -1;\n            for (let i = 0; i < products.value.length; i++) {\n                if (products.value[i].id === id) {\n                    index = i;\n                    break;\n                }\n            }\n\n            return index;\n        };\n        const createId = () => {\n            let id = '';\n            var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n            for ( var i = 0; i < 5; i++ ) {\n                id += chars.charAt(Math.floor(Math.random() * chars.length));\n            }\n            return id;\n        }\n        const exportCSV = () => {\n            dt.value.exportCSV();\n        };\n        const confirmDeleteSelected = () => {\n            deleteProductsDialog.value = true;\n        };\n        const deleteSelectedProducts = () => {\n            products.value = products.value.filter(val => !selectedProducts.value.includes(val));\n            deleteProductsDialog.value = false;\n            selectedProducts.value = null;\n            toast.add({severity:'success', summary: 'Successful', detail: 'Products Deleted', life: 3000});\n        };\n\n        return { dt, products, productDialog, deleteProductDialog, deleteProductsDialog, product, \n            selectedProducts, filters, submitted, statuses, formatCurrency, openNew, hideDialog, saveProduct, editProduct,\n            confirmDeleteProduct, deleteProduct, findIndexById, createId, exportCSV, confirmDeleteSelected, deleteSelectedProducts}\n    }\n}\n<\\\\/script>\n\n<style lang=\"scss\" scoped>\n.table-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    @media screen and (max-width: 960px) {\n        align-items: start;\n\t}\n}\n\n.product-image {\n    width: 50px;\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n}\n\n.p-dialog .product-image {\n    width: 50px;\n    margin: 0 auto 2rem auto;\n    display: block;\n}\n\n.confirmation-content {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n@media screen and (max-width: 960px) {\n\t::v-deep(.p-toolbar) {\n\t\tflex-wrap: wrap;\n        \n\t\t.p-button {\n            margin-bottom: 0.25rem;\n        }\n\t}\n}\n</style>\n`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/datatable/datatable.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/column/column.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/toolbar/toolbar.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/fileupload/fileupload.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/rating/rating.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/toast/toast.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/toastservice/toastservice.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/textarea/textarea.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/radiobutton/radiobutton.min.js\"><\\\\/script>\n        <script src=\"./ProductService.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <div class=\"card\">\n                <p-toast></p-toast>\n\n                <p-toolbar class=\"p-mb-4\">\n                    <template #left>\n                        <p-button label=\"New\" icon=\"pi pi-plus\" class=\"p-button-success p-mr-2\" @click=\"openNew\"></p-button>\n                        <p-button label=\"Delete\" icon=\"pi pi-trash\" class=\"p-button-danger\" @click=\"confirmDeleteSelected\" :disabled=\"!selectedProducts || !selectedProducts.length\"></p-button>\n                    </template>\n\n                    <template #right>\n                        <p-fileupload mode=\"basic\" accept=\"image/*\" :maxFileSize=\"1000000\" label=\"Import\" chooseLabel=\"Import\" class=\"p-mr-2 p-d-inline-block\"></p-fileupload>\n                        <p-button label=\"Export\" icon=\"pi pi-upload\" class=\"p-button-help\" @click=\"exportCSV($event)\"></p-button>\n                    </template>\n                </p-toolbar>\n\n                <p-datatable ref=\"dt\" :value=\"products\" v-model:selection=\"selectedProducts\" dataKey=\"id\"\n                    :paginator=\"true\" :rows=\"10\" :filters=\"filters\"\n                    paginator-template=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" :rows-per-page-options=\"[5,10,25]\"\n                    current-page-report-template=\"Showing {first} to {last} of {totalRecords} products\" responsive-layout=\"scroll\">\n                    <template #header>\n                        <div class=\"table-header p-d-flex p-flex-column p-flex-md-row p-jc-md-between\">\n\t\t\t\t\t\t\t<h5 class=\"p-mb-2 p-m-md-0 p-as-md-center\">Manage Products</h5>\n\t\t\t\t\t\t\t<span class=\"p-input-icon-left\">\n                                <i class=\"pi pi-search\"></i>\n                                <p-inputtext v-model=\"filters['global'].value\" placeholder=\"Search...\"></p-inputtext>\n                            </span>\n\t\t\t\t\t\t</div>\n                    </template>\n\n                    <p-column selectionMode=\"multiple\" style=\"width: 3rem\" :exportable=\"false\"></p-column>\n                    <p-column field=\"code\" header=\"Code\" :sortable=\"true\" style=\"min-width:12rem\"></p-column>\n                    <p-column field=\"name\" header=\"Name\" :sortable=\"true\" style=\"min-width:16rem\"></p-column>\n                    <p-column header=\"Image\">\n                         <template #body=\"slotProps\">\n                            <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" class=\"product-image\" />\n                        </template>\n                    </p-column>\n                    <p-column field=\"price\" header=\"Price\" :sortable=\"true\" style=\"min-width:8rem\">\n                        <template #body=\"slotProps\">\n                            {{formatCurrency(slotProps.data.price)}}\n                        </template>\n                    </p-column>\n                    <p-column field=\"category\" header=\"Category\" :sortable=\"true\" style=\"min-width:10rem\"></p-column>\n                    <p-column field=\"rating\" header=\"Reviews\" :sortable=\"true\" style=\"min-width:12rem\">\n                        <template #body=\"slotProps\">\n                           <p-rating :modelValue=\"slotProps.data.rating\" :readonly=\"true\" :cancel=\"false\"></p-rating>\n                        </template>\n                    </p-column>\n                    <p-column field=\"inventoryStatus\" header=\"Status\" :sortable=\"true\" style=\"min-width:12rem\">\n                        <template #body=\"slotProps\">\n                            <span :class=\"'product-badge status-' + (slotProps.data.inventoryStatus ? slotProps.data.inventoryStatus.toLowerCase() : '')\">{{slotProps.data.inventoryStatus}}</span>\n                        </template>\n                    </p-column>\n                    <p-column :exportable=\"false\" style=\"min-width:8rem\">\n                        <template #body=\"slotProps\">\n                            <p-button icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-success p-mr-2\" @click=\"editProduct(slotProps.data)\"></p-button>\n                            <p-button icon=\"pi pi-trash\" class=\"p-button-rounded p-button-warning\" @click=\"confirmDeleteProduct(slotProps.data)\"></p-button>\n                        </template>\n                    </p-column>\n                </p-datatable>\n            </div>\n\n            <p-dialog v-model:visible=\"productDialog\" :style=\"{width: '450px'}\" header=\"Product Details\" :modal=\"true\" class=\"p-fluid\">\n                <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" class=\"product-image\" v-if=\"product.image\" />\n                <div class=\"p-field\">\n                    <label for=\"name\">Name</label>\n                    <p-inputtext id=\"name\" v-model.trim=\"product.name\" required=\"true\" autofocus :class=\"{'p-invalid': submitted && !product.name}\"></p-inputtext>\n                    <small class=\"p-error\" v-if=\"submitted && !product.name\">Name is required.</small>\n                </div>\n                <div class=\"p-field\">\n                    <label for=\"description\">Description</label>\n                    <p-textarea id=\"description\" v-model=\"product.description\" required=\"true\" rows=\"3\" cols=\"20\"></p-textarea>\n                </div>\n\n                <div class=\"p-field\">\n\t\t\t\t\t<label for=\"inventoryStatus\" class=\"p-mb-3\">Inventory Status</label>\n\t\t\t\t\t<p-dropdown id=\"inventoryStatus\" v-model=\"product.inventoryStatus\" :options=\"statuses\" option-label=\"label\" placeholder=\"Select a Status\">\n\t\t\t\t\t\t<template #value=\"slotProps\">\n\t\t\t\t\t\t\t<div v-if=\"slotProps.value && slotProps.value.value\">\n\t\t\t\t\t\t\t\t<span :class=\"'product-badge status-' +slotProps.value.value\">{{slotProps.value.label}}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div v-else-if=\"slotProps.value && !slotProps.value.value\">\n\t\t\t\t\t\t\t\t<span :class=\"'product-badge status-' +slotProps.value.toLowerCase()\">{{slotProps.value}}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span v-else>\n\t\t\t\t\t\t\t\t{{slotProps.placeholder}}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</p-dropdown>\n\t\t\t\t</div>\n\n                <div class=\"p-field\">\n                    <label class=\"p-mb-3\">Category</label>\n                    <div class=\"p-formgrid p-grid\">\n                        <div class=\"p-field-radiobutton p-col-6\">\n                            <p-radiobutton id=\"category1\" name=\"category\" value=\"Accessories\" v-model=\"product.category\"></p-radiobutton>\n                            <label for=\"category1\">Accessories</label>\n                        </div>\n                        <div class=\"p-field-radiobutton p-col-6\">\n                            <p-radiobutton id=\"category2\" name=\"category\" value=\"Clothing\" v-model=\"product.category\"></p-radiobutton>\n                            <label for=\"category2\">Clothing</label>\n                        </div>\n                        <div class=\"p-field-radiobutton p-col-6\">\n                            <p-radiobutton id=\"category3\" name=\"category\" value=\"Electronics\" v-model=\"product.category\"></p-radiobutton>\n                            <label for=\"category3\">Electronics</label>\n                        </div>\n                        <div class=\"p-field-radiobutton p-col-6\">\n                            <p-radiobutton id=\"category4\" name=\"category\" value=\"Fitness\" v-model=\"product.category\"></p-radiobutton>\n                            <label for=\"category4\">Fitness</label>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"p-formgrid p-grid\">\n                    <div class=\"p-field p-col\">\n                        <label for=\"price\">Price</label>\n                        <p-inputnumber id=\"price\" v-model=\"product.price\" mode=\"currency\" currency=\"USD\" locale=\"en-US\"></p-inputnumber></p-inputnumber>\n                    </div>\n                    <div class=\"p-field p-col\">\n                        <label for=\"quantity\">Quantity</label>\n                        <p-inputnumber id=\"quantity\" v-model=\"product.quantity\" integeronly></p-inputnumber>\n                    </div>\n                </div>\n                <template #footer>\n                    <p-button label=\"Cancel\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"hideDialog\"></p-button>\n                    <p-button label=\"Save\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"saveProduct\"></p-button>\n                </template>\n            </p-dialog>\n\n            <p-dialog v-model:visible=\"deleteProductDialog\" :style=\"{width: '450px'}\" header=\"Confirm\" :modal=\"true\">\n                <div class=\"confirmation-content\">\n                    <i class=\"pi pi-exclamation-triangle p-mr-3\" style=\"font-size: 2rem\"></i>\n                    <span v-if=\"product\">Are you sure you want to delete <b>{{product.name}}</b>?</span>\n                </div>\n                <template #footer>\n                    <p-button label=\"No\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"deleteProductDialog = false\"></p-button>\n                    <p-button label=\"Yes\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"deleteProduct\"></p-button>\n                </template>\n            </p-dialog>\n\n            <p-dialog v-model:visible=\"deleteProductsDialog\" :style=\"{width: '450px'}\" header=\"Confirm\" :modal=\"true\">\n                <div class=\"confirmation-content\">\n                    <i class=\"pi pi-exclamation-triangle p-mr-3\" style=\"font-size: 2rem\"></i>\n                    <span v-if=\"product\">Are you sure you want to delete the selected products?</span>\n                </div>\n                <template #footer>\n                    <p-button label=\"No\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"deleteProductsDialog = false\"></p-button>\n                    <p-button label=\"Yes\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"deleteSelectedProducts\"></p-button>\n                </template>\n            </p-dialog>            \n        </div>\n\n        <script type=\"module\">\n            const { createApp, onMounted, ref } = Vue;\n            const { useToast } = primevue.usetoast;\n            const { FilterMatchMode } = primevue.api;\n\n            const App = {\n                setup() {\n                    onMounted(() => {\n                        productService.value.getProducts().then(data => products.value = data);\n                    })\n\n                    const toast = useToast();\n                    const dt = ref();\n                    const products = ref();\n                    const productDialog = ref(false);\n                    const deleteProductDialog = ref(false);\n                    const deleteProductsDialog = ref(false);\n                    const product = ref({});\n                    const productService = ref(new ProductService());\n                    const selectedProducts = ref();\n                    const filters = ref({\n                        'global': {value: null, matchMode: FilterMatchMode.CONTAINS},\n                    });\n                    const submitted = ref(false);\n                    const statuses = ref([\n\t                 \t{label: 'INSTOCK', value: 'instock'},\n\t                 \t{label: 'LOWSTOCK', value: 'lowstock'},\n\t                 \t{label: 'OUTOFSTOCK', value: 'outofstock'}\n                    ]);\n\n                    const formatCurrency = (value) => {\n                        if(value)\n\t\t            \t\treturn value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\n\t\t            \treturn;\n                    };\n                    const openNew = () => {\n                        product.value = {};\n                        submitted.value = false;\n                        productDialog.value = true;\n                    };\n                    const hideDialog = () => {\n                        productDialog.value = false;\n                        submitted.value = false;\n                    };\n                    const saveProduct = () => {\n                        submitted.value = true;\n\n\t\t            \tif (product.value.name.trim()) {\n                            if (product.value.id) {\n                                product.value.inventoryStatus = product.value.inventoryStatus.value ? product.value.inventoryStatus.value : product.value.inventoryStatus;\n                                products.value[findIndexById(product.value.id)] = product.value;\n                                toast.add({severity:'success', summary: 'Successful', detail: 'Product Updated', life: 3000});\n                            }\n                            else {\n                                product.value.id = createId();\n                                product.value.code = createId();\n                                product.value.image = 'product-placeholder.svg';\n                                product.value.inventoryStatus = product.value.inventoryStatus ? product.value.inventoryStatus.value : 'INSTOCK';\n                                products.value.push(product.value);\n                                toast.add({severity:'success', summary: 'Successful', detail: 'Product Created', life: 3000});\n                            }\n\n                            productDialog.value = false;\n                            product.value = {};\n                        }\n                    };\n                    const editProduct = (prod) => {\n                        product.value = {...prod};\n                        productDialog.value = true;\n                    };\n                    const confirmDeleteProduct = (prod) => {\n                        product.value = prod;\n                        deleteProductDialog.value = true;\n                    };\n                    const deleteProduct = () => {\n                        products.value = products.value.filter(val => val.id !== product.value.id);\n                        deleteProductDialog.value = false;\n                        product.value = {};\n                        toast.add({severity:'success', summary: 'Successful', detail: 'Product Deleted', life: 3000});\n                    };\n                    const findIndexById = (id) => {\n                        let index = -1;\n                        for (let i = 0; i < products.value.length; i++) {\n                            if (products.value[i].id === id) {\n                                index = i;\n                                break;\n                            }\n                        }\n\n                        return index;\n                    };\n                    const createId = () => {\n                        let id = '';\n                        var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n                        for ( var i = 0; i < 5; i++ ) {\n                            id += chars.charAt(Math.floor(Math.random() * chars.length));\n                        }\n                        return id;\n                    }\n                    const exportCSV = () => {\n                        dt.value.exportCSV();\n                    };\n                    const confirmDeleteSelected = () => {\n                        deleteProductsDialog.value = true;\n                    };\n                    const deleteSelectedProducts = () => {\n                        products.value = products.value.filter(val => !selectedProducts.value.includes(val));\n                        deleteProductsDialog.value = false;\n                        selectedProducts.value = null;\n                        toast.add({severity:'success', summary: 'Successful', detail: 'Products Deleted', life: 3000});\n                    };\n\n                    return { dt, products, productDialog, deleteProductDialog, deleteProductsDialog, product, \n                        selectedProducts, filters, submitted, statuses, formatCurrency, openNew, hideDialog, saveProduct, editProduct,\n                        confirmDeleteProduct, deleteProduct, findIndexById, createId, exportCSV, confirmDeleteSelected, deleteSelectedProducts}\n                },\n                components: {\n                    \"p-datatable\": primevue.datatable,\n                    \"p-column\": primevue.column,\n                    \"p-toolbar\": primevue.toolbar,\n                    \"p-fileupload\": primevue.fileupload,\n                    \"p-rating\": primevue.rating,\n                    \"p-toast\": primevue.toast,\n                    \"p-inputtext\": primevue.inputtext,\n                    \"p-inputnumber\": primevue.inputnumber,\n                    \"p-button\": primevue.button,\n                    \"p-dialog\": primevue.dialog,\n                    \"p-textarea\": primevue.textarea,\n                    \"p-dropdown\": primevue.dropdown,\n                    \"p-radiobutton\": primevue.radiobutton\n                }\n            };\n\n            createApp(App)\n                .use(primevue.config.default)\n                .use(primevue.toastservice)\n                .mount(\"#app\");\n        <\\\\/script>\n        \n        <style lang=\"scss\" scoped>\n        .table-header {\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n        }\n\n        .product-image {\n            width: 50px;\n            box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n        }\n\n        .p-dialog .product-image {\n            width: 50px;\n            margin: 0 auto 2rem auto;\n            display: block;\n        }\n\n        .confirmation-content {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n        @media screen and (max-width: 960px) {\n            .table-header {\n                align-items: start;\n            }\n\n            .p-toolbar {\n                flex-wrap: wrap;\n            }\n                \n            .p-toolbar .p-button {\n                margin-bottom: 0.25rem;\n            }\n        }\n        </style>\n`\n                }\n            }\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n        this.initFilters();\n    },\n    mounted() {\n        this.productService.getProducts().then(data => this.products = data);\n    },\n    methods: {\n        formatCurrency(value) {\n            if(value)\n\t\t\t\treturn value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\n\t\t\treturn;\n        },\n        openNew() {\n            this.product = {};\n            this.submitted = false;\n            this.productDialog = true;\n        },\n        hideDialog() {\n            this.productDialog = false;\n            this.submitted = false;\n        },\n        saveProduct() {\n            this.submitted = true;\n\n\t\t\tif (this.product.name.trim()) {\n                if (this.product.id) {\n                    this.product.inventoryStatus = this.product.inventoryStatus.value ? this.product.inventoryStatus.value: this.product.inventoryStatus;\n                    this.products[this.findIndexById(this.product.id)] = this.product;\n                    this.$toast.add({severity:'success', summary: 'Successful', detail: 'Product Updated', life: 3000});\n                }\n                else {\n                    this.product.id = this.createId();\n                    this.product.code = this.createId();\n                    this.product.image = 'product-placeholder.svg';\n                    this.product.inventoryStatus = this.product.inventoryStatus ? this.product.inventoryStatus.value : 'INSTOCK';\n                    this.products.push(this.product);\n                    this.$toast.add({severity:'success', summary: 'Successful', detail: 'Product Created', life: 3000});\n                }\n\n                this.productDialog = false;\n                this.product = {};\n            }\n        },\n        editProduct(product) {\n            this.product = {...product};\n            this.productDialog = true;\n        },\n        confirmDeleteProduct(product) {\n            this.product = product;\n            this.deleteProductDialog = true;\n        },\n        deleteProduct() {\n            this.products = this.products.filter(val => val.id !== this.product.id);\n            this.deleteProductDialog = false;\n            this.product = {};\n            this.$toast.add({severity:'success', summary: 'Successful', detail: 'Product Deleted', life: 3000});\n        },\n        findIndexById(id) {\n            let index = -1;\n            for (let i = 0; i < this.products.length; i++) {\n                if (this.products[i].id === id) {\n                    index = i;\n                    break;\n                }\n            }\n\n            return index;\n        },\n        createId() {\n            let id = '';\n            var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n            for ( var i = 0; i < 5; i++ ) {\n                id += chars.charAt(Math.floor(Math.random() * chars.length));\n            }\n            return id;\n        },\n        exportCSV() {\n            this.$refs.dt.exportCSV();\n        },\n        confirmDeleteSelected() {\n            this.deleteProductsDialog = true;\n        },\n        deleteSelectedProducts() {\n            this.products = this.products.filter(val => !this.selectedProducts.includes(val));\n            this.deleteProductsDialog = false;\n            this.selectedProducts = null;\n            this.$toast.add({severity:'success', summary: 'Successful', detail: 'Products Deleted', life: 3000});\n        },\n        initFilters() {\n            this.filters = {\n                'global': {value: null, matchMode: FilterMatchMode.CONTAINS},\n            }\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.table-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    @media screen and (max-width: 960px) {\n        align-items: start;\n\t}\n}\n\n.product-image {\n    width: 100px;\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n}\n\n.p-dialog .product-image {\n    width: 150px;\n    margin: 0 auto 2rem auto;\n    display: block;\n}\n\n.confirmation-content {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n@media screen and (max-width: 960px) {\n\t::v-deep(.p-toolbar) {\n\t\tflex-wrap: wrap;\n\n\t\t.p-button {\n            margin-bottom: 0.25rem;\n        }\n\t}\n}\n</style>"]}]}