{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/chart/RadarChartDemo.vue?vue&type=template&id=2915f206","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/chart/RadarChartDemo.vue","mtime":1634589566255},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8ZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbnRlbnQtc2VjdGlvbiBpbnRyb2R1Y3Rpb24iPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmZWF0dXJlLWludHJvIj4KICAgICAgICAgICAgICAgIDxoMT5SYWRhciBDaGFydDwvaDE+CiAgICAgICAgICAgICAgICA8cD5BIHJhZGFyIGNoYXJ0IGlzIGEgZ3JhcGhpY2FsIG1ldGhvZCBvZiBkaXNwbGF5aW5nIG11bHRpdmFyaWF0ZSBkYXRhIGluIHRoZSBmb3JtIG9mIGEgdHdvLWRpbWVuc2lvbmFsIGNoYXJ0IG9mIHRocmVlIG9yIG1vcmUgcXVhbnRpdGF0aXZlIHZhcmlhYmxlcyByZXByZXNlbnRlZCBvbiBheGVzIHN0YXJ0aW5nIGZyb20gdGhlIHNhbWUgcG9pbnQuPC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPEFwcERlbW9BY3Rpb25zIC8+CiAgICAgICAgPC9kaXY+CgogICAgICAgIDxkaXYgY2xhc3M9ImNvbnRlbnQtc2VjdGlvbiBpbXBsZW1lbnRhdGlvbiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgcC1kLWZsZXggcC1qYy1jZW50ZXIiPgogICAgICAgICAgICAgICAgPENoYXJ0IHR5cGU9InJhZGFyIiA6ZGF0YT0iY2hhcnREYXRhIiA6b3B0aW9ucz0iY2hhcnRPcHRpb25zIiBzdHlsZT0id2lkdGg6IDQwJSIgLz4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CgogICAgICAgIDxSYWRhckNoYXJ0RG9jLz4KICAgIDwvZGl2Pgo="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/chart/RadarChartDemo.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,CAAC;QACA,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnrB,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;YACtF,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/chart/RadarChartDemo.vue","sourceRoot":"","sourcesContent":["<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>Radar Chart</h1>\n                <p>A radar chart is a graphical method of displaying multivariate data in the form of a two-dimensional chart of three or more quantitative variables represented on axes starting from the same point.</p>\n            </div>\n            <AppDemoActions />\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card p-d-flex p-jc-center\">\n                <Chart type=\"radar\" :data=\"chartData\" :options=\"chartOptions\" style=\"width: 40%\" />\n            </div>\n        </div>\n\n        <RadarChartDoc/>\n    </div>\n</template>\n\n<script>\nimport RadarChartDoc from './RadarChartDoc';\nimport EventBus from '@/AppEventBus';\n\nexport default {\n    themeChangeListener: null,\n    mounted() {\n        this.themeChangeListener = (event) => {\n            if (event.dark)\n                this.chartOptions = this.getDarkTheme();\n            else\n                this.chartOptions = this.getLightTheme();\n        }\n        EventBus.on('change-theme', this.themeChangeListener );\n    },\n    beforeUnmount() {\n        EventBus.off('change-theme', this.themeChangeListener );\n    },\n    data() {\n        return {\n            chartData: {\n                labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n                datasets: [\n                    {\n                        label: 'My First dataset',\n                        backgroundColor: 'rgba(179,181,198,0.2)',\n                        borderColor: 'rgba(179,181,198,1)',\n                        pointBackgroundColor: 'rgba(179,181,198,1)',\n                        pointBorderColor: '#fff',\n                        pointHoverBackgroundColor: '#fff',\n                        pointHoverBorderColor: 'rgba(179,181,198,1)',\n                        data: [65, 59, 90, 81, 56, 55, 40]\n                    },\n                    {\n                        label: 'My Second dataset',\n                        backgroundColor: 'rgba(255,99,132,0.2)',\n                        borderColor: 'rgba(255,99,132,1)',\n                        pointBackgroundColor: 'rgba(255,99,132,1)',\n                        pointBorderColor: '#fff',\n                        pointHoverBackgroundColor: '#fff',\n                        pointHoverBorderColor: 'rgba(255,99,132,1)',\n                        data: [28, 48, 40, 19, 96, 27, 100]\n                    }\n                ]\n            },\n            chartOptions: this.isDarkTheme() ? this.getDarkTheme(): this.getLightTheme()\n        }\n    },\n    methods: {\n        isDarkTheme() {\n            return this.$appState.darkTheme === true;\n        },\n        getLightTheme() {\n            return {\n                plugins: {\n                    legend: {\n                        labels: {\n                            color: '#495057'\n                        }\n                    }\n                },\n                scales: {\n                    r: {\n                        pointLabels: {\n                            color: '#495057',\n                        },\n                        grid: {\n                            color: '#ebedef',\n                        },\n                        angleLines: {\n                            color: '#ebedef'\n                        }\n                    }\n                }\n            };\n        },\n        getDarkTheme() {\n            return {\n                plugins: {\n                    legend: {\n                        labels: {\n                            color: '#ebedef'\n                        }\n                    }\n                },\n                scales: {\n                    r: {\n                        pointLabels: {\n                            color: '#ebedef',\n                        },\n                        grid: {\n                            color: 'rgba(255,255,255,0.2)',\n                        },\n                        angleLines: {\n                            color: 'rgba(255,255,255,0.2)'\n                        }\n                    }\n                }\n            };\n        }\n    },\n    components: {\n        'RadarChartDoc': RadarChartDoc\n    }\n}\n</script>\n"]}]}