{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/contextmenu/ContextMenu.vue?vue&type=template&id=6ae2b62d","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/contextmenu/ContextMenu.vue","mtime":1634589566214},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8VGVsZXBvcnQgOnRvPSJhcHBlbmRUbyI+CiAgICAgICAgPHRyYW5zaXRpb24gbmFtZT0icC1jb250ZXh0bWVudSIgQGVudGVyPSJvbkVudGVyIiBAbGVhdmU9Im9uTGVhdmUiIEBhZnRlci1sZWF2ZT0ib25BZnRlckxlYXZlIj4KICAgICAgICAgICAgPGRpdiA6cmVmPSJjb250YWluZXJSZWYiIDpjbGFzcz0iY29udGFpbmVyQ2xhc3MiIHYtaWY9InZpc2libGUiIHYtYmluZD0iJGF0dHJzIj4KICAgICAgICAgICAgICAgIDxDb250ZXh0TWVudVN1YiA6bW9kZWw9Im1vZGVsIiA6cm9vdD0idHJ1ZSIgQGxlYWYtY2xpY2s9Im9uTGVhZkNsaWNrIiA6dGVtcGxhdGU9IiRzbG90cy5pdGVtIiA6ZXhhY3Q9ImV4YWN0IiAvPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3RyYW5zaXRpb24+CiAgICA8L1RlbGVwb3J0Pgo="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/contextmenu/ContextMenu.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpglH,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/contextmenu/ContextMenu.vue","sourceRoot":"","sourcesContent":["<template>\n    <Teleport :to=\"appendTo\">\n        <transition name=\"p-contextmenu\" @enter=\"onEnter\" @leave=\"onLeave\" @after-leave=\"onAfterLeave\">\n            <div :ref=\"containerRef\" :class=\"containerClass\" v-if=\"visible\" v-bind=\"$attrs\">\n                <ContextMenuSub :model=\"model\" :root=\"true\" @leaf-click=\"onLeafClick\" :template=\"$slots.item\" :exact=\"exact\" />\n            </div>\n        </transition>\n    </Teleport>\n</template>\n\n<script>\nimport {DomHandler,ZIndexUtils} from 'primevue/utils';\nimport ContextMenuSub from './ContextMenuSub.vue';\n\nexport default {\n    name: 'ContextMenu',\n    inheritAttrs: false,\n    props: {\n\t\tmodel: {\n            type: Array,\n            default: null\n        },\n        appendTo: {\n            type: String,\n            default: 'body'\n        },\n        autoZIndex: {\n            type: Boolean,\n            default: true\n        },\n        baseZIndex: {\n            type: Number,\n            default: 0\n        },\n        global: {\n            type: Boolean,\n            default: false\n        },\n        exact: {\n            type: Boolean,\n            default: true\n        }\n    },\n    target: null,\n    outsideClickListener: null,\n    resizeListener: null,\n    documentContextMenuListener: null,\n    pageX: null,\n    pageY: null,\n    container: null,\n    data() {\n        return {\n            visible: false\n        };\n    },\n    beforeUnmount() {\n        this.unbindResizeListener();\n        this.unbindOutsideClickListener();\n        this.unbindDocumentContextMenuListener();\n\n        if (this.container && this.autoZIndex) {\n            ZIndexUtils.clear(this.container);\n        }\n        this.container = null;\n    },\n    mounted() {\n        if (this.global) {\n            this.bindDocumentContextMenuListener();\n        }\n    },\n    methods: {\n        itemClick(event) {\n            const item = event.item;\n            if (item.command) {\n                item.command(event);\n                event.originalEvent.preventDefault();\n            }\n            this.hide();\n        },\n        toggle(event) {\n            if (this.visible)\n                this.hide();\n            else\n                this.show(event);\n        },\n        onLeafClick() {\n            this.hide();\n        },\n        show(event) {\n            this.pageX = event.pageX;\n            this.pageY = event.pageY;\n\n            if (this.visible)\n                this.position();\n            else\n                this.visible = true;\n\n            event.stopPropagation();\n            event.preventDefault();\n        },\n        hide() {\n            this.visible = false;\n        },\n        onEnter(el) {\n            this.position();\n            this.bindOutsideClickListener();\n            this.bindResizeListener();\n\n            if (this.autoZIndex) {\n                ZIndexUtils.set('menu', el, this.baseZIndex + this.$primevue.config.zIndex.menu);\n            }\n        },\n        onLeave() {\n            this.unbindOutsideClickListener();\n            this.unbindResizeListener();\n        },\n        onAfterLeave(el) {\n            if (this.autoZIndex) {\n                ZIndexUtils.clear(el);\n            }\n        },\n        position() {\n            let left = this.pageX + 1;\n            let top = this.pageY + 1;\n            let width = this.container.offsetParent ? this.container.offsetWidth : DomHandler.getHiddenElementOuterWidth(this.container);\n            let height = this.container.offsetParent ? this.container.offsetHeight : DomHandler.getHiddenElementOuterHeight(this.container);\n            let viewport = DomHandler.getViewport();\n\n            //flip\n            if (left + width - document.body.scrollLeft > viewport.width) {\n                left -= width;\n            }\n\n            //flip\n            if (top + height - document.body.scrollTop > viewport.height) {\n                top -= height;\n            }\n\n            //fit\n            if (left < document.body.scrollLeft) {\n                left = document.body.scrollLeft;\n            }\n\n            //fit\n            if (top < document.body.scrollTop) {\n                top = document.body.scrollTop;\n            }\n\n            this.container.style.left = left + 'px';\n            this.container.style.top = top + 'px';\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    if (this.visible && this.container && !this.container.contains(event.target) && !event.ctrlKey) {\n                        this.hide();\n                    }\n                };\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = () => {\n                    if (this.visible) {\n                        this.hide();\n                    }\n                };\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        bindDocumentContextMenuListener() {\n            if (!this.documentContextMenuListener) {\n                this.documentContextMenuListener = (event) => {\n                    this.show(event);\n                };\n\n                document.addEventListener('contextmenu', this.documentContextMenuListener);\n            }\n        },\n        unbindDocumentContextMenuListener() {\n            if(this.documentContextMenuListener) {\n                document.removeEventListener('contextmenu', this.documentContextMenuListener);\n                this.documentContextMenuListener = null;\n            }\n        },\n        containerRef(el) {\n            this.container = el;\n        }\n    },\n    computed: {\n        containerClass() {\n            return ['p-contextmenu p-component', {\n                'p-input-filled': this.$primevue.config.inputStyle === 'filled',\n                'p-ripple-disabled': this.$primevue.config.ripple === false\n            }]\n        }\n    },\n    components: {\n        'ContextMenuSub': ContextMenuSub\n    }\n}\n</script>\n\n<style>\n.p-contextmenu {\n    position: absolute;\n}\n\n.p-contextmenu ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n}\n\n.p-contextmenu .p-submenu-list {\n    position: absolute;\n    min-width: 100%;\n    z-index: 1;\n}\n\n.p-contextmenu .p-menuitem-link {\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    overflow: hidden;\n    position: relative;\n}\n\n.p-contextmenu .p-menuitem-text {\n    line-height: 1;\n}\n\n.p-contextmenu .p-menuitem {\n    position: relative;\n}\n\n.p-contextmenu .p-menuitem-link .p-submenu-icon {\n    margin-left: auto;\n}\n\n.p-contextmenu-enter-from {\n    opacity: 0;\n}\n\n.p-contextmenu-enter-active {\n    transition: opacity 250ms;\n}\n</style>\n"]}]}