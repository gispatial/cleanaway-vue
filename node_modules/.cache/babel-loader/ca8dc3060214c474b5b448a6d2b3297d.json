{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/password/PasswordDoc.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/password/PasswordDoc.vue","mtime":1634589566280},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzb3VyY2VzOiB7CiAgICAgICAgJ29wdGlvbnMtYXBpJzogewogICAgICAgICAgdGFiTmFtZTogJ09wdGlvbnMgQVBJIFNvdXJjZScsCiAgICAgICAgICBjb250ZW50OiAiXG48dGVtcGxhdGU+XG4gICAgPGRpdj5cbiAgICAgICAgPGg1PkJhc2ljPC9oNT5cbiAgICAgICAgPFBhc3N3b3JkIHYtbW9kZWw9XCJ2YWx1ZTFcIiA6ZmVlZGJhY2s9XCJmYWxzZVwiIC8+XG5cbiAgICAgICAgPGg1PlBhc3N3b3JkIE1ldGVyPC9oNT5cbiAgICAgICAgPFBhc3N3b3JkIHYtbW9kZWw9XCJ2YWx1ZTJcIiAvPlxuXG4gICAgICAgIDxoNT5TaG93IFBhc3N3b3JkPC9oNT5cbiAgICAgICAgPFBhc3N3b3JkIHYtbW9kZWw9XCJ2YWx1ZTNcIiB0b2dnbGVNYXNrPjwvUGFzc3dvcmQ+XG5cbiAgICAgICAgPGg1PlRlbXBsYXRpbmc8L2g1PlxuICAgICAgICA8UGFzc3dvcmQgdi1tb2RlbD1cInZhbHVlNFwiPlxuICAgICAgICAgICAgPHRlbXBsYXRlICNoZWFkZXI+XG4gICAgICAgICAgICAgICAgPGg2PlBpY2sgYSBwYXNzd29yZDwvaDY+XG4gICAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgICAgICAgICAgPHRlbXBsYXRlICNmb290ZXI9XCJzcFwiPlxuICAgICAgICAgICAgICAgIHt7c3AubGV2ZWx9fVxuICAgICAgICAgICAgICAgIDxEaXZpZGVyIC8+XG4gICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJwLW10LTJcIj5TdWdnZXN0aW9uczwvcD5cbiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9XCJwLXBsLTIgcC1tbC0yIHAtbXQtMFwiIHN0eWxlPVwibGluZS1oZWlnaHQ6IDEuNVwiPlxuICAgICAgICAgICAgICAgICAgICA8bGk+QXQgbGVhc3Qgb25lIGxvd2VyY2FzZTwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5BdCBsZWFzdCBvbmUgdXBwZXJjYXNlPC9saT5cbiAgICAgICAgICAgICAgICAgICAgPGxpPkF0IGxlYXN0IG9uZSBudW1lcmljPC9saT5cbiAgICAgICAgICAgICAgICAgICAgPGxpPk1pbmltdW0gOCBjaGFyYWN0ZXJzPC9saT5cbiAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgPC9QYXNzd29yZD5cbiAgICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5leHBvcnQgZGVmYXVsdCB7XG4gICAgZGF0YSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZhbHVlMTogbnVsbCxcbiAgICAgICAgICAgIHZhbHVlMjogbnVsbCxcbiAgICAgICAgICAgIHZhbHVlMzogbnVsbCxcbiAgICAgICAgICAgIHZhbHVlNDogbnVsbFxuICAgICAgICB9XG4gICAgfVxufVxuPFxcL3NjcmlwdD5cblxuPHN0eWxlIGxhbmc9XCJzY3NzXCIgc2NvcGVkPlxuOjp2LWRlZXAoLnAtcGFzc3dvcmQgaW5wdXQpIHtcbiAgICB3aWR0aDogMTVyZW1cbn1cbjwvc3R5bGU+XG4iCiAgICAgICAgfSwKICAgICAgICAnY29tcG9zaXRpb24tYXBpJzogewogICAgICAgICAgdGFiTmFtZTogJ0NvbXBvc2l0aW9uIEFQSSBTb3VyY2UnLAogICAgICAgICAgY29udGVudDogIlxuPHRlbXBsYXRlPlxuICAgIDxkaXY+XG4gICAgICAgIDxoNT5CYXNpYzwvaDU+XG4gICAgICAgIDxQYXNzd29yZCB2LW1vZGVsPVwidmFsdWUxXCIgOmZlZWRiYWNrPVwiZmFsc2VcIiAvPlxuXG4gICAgICAgIDxoNT5QYXNzd29yZCBNZXRlcjwvaDU+XG4gICAgICAgIDxQYXNzd29yZCB2LW1vZGVsPVwidmFsdWUyXCIgLz5cblxuICAgICAgICA8aDU+U2hvdyBQYXNzd29yZDwvaDU+XG4gICAgICAgIDxQYXNzd29yZCB2LW1vZGVsPVwidmFsdWUzXCIgdG9nZ2xlTWFzaz48L1Bhc3N3b3JkPlxuXG4gICAgICAgIDxoNT5UZW1wbGF0aW5nPC9oNT5cbiAgICAgICAgPFBhc3N3b3JkIHYtbW9kZWw9XCJ2YWx1ZTRcIj5cbiAgICAgICAgICAgIDx0ZW1wbGF0ZSAjaGVhZGVyPlxuICAgICAgICAgICAgICAgIDxoNj5QaWNrIGEgcGFzc3dvcmQ8L2g2PlxuICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICAgIDx0ZW1wbGF0ZSAjZm9vdGVyPVwic3BcIj5cbiAgICAgICAgICAgICAgICB7e3NwLmxldmVsfX1cbiAgICAgICAgICAgICAgICA8RGl2aWRlciAvPlxuICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwicC1tdC0yXCI+U3VnZ2VzdGlvbnM8L3A+XG4gICAgICAgICAgICAgICAgPHVsIGNsYXNzPVwicC1wbC0yIHAtbWwtMiBwLW10LTBcIiBzdHlsZT1cImxpbmUtaGVpZ2h0OiAxLjVcIj5cbiAgICAgICAgICAgICAgICAgICAgPGxpPkF0IGxlYXN0IG9uZSBsb3dlcmNhc2U8L2xpPlxuICAgICAgICAgICAgICAgICAgICA8bGk+QXQgbGVhc3Qgb25lIHVwcGVyY2FzZTwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5BdCBsZWFzdCBvbmUgbnVtZXJpYzwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5NaW5pbXVtIDggY2hhcmFjdGVyczwvbGk+XG4gICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgICAgIDwvUGFzc3dvcmQ+XG4gICAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IHsgcmVmIH0gZnJvbSAndnVlJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICAgIHNldHVwKCkge1xuICAgICAgICBjb25zdCB2YWx1ZTEgPSByZWYoKTtcbiAgICAgICAgY29uc3QgdmFsdWUyID0gcmVmKCk7XG4gICAgICAgIGNvbnN0IHZhbHVlMyA9IHJlZigpO1xuICAgICAgICBjb25zdCB2YWx1ZTQgPSByZWYoKTtcblxuICAgICAgICByZXR1cm4geyB2YWx1ZTEsIHZhbHVlMiwgdmFsdWUzLCB2YWx1ZTQgfVxuICAgIH1cbn1cbjxcXC9zY3JpcHQ+XG5cbjxzdHlsZSBsYW5nPVwic2Nzc1wiIHNjb3BlZD5cbjo6di1kZWVwKC5wLXBhc3N3b3JkIGlucHV0KSB7XG4gICAgd2lkdGg6IDE1cmVtXG59XG48L3N0eWxlPlxuIgogICAgICAgIH0sCiAgICAgICAgJ2Jyb3dzZXItc291cmNlJzogewogICAgICAgICAgdGFiTmFtZTogJ0Jyb3dzZXIgU291cmNlJywKICAgICAgICAgIGltcG9ydHM6ICI8c2NyaXB0IHNyYz1cImh0dHBzOi8vdW5wa2cuY29tL3ByaW1ldnVlQF4zL3Bhc3N3b3JkL3Bhc3N3b3JkLm1pbi5qc1wiPjxcXC9zY3JpcHQ+XG4gICAgICAgIDxzY3JpcHQgc3JjPVwiaHR0cHM6Ly91bnBrZy5jb20vcHJpbWV2dWVAXjMvZGl2aWRlci9kaXZpZGVyLm1pbi5qc1wiPjxcXC9zY3JpcHQ+IiwKICAgICAgICAgIGNvbnRlbnQ6ICI8ZGl2IGlkPVwiYXBwXCI+XG4gICAgICAgICAgICA8aDU+QmFzaWM8L2g1PlxuICAgICAgICAgICAgPHAtcGFzc3dvcmQgdi1tb2RlbD1cInZhbHVlMVwiIDpmZWVkYmFjaz1cImZhbHNlXCI+PC9wLXBhc3N3b3JkPlxuXG4gICAgICAgICAgICA8aDU+cC1wYXNzd29yZCBNZXRlcjwvaDU+XG4gICAgICAgICAgICA8cC1wYXNzd29yZCB2LW1vZGVsPVwidmFsdWUyXCI+PC9wLXBhc3N3b3JkPlxuXG4gICAgICAgICAgICA8aDU+U2hvdyBwLXBhc3N3b3JkPC9oNT5cbiAgICAgICAgICAgIDxwLXBhc3N3b3JkIHYtbW9kZWw9XCJ2YWx1ZTNcIiB0b2dnbGUtbWFzaz48L3AtcGFzc3dvcmQ+XG5cbiAgICAgICAgICAgIDxoNT5UZW1wbGF0aW5nPC9oNT5cbiAgICAgICAgICAgIDxwLXBhc3N3b3JkIHYtbW9kZWw9XCJ2YWx1ZTRcIj5cbiAgICAgICAgICAgICAgICA8dGVtcGxhdGUgI2hlYWRlcj5cbiAgICAgICAgICAgICAgICAgICAgPGg2PlBpY2sgYSBwYXNzd29yZDwvaDY+XG4gICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICAgICAgICA8dGVtcGxhdGUgI2Zvb3Rlcj1cInNwXCI+XG4gICAgICAgICAgICAgICAgICAgIHt7c3AubGV2ZWx9fVxuICAgICAgICAgICAgICAgICAgICA8cC1kaXZpZGVyPjwvcC1kaXZpZGVyPlxuICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz1cInAtbXQtMlwiPlN1Z2dlc3Rpb25zPC9wPlxuICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9XCJwLXBsLTIgcC1tbC0yIHAtbXQtMFwiIHN0eWxlPVwibGluZS1oZWlnaHQ6IDEuNVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxpPkF0IGxlYXN0IG9uZSBsb3dlcmNhc2U8L2xpPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxpPkF0IGxlYXN0IG9uZSB1cHBlcmNhc2U8L2xpPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxpPkF0IGxlYXN0IG9uZSBudW1lcmljPC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT5NaW5pbXVtIDggY2hhcmFjdGVyczwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICAgIDwvcC1wYXNzd29yZD5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPHNjcmlwdCB0eXBlPVwibW9kdWxlXCI+XG4gICAgICAgIGNvbnN0IHsgY3JlYXRlQXBwLCByZWYgfSA9IFZ1ZTtcblxuICAgICAgICBjb25zdCBBcHAgPSB7XG4gICAgICAgICAgICBzZXR1cCgpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZTEgPSByZWYoKTtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZTIgPSByZWYoKTtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZTMgPSByZWYoKTtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZTQgPSByZWYoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybiB7IHZhbHVlMSwgdmFsdWUyLCB2YWx1ZTMsIHZhbHVlNCB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY29tcG9uZW50czoge1xuICAgICAgICAgICAgICAgIFwicC1wYXNzd29yZFwiOiBwcmltZXZ1ZS5wYXNzd29yZCxcbiAgICAgICAgICAgICAgICBcInAtZGl2aWRlclwiOiBwcmltZXZ1ZS5kaXZpZGVyXG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgY3JlYXRlQXBwKEFwcClcbiAgICAgICAgICAgIC51c2UocHJpbWV2dWUuY29uZmlnLmRlZmF1bHQpXG4gICAgICAgICAgICAubW91bnQoXCIjYXBwXCIpO1xuICAgICAgICA8XFwvc2NyaXB0PlxuXG4gICAgICAgIDxzdHlsZT5cbiAgICAgICAgLnAtcGFzc3dvcmQgaW5wdXQge1xuICAgICAgICAgICAgd2lkdGg6IDE1cmVtXG4gICAgICAgIH1cbiAgICAgICAgPC9zdHlsZT5cbiIKICAgICAgICB9CiAgICAgIH0KICAgIH07CiAgfQp9Ow=="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/password/PasswordDoc.vue"],"names":[],"mappings":"AAuPA,eAAe;AACX,EAAA,IADW,kBACJ;AACH,WAAO;AACH,MAAA,OAAO,EAAE;AACL,uBAAe;AACX,UAAA,OAAO,EAAE,oBADE;AAEX,UAAA,OAAO;AAFI,SADV;AAuDL,2BAAmB;AACf,UAAA,OAAO,EAAE,wBADM;AAEf,UAAA,OAAO;AAFQ,SAvDd;AA+GL,0BAAkB;AACd,UAAA,OAAO,EAAE,gBADK;AAEd,UAAA,OAAO,gLAFO;AAId,UAAA,OAAO;AAJO;AA/Gb;AADN,KAAP;AAiLJ;AAnLW,CAAf","sourcesContent":["<template>\n\t<AppDoc name=\"PasswordDemo\" :sources=\"sources\" github=\"password/PasswordDemo.vue\">\n        <h5>Import</h5>\n<pre v-code.script><code>\nimport Password from 'primevue/password';\n\n</code></pre>\n\n        <h5>Import via CDN</h5>\n<pre v-code><code>\n&lt;script src=\"https://unpkg.com/primevue@^3/core/core.js\"&gt;&lt;/script&gt;\n&lt;script src=\"https://unpkg.com/primevue@^3/password/password.min.js\"&gt;&lt;/script&gt;\n\n</code></pre>\n\n\t\t<h5>Getting Started</h5>\n\t\t<p>A model can be bound using the standard v-model directive.</p>\n<pre v-code><code>\n&lt;Password v-model=\"value\" /&gt;\n\n</code></pre>\n\n        <h5>Customization</h5>\n        <p>Password component uses regular expressions for middle and strong passwords with the following defaults.</p>\n\n        <h6>Medium</h6>\n        <p><i>^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,}).</i></p>\n        <ul>\n            <li>At least one lowercase</li>\n            <li>At least one uppercase or one number</li>\n            <li>Minimum 6 characters</li>\n        </ul>\n\n        <h6>Strong</h6>\n        <p><i>^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})</i></p>\n        <ul>\n            <li>At least one lowercase</li>\n            <li>At least one uppercase</li>\n            <li>At least one numeric</li>\n            <li>Minimum 8 characters</li>\n        </ul>\n\n        <p>It is possible to define your own checks with the <i>mediumRegex</i> and <i>strongRegex</i> properties.</p>\n\n        <h5>Templating</h5>\n        <p>3 slots are included to customize the overlay. These are <i>header</i>, <i>content</i> and <i>footer</i>. Note that content overrides the default meter.</p>\n<pre v-code><code>\n&lt;Password v-model=\"value4\"&gt;\n    &lt;template #header&gt;\n        &lt;h6&gt;Pick a password&lt;/h6&gt;\n    &lt;/template&gt;\n    &lt;template #footer&gt;\n        &lt;Divider /&gt;\n        &lt;p class=\"p-mt-2\"&gt;Suggestions&lt;/p&gt;\n        &lt;ul class=\"p-pl-2 p-ml-2 p-mt-0\" style=\"line-height: 1.5\"&gt;\n            &lt;li&gt;At least one lowercase&lt;/li&gt;\n            &lt;li&gt;At least one uppercase&lt;/li&gt;\n            &lt;li&gt;At least one numeric&lt;/li&gt;\n            &lt;li&gt;Minimum 8 characters&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/template&gt;\n&lt;/Password&gt;\n\n</code></pre>\n\n\t\t<h5>Properties</h5>\n\t\t<p>Any property such as name and placeholder are passed to the underlying input element. Following are the additional properties to configure the component.</p>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Default</th>\n                        <th>Description</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>modelValue</td>\n                        <td>any</td>\n                        <td>null</td>\n                        <td>Value of the component.</td>\n                    </tr>\n                    <tr>\n                        <td>promptLabel</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Text to prompt password entry. Defaults to PrimeVue <router-link to=\"/locale\">Locale</router-link> configuration.</td>\n                    </tr>\n                    <tr>\n                        <td>mediumRegex</td>\n                        <td>string</td>\n                        <td>^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})</td>\n                        <td>Regex for a medium level password.</td>\n                    </tr>\n                    <tr>\n                        <td>strongRegex</td>\n                        <td>string</td>\n                        <td>^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})</td>\n                        <td>Regex for a strong level password.</td>\n                    </tr>\n                    <tr>\n                        <td>weakLabel</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Text for a weak password. Defaults to PrimeVue <router-link to=\"/locale\">Locale</router-link> configuration.</td>\n                    </tr>\n                    <tr>\n                        <td>mediumLabel</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Text for a medium password. Defaults to PrimeVue <router-link to=\"/locale\">Locale</router-link> configuration.</td>\n                    </tr>\n                    <tr>\n                        <td>strongLabel</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Text for a strong password. Defaults to PrimeVue <router-link to=\"/locale\">Locale</router-link> configuration.</td>\n                    </tr>\n                    <tr>\n                        <td>feedback</td>\n                        <td>boolean</td>\n                        <td>true</td>\n                        <td>Whether to show the strength indicator or not.</td>\n                    </tr>\n                    <tr>\n                        <td>toggleMask</td>\n                        <td>boolean</td>\n                        <td>false</td>\n                        <td>Whether to show an icon to display the password as plain text.</td>\n                    </tr>\n                    <tr>\n                        <td>appendTo</td>\n                        <td>string</td>\n                        <td>body</td>\n                        <td>A valid query selector or an HTMLElement to specify where the overlay gets attached. Special keywords are \"body\" for document body\n                        and \"self\" for the element itself.</td>\n                    </tr>\n                    <tr>\n                        <td>hideIcon</td>\n                        <td>string</td>\n                        <td>pi pi-eye-slash</td>\n                        <td>Icon to hide displaying the password as plain text.</td>\n                    </tr>\n                    <tr>\n                        <td>showIcon</td>\n                        <td>string</td>\n                        <td>pi pi-eye</td>\n                        <td>Icon to show displaying the password as plain text.</td>\n                    </tr>\n                    <tr>\n                        <td>inputStyle</td>\n                        <td>any</td>\n                        <td>null</td>\n                        <td>Inline style of the input field.</td>\n                    </tr>\n                    <tr>\n                        <td>inputClass</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Style class of the input field.</td>\n                    </tr>\n                    <tr>\n                        <td>style</td>\n                        <td>any</td>\n                        <td>null</td>\n                        <td>Style class of the component input field.</td>\n                    </tr>\n                    <tr>\n                        <td>class</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Inline style of the component.</td>\n                    </tr>\n                    <tr>\n                        <td>panelClass</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Style class of the overlay panel.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n        <h5>Events</h5>\n        <p>Any valid event such as focus, blur and input are passed to the underlying input element.</p>\n\n        <h5>Slots</h5>\n\t\t<div class=\"doc-tablewrapper\">\n            <table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Parameters</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>header</td>\n                        <td>-</td>\n                    </tr>\n                    <tr>\n                        <td>content</td>\n                        <td>-</td>\n                    </tr>\n                    <tr>\n                        <td>footer</td>\n                        <td>-</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n        </div>\n\n\t\t<h5>Styling</h5>\n\t\t<p>Following is the list of structural style classes, for theming classes visit <router-link to=\"/theming\">theming</router-link> page.</p>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Element</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>p-password-panel</td>\n\t\t\t\t\t\t<td>Container of password panel</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>p-password-meter</td>\n\t\t\t\t\t\t<td>Meter element of password strength</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>p-password-info</td>\n\t\t\t\t\t\t<td>Text to display strength</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Dependencies</h5>\n\t\t<p>None.</p>\n    </AppDoc>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div>\n        <h5>Basic</h5>\n        <Password v-model=\"value1\" :feedback=\"false\" />\n\n        <h5>Password Meter</h5>\n        <Password v-model=\"value2\" />\n\n        <h5>Show Password</h5>\n        <Password v-model=\"value3\" toggleMask></Password>\n\n        <h5>Templating</h5>\n        <Password v-model=\"value4\">\n            <template #header>\n                <h6>Pick a password</h6>\n            </template>\n            <template #footer=\"sp\">\n                {{sp.level}}\n                <Divider />\n                <p class=\"p-mt-2\">Suggestions</p>\n                <ul class=\"p-pl-2 p-ml-2 p-mt-0\" style=\"line-height: 1.5\">\n                    <li>At least one lowercase</li>\n                    <li>At least one uppercase</li>\n                    <li>At least one numeric</li>\n                    <li>Minimum 8 characters</li>\n                </ul>\n            </template>\n        </Password>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            value1: null,\n            value2: null,\n            value3: null,\n            value4: null\n        }\n    }\n}\n<\\\\/script>\n\n<style lang=\"scss\" scoped>\n::v-deep(.p-password input) {\n    width: 15rem\n}\n</style>\n`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div>\n        <h5>Basic</h5>\n        <Password v-model=\"value1\" :feedback=\"false\" />\n\n        <h5>Password Meter</h5>\n        <Password v-model=\"value2\" />\n\n        <h5>Show Password</h5>\n        <Password v-model=\"value3\" toggleMask></Password>\n\n        <h5>Templating</h5>\n        <Password v-model=\"value4\">\n            <template #header>\n                <h6>Pick a password</h6>\n            </template>\n            <template #footer=\"sp\">\n                {{sp.level}}\n                <Divider />\n                <p class=\"p-mt-2\">Suggestions</p>\n                <ul class=\"p-pl-2 p-ml-2 p-mt-0\" style=\"line-height: 1.5\">\n                    <li>At least one lowercase</li>\n                    <li>At least one uppercase</li>\n                    <li>At least one numeric</li>\n                    <li>Minimum 8 characters</li>\n                </ul>\n            </template>\n        </Password>\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n    setup() {\n        const value1 = ref();\n        const value2 = ref();\n        const value3 = ref();\n        const value4 = ref();\n\n        return { value1, value2, value3, value4 }\n    }\n}\n<\\\\/script>\n\n<style lang=\"scss\" scoped>\n::v-deep(.p-password input) {\n    width: 15rem\n}\n</style>\n`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/password/password.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/divider/divider.min.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <h5>Basic</h5>\n            <p-password v-model=\"value1\" :feedback=\"false\"></p-password>\n\n            <h5>p-password Meter</h5>\n            <p-password v-model=\"value2\"></p-password>\n\n            <h5>Show p-password</h5>\n            <p-password v-model=\"value3\" toggle-mask></p-password>\n\n            <h5>Templating</h5>\n            <p-password v-model=\"value4\">\n                <template #header>\n                    <h6>Pick a password</h6>\n                </template>\n                <template #footer=\"sp\">\n                    {{sp.level}}\n                    <p-divider></p-divider>\n                    <p class=\"p-mt-2\">Suggestions</p>\n                    <ul class=\"p-pl-2 p-ml-2 p-mt-0\" style=\"line-height: 1.5\">\n                        <li>At least one lowercase</li>\n                        <li>At least one uppercase</li>\n                        <li>At least one numeric</li>\n                        <li>Minimum 8 characters</li>\n                    </ul>\n                </template>\n            </p-password>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref } = Vue;\n\n        const App = {\n            setup() {\n                const value1 = ref();\n                const value2 = ref();\n                const value3 = ref();\n                const value4 = ref();\n\n                return { value1, value2, value3, value4 }\n            },\n            components: {\n                \"p-password\": primevue.password,\n                \"p-divider\": primevue.divider\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\\\/script>\n\n        <style>\n        .p-password input {\n            width: 15rem\n        }\n        </style>\n`\n                }\n            }\n        }\n    }\n}\n</script>"],"sourceRoot":""}]}