{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTableColToggleDemo.vue?vue&type=template&id=3caaab50","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTableColToggleDemo.vue","mtime":1634589566258},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBjcmVhdGVUZXh0Vk5vZGUgYXMgX2NyZWF0ZVRleHRWTm9kZSwgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgcmVuZGVyTGlzdCBhcyBfcmVuZGVyTGlzdCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCB3aXRoQ3R4IGFzIF93aXRoQ3R4IH0gZnJvbSAidnVlIjsKdmFyIF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJjb250ZW50LXNlY3Rpb24gaW50cm9kdWN0aW9uIgp9OwoKdmFyIF9ob2lzdGVkXzIgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJkaXYiLCB7CiAgY2xhc3M6ICJmZWF0dXJlLWludHJvIgp9LCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiaDEiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIkRhdGFUYWJsZSAiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgic3BhbiIsIG51bGwsICJDb2x1bW4gVG9nZ2xlIildKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgicCIsIG51bGwsICJNdWx0aVNlbGVjdCBjb21wb25lbnQgY2FuIGJlIHVzZWQgdG8gaW1wbGVtZW50IGNvbHVtbiB0b2dnbGUgZnVuY3Rpb25hbGl0eS4iKV0sIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8zID0gewogIGNsYXNzOiAiY29udGVudC1zZWN0aW9uIGltcGxlbWVudGF0aW9uIgp9Owp2YXIgX2hvaXN0ZWRfNCA9IHsKICBjbGFzczogImNhcmQiCn07CnZhciBfaG9pc3RlZF81ID0gewogIHN0eWxlOiB7CiAgICAidGV4dC1hbGlnbiI6ICJsZWZ0IgogIH0KfTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9BcHBEZW1vQWN0aW9ucyA9IF9yZXNvbHZlQ29tcG9uZW50KCJBcHBEZW1vQWN0aW9ucyIpOwoKICB2YXIgX2NvbXBvbmVudF9NdWx0aVNlbGVjdCA9IF9yZXNvbHZlQ29tcG9uZW50KCJNdWx0aVNlbGVjdCIpOwoKICB2YXIgX2NvbXBvbmVudF9Db2x1bW4gPSBfcmVzb2x2ZUNvbXBvbmVudCgiQ29sdW1uIik7CgogIHZhciBfY29tcG9uZW50X0RhdGFUYWJsZSA9IF9yZXNvbHZlQ29tcG9uZW50KCJEYXRhVGFibGUiKTsKCiAgdmFyIF9jb21wb25lbnRfQXBwRG9jID0gX3Jlc29sdmVDb21wb25lbnQoIkFwcERvYyIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImRpdiIsIG51bGwsIFtfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzEsIFtfaG9pc3RlZF8yLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9BcHBEZW1vQWN0aW9ucyldKSwgX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF8zLCBbX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF80LCBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfRGF0YVRhYmxlLCB7CiAgICB2YWx1ZTogJGRhdGEucHJvZHVjdHMsCiAgICByZXNwb25zaXZlTGF5b3V0OiAic2Nyb2xsIgogIH0sIHsKICAgIGhlYWRlcjogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gW19jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNSwgW19jcmVhdGVWTm9kZShfY29tcG9uZW50X011bHRpU2VsZWN0LCB7CiAgICAgICAgbW9kZWxWYWx1ZTogJGRhdGEuc2VsZWN0ZWRDb2x1bW5zLAogICAgICAgIG9wdGlvbnM6ICRkYXRhLmNvbHVtbnMsCiAgICAgICAgb3B0aW9uTGFiZWw6ICJoZWFkZXIiLAogICAgICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogJG9wdGlvbnMub25Ub2dnbGUsCiAgICAgICAgcGxhY2Vob2xkZXI6ICJTZWxlY3QgQ29sdW1ucyIsCiAgICAgICAgc3R5bGU6IHsKICAgICAgICAgICJ3aWR0aCI6ICIyMGVtIgogICAgICAgIH0KICAgICAgfSwgbnVsbCwgOAogICAgICAvKiBQUk9QUyAqLwogICAgICAsIFsibW9kZWxWYWx1ZSIsICJvcHRpb25zIiwgIm9uVXBkYXRlOm1vZGVsVmFsdWUiXSldKV07CiAgICB9KSwKICAgIGRlZmF1bHQ6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9Db2x1bW4sIHsKICAgICAgICBmaWVsZDogImNvZGUiLAogICAgICAgIGhlYWRlcjogIkNvZGUiCiAgICAgIH0pLCAoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoJGRhdGEuc2VsZWN0ZWRDb2x1bW5zLCBmdW5jdGlvbiAoY29sLCBpbmRleCkgewogICAgICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X0NvbHVtbiwgewogICAgICAgICAgZmllbGQ6IGNvbC5maWVsZCwKICAgICAgICAgIGhlYWRlcjogY29sLmhlYWRlciwKICAgICAgICAgIGtleTogY29sLmZpZWxkICsgJ18nICsgaW5kZXgKICAgICAgICB9LCBudWxsLCA4CiAgICAgICAgLyogUFJPUFMgKi8KICAgICAgICAsIFsiZmllbGQiLCAiaGVhZGVyIl0pOwogICAgICB9KSwgMTI4CiAgICAgIC8qIEtFWUVEX0ZSQUdNRU5UICovCiAgICAgICkpXTsKICAgIH0pLAogICAgXzogMQogICAgLyogU1RBQkxFICovCgogIH0sIDgKICAvKiBQUk9QUyAqLwogICwgWyJ2YWx1ZSJdKV0pXSksIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X0FwcERvYywgewogICAgbmFtZTogIkRhdGFUYWJsZUNvbFRvZ2dsZURlbW8iLAogICAgc291cmNlczogJGRhdGEuc291cmNlcywKICAgIHNlcnZpY2U6IFsnUHJvZHVjdFNlcnZpY2UnXSwKICAgIGRhdGE6IFsncHJvZHVjdHMtc21hbGwnXSwKICAgIGdpdGh1YjogImRhdGF0YWJsZS9EYXRhVGFibGVDb2xUb2dnbGVEZW1vLnZ1ZSIKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsic291cmNlcyJdKV0pOwp9"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTableColToggleDemo.vue"],"names":[],"mappings":";;AAEO,EAAA,KAAK,EAAC;;;8BACV,YAAA,CAGM,KAHN,EAGM;AAHD,EAAA,KAAK,EAAC;AAGL,CAHN,EAA0B,C,aACzB,YAAA,CAA6C,IAA7C,EAA6C,IAA7C,EAA6C,C,8BAAzC,Y,CAAyC,E,aAA/B,YAAA,CAA0B,MAA1B,EAA0B,IAA1B,EAAM,eAAN,CAA+B,CAA7C,CADyB,E,aAEzB,YAAA,CAAkF,GAAlF,EAAkF,IAAlF,EAAG,6EAAH,CAFyB,CAA1B,E;;AAAA,C;;;AAOI,EAAA,KAAK,EAAC;;;AACI,EAAA,KAAK,EAAC;;;AAGM,EAAA,KAAuB,EAAvB;AAAA,kBAAA;AAAA;;;;;;;;;;;;;uBAb5B,YAAA,CAyBM,KAzBN,EAyBM,IAzBN,EAyBM,CAxBL,YAAA,CAMM,KANN,EAAA,UAAA,EAMM,CALL,UAKK,EADI,YAAA,CAAkB,yBAAlB,CACJ,CANN,CAwBK,EAhBL,YAAA,CAaM,KAbN,EAAA,UAAA,EAaM,CAZI,YAAA,CAWM,KAXN,EAAA,UAAA,EAWM,CAVF,YAAA,CASY,oBATZ,EASY;AATA,IAAA,KAAK,EAAE,KAAA,CAAA,QASP;AATiB,IAAA,gBAAgB,EAAC;AASlC,GATZ,E;AACe,IAAA,MAAM,EAAA,QAAA,CACb;AAAA,aAGM,CAHN,YAAA,CAGM,KAHN,EAAA,UAAA,EAGM,CAFF,YAAA,CACsD,sBADtD,EACsD;AADxC,QAAA,UAAU,EAAE,KAAA,CAAA,eAC4B;AADV,QAAA,OAAO,EAAE,KAAA,CAAA,OACC;AADQ,QAAA,WAAW,EAAC,QACpB;AAD8B,+BAAmB,QAAA,CAAA,QACjD;AAAlD,QAAA,WAAW,EAAC,gBAAsC;AAArB,QAAA,KAAmB,EAAnB;AAAA,mBAAA;AAAA;AAAqB,OADtD,E,IAAA,E;;AAAA,Q,gDAAA,CAEE,CAHN,CAGM,CAHN;AAAA,KADa,C;sBAMjB;AAAA,aAAqC,CAArC,YAAA,CAAqC,iBAArC,EAAqC;AAA7B,QAAA,KAAK,EAAC,MAAuB;AAAhB,QAAA,MAAM,EAAC;AAAS,OAArC,CAAqC,G,kBACrC,YAAA,CAAgI,SAAhI,EAAgI,IAAhI,EAAgI,WAAA,CAAjG,KAAA,CAAA,eAAiG,EAAlF,UAA9B,GAA8B,EAAzB,KAAyB,EAApB;6BAA1B,YAAA,CAAgI,iBAAhI,EAAgI;AAA/E,UAAA,KAAK,EAAE,GAAG,CAAC,KAAoE;AAA5D,UAAA,MAAM,EAAE,GAAG,CAAC,MAAgD;AAAvC,UAAA,GAAG,EAAE,GAAG,CAAC,KAAJ,GAAS,GAAT,GAAkB;AAAgB,SAAhI,E,IAAA,E;;AAAA,U,mBAAA,C;OAAgI,CAAhI,E;;AAAA,OADqC,EAArC;AAAA,K;;;;GAPJ,E;;AAAA,I,SAAA,CAUE,CAXN,CAYJ,CAbN,CAgBK,EADC,YAAA,CAAkK,iBAAlK,EAAkK;AAA1J,IAAA,IAAI,EAAC,wBAAqJ;AAA3H,IAAA,OAAO,EAAE,KAAA,CAAA,OAAkH;AAAxG,IAAA,OAAO,EAAE,CAAA,gBAAA,CAA+F;AAA1E,IAAA,IAAI,EAAE,CAAA,gBAAA,CAAoE;AAAhD,IAAA,MAAM,EAAC;AAAyC,GAAlK,E,IAAA,E;;AAAA,I,WAAA,CACD,CAzBN,C","sourcesContent":["<template>\n\t<div>\n\t\t<div class=\"content-section introduction\">\n\t\t\t<div class=\"feature-intro\">\n\t\t\t\t<h1>DataTable <span>Column Toggle</span></h1>\n\t\t\t\t<p>MultiSelect component can be used to implement column toggle functionality.</p>\n\t\t\t</div>\n            <AppDemoActions />\n\t\t</div>\n\n\t\t<div class=\"content-section implementation\">\n            <div class=\"card\">\n                <DataTable :value=\"products\" responsiveLayout=\"scroll\">\n                    <template #header>\n                        <div style=\"text-align:left\">\n                            <MultiSelect :modelValue=\"selectedColumns\" :options=\"columns\" optionLabel=\"header\" @update:modelValue=\"onToggle\"\n                                placeholder=\"Select Columns\" style=\"width: 20em\"/>\n                        </div>\n                    </template>\n                    <Column field=\"code\" header=\"Code\" />\n                    <Column v-for=\"(col, index) of selectedColumns\" :field=\"col.field\" :header=\"col.header\" :key=\"col.field + '_' + index\"></Column>\n                </DataTable>\n            </div>\n\t\t</div>\n\n        <AppDoc name=\"DataTableColToggleDemo\" :sources=\"sources\" :service=\"['ProductService']\" :data=\"['products-small']\" github=\"datatable/DataTableColToggleDemo.vue\" />\n\t</div>\n</template>\n\n<script>\nimport ProductService from '../../service/ProductService';\n\nexport default {\n    data() {\n        return {\n            selectedColumns: null,\n            columns: null,\n            products: null,\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div>\n        <DataTable :value=\"products\" responsiveLayout=\"scroll\">\n            <template #header>\n                <div style=\"text-align:left\">\n                    <MultiSelect :modelValue=\"selectedColumns\" :options=\"columns\" optionLabel=\"header\" @update:modelValue=\"onToggle\"\n                        placeholder=\"Select Columns\" style=\"width: 20em\"/>\n                </div>\n            </template>\n            <Column field=\"code\" header=\"Code\" />\n            <Column v-for=\"(col, index) of selectedColumns\" :field=\"col.field\" :header=\"col.header\" :key=\"col.field + '_' + index\"></Column>\n        </DataTable>\n    </div>\n</template>\n\n<script>\nimport ProductService from './service/ProductService';\n\nexport default {\n    data() {\n        return {\n            selectedColumns: null,\n            columns: null,\n            products: null\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n\n        this.columns = [\n            {field: 'name', header: 'Name'},\n            {field: 'category', header: 'Category'},\n            {field: 'quantity', header: 'Quantity'}\n        ];\n        this.selectedColumns = this.columns;\n    },\n    mounted() {\n        this.productService.getProductsSmall().then(data => this.products = data);\n    },\n    methods: {\n        onToggle(value) {\n            this.selectedColumns = this.columns.filter(col => value.includes(col));\n        }\n    }\n}\n<\\\\/script>\n`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div>\n        <DataTable :value=\"products\" responsiveLayout=\"scroll\">\n            <template #header>\n                <div style=\"text-align:left\">\n                    <MultiSelect :modelValue=\"selectedColumns\" :options=\"columns\" optionLabel=\"header\" @update:modelValue=\"onToggle\"\n                        placeholder=\"Select Columns\" style=\"width: 20em\"/>\n                </div>\n            </template>\n            <Column field=\"code\" header=\"Code\" />\n            <Column v-for=\"(col, index) of selectedColumns\" :field=\"col.field\" :header=\"col.header\" :key=\"col.field + '_' + index\"></Column>\n        </DataTable>\n    </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport ProductService from './service/ProductService';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            productService.value.getProductsSmall().then(data => products.value = data);\n        })\n\n        const columns = ref([\n            {field: 'name', header: 'Name'},\n            {field: 'category', header: 'Category'},\n            {field: 'quantity', header: 'Quantity'}\n        ]);\n        const selectedColumns = ref(columns.value);\n        const products = ref();\n        const productService = ref(new ProductService());\n        const onToggle = (val) => {\n            selectedColumns.value = columns.value.filter(col => val.includes(col));\n        };\n\n        return { columns, selectedColumns, products, productService, onToggle }\n    }\n}\n<\\\\/script>\n`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/datatable/datatable.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/column/column.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/multiselect/multiselect.min.js\"><\\\\/script>\n        <script src=\"./ProductService.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <p-datatable :value=\"products\" responsive-layout=\"scroll\">\n                <template #header>\n                    <div style=\"text-align:left\">\n                        <p-multiselect :model-value=\"selectedColumns\" :options=\"columns\" option-label=\"header\" @update:model-value=\"onToggle\"\n                            placeholder=\"Select Columns\" style=\"width: 20em\"></p-multiselect>\n                    </div>\n                </template>\n                <p-column field=\"code\" header=\"Code\"></p-column>\n                <p-column v-for=\"(col, index) of selectedColumns\" :field=\"col.field\" :header=\"col.header\" :key=\"col.field + '_' + index\"></p-column>\n            </p-datatable>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref, onMounted } = Vue;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    productService.value.getProductsSmall().then(data => products.value = data);\n                })\n\n                const columns = ref([\n                    {field: 'name', header: 'Name'},\n                    {field: 'category', header: 'Category'},\n                    {field: 'quantity', header: 'Quantity'}\n                ]);\n                const selectedColumns = ref(columns.value);\n                const products = ref();\n                const productService = ref(new ProductService());\n                const onToggle = (val) => {\n                    selectedColumns.value = columns.value.filter(col => val.includes(col));\n                };\n\n                return { columns, selectedColumns, products, productService, onToggle }\n            },\n            components: {\n                \"p-datatable\": primevue.datatable,\n                \"p-column\": primevue.column,\n                \"p-multiselect\": primevue.multiselect\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\\\/script>\n`\n                }\n            }\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n\n        this.columns = [\n            {field: 'name', header: 'Name'},\n            {field: 'category', header: 'Category'},\n            {field: 'quantity', header: 'Quantity'}\n        ];\n        this.selectedColumns = this.columns;\n    },\n    mounted() {\n        this.productService.getProductsSmall().then(data => this.products = data);\n    },\n    methods: {\n        onToggle(value) {\n            this.selectedColumns = this.columns.filter(col => value.includes(col));\n        }\n    }\n}\n</script>"],"sourceRoot":""}]}