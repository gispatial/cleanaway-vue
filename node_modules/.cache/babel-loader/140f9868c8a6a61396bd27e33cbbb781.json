{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/tree/TreeDoc.vue?vue&type=template&id=771d707a","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/tree/TreeDoc.vue","mtime":1634589566290},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/tree/TreeDoc.vue"],"names":[],"mappings":";;8BAEQ,YAAA,CAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,EAAU,CAAA;AAAA;AAAV,C;;8BACW,YAAA,CAGZ,MAHY,EAGZ,IAHY,EAAM,yCAAN,EAGnB,CAAA;AAAA;AAHmB,C;;8BAKX,YAAA,CAAuB,IAAvB,EAAuB,IAAvB,EAAI,gBAAJ,EAAkB,CAAA;AAAA;AAAlB,C;;8BACI,YAAA,CAGL,MAHK,EAGL,IAHK,EAAM,4EAAN,EAGZ,CAAA;AAAA;AAHY,C;;8BAKV,YAAA,CAAwB,IAAxB,EAAwB,IAAxB,EAAI,iBAAJ,EAAmB,CAAA;AAAA;AAAnB,C;;8BACA,YAAA,CAAgF,GAAhF,EAAgF,IAAhF,EAAgF,C,8BAA7E,8D,CAA6E,E,aAAjB,YAAA,CAAY,GAAZ,EAAY,IAAZ,EAAG,OAAH,CAAiB,E,8BAAL,G,CAAK,CAAhF,E;;AAAA,C;;8BAEM,YAAA,CAA0C,IAA1C,EAA0C,IAA1C,EAAI,mCAAJ,EAAqC,CAAA;AAAA;AAArC,C;;8BACA,YAAA,CAyEM,KAzEN,EAyEM;AAzED,EAAA,KAAK,EAAC;AAyEL,CAzEN,EAA6B,C,aACzB,YAAA,CAuEQ,OAvER,EAuEQ;AAvED,EAAA,KAAK,EAAC;AAuEL,CAvER,EAAwB,C,aACpB,YAAA,CAOQ,OAPR,EAOQ,IAPR,EAOQ,C,aANJ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAIC,E,aAHD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAGC,E,aAFD,YAAA,CAAgB,IAAhB,EAAgB,IAAhB,EAAI,SAAJ,CAEC,E,aADD,YAAA,CAAoB,IAApB,EAAoB,IAApB,EAAI,aAAJ,CACC,CALL,CAMI,CAPR,CADoB,E,aASpB,YAAA,CA6DQ,OA7DR,EA6DQ,IA7DR,EA6DQ,C,aA5DJ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAY,IAAZ,EAAY,IAAZ,EAAI,KAAJ,CAIC,E,aAHD,YAAA,CAAY,IAAZ,EAAY,IAAZ,EAAI,KAAJ,CAGC,E,aAFD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAEC,E,aADD,YAAA,CAA0C,IAA1C,EAA0C,IAA1C,EAAI,mCAAJ,CACC,CALL,CA4DI,E,aAtDJ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAc,IAAd,EAAc,IAAd,EAAI,OAAJ,CAIC,E,aAHD,YAAA,CAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,CAGC,E,aAFD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAEC,E,aADD,YAAA,CAA2B,IAA3B,EAA2B,IAA3B,EAAI,oBAAJ,CACC,CALL,CAsDI,E,aAhDJ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAIC,E,aAHD,YAAA,CAAY,IAAZ,EAAY,IAAZ,EAAI,KAAJ,CAGC,E,aAFD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAEC,E,aADD,YAAA,CAAsC,IAAtC,EAAsC,IAAtC,EAAI,+BAAJ,CACC,CALL,CAgDI,E,aA1CJ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAIC,E,aAHD,YAAA,CAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,CAGC,E,aAFD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAEC,E,aADD,YAAA,CAA8C,IAA9C,EAA8C,IAA9C,EAAI,uCAAJ,CACC,CALL,CA0CI,E,aApCJ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAIC,E,aAHD,YAAA,CAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,CAGC,E,aAFD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAEC,E,aADD,YAAA,CAAqD,IAArD,EAAqD,IAArD,EAAI,8CAAJ,CACC,CALL,CAoCI,E,aA9BJ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAiB,IAAjB,EAAiB,IAAjB,EAAI,UAAJ,CAIC,E,aAHD,YAAA,CAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,CAGC,E,aAFD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAEC,E,aADD,YAAA,CAA2C,IAA3C,EAA2C,IAA3C,EAAI,oCAAJ,CACC,CALL,CA8BI,E,aAxBJ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAc,IAAd,EAAc,IAAd,EAAI,OAAJ,CAIC,E,aAHD,YAAA,CAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,CAGC,E,aAFD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAEC,E,aADD,YAAA,CAAkC,IAAlC,EAAkC,IAAlC,EAAI,2BAAJ,CACC,CALL,CAwBI,E,aAlBJ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,CAIC,E,aAHD,YAAA,CAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,CAGC,E,aAFD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAEC,E,aADD,YAAA,CAAiC,IAAjC,EAAiC,IAAjC,EAAI,0BAAJ,CACC,CALL,CAkBI,E,aAZJ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,CAIC,E,aAHD,YAAA,CAAgB,IAAhB,EAAgB,IAAhB,EAAI,SAAJ,CAGC,E,aAFD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAEC,E,aADD,YAAA,CAAuE,IAAvE,EAAuE,IAAvE,EAAI,gEAAJ,CACC,CALL,CAYI,E,aANJ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAIC,E,aAHD,YAAA,CAAgB,IAAhB,EAAgB,IAAhB,EAAI,SAAJ,CAGC,E,aAFD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAEC,E,aADD,YAAA,CAAkE,IAAlE,EAAkE,IAAlE,EAAI,2DAAJ,CACC,CALL,CAMI,CA7DR,CAToB,CAAxB,CADyB,CAA7B,E;;AAAA,C;;8BA2EA,YAAA,CAAoG,GAApG,EAAoG,IAApG,EAAG,+FAAH,EAAgG,CAAA;AAAA;AAAhG,C;;+BACI,YAAA,CAGL,MAHK,EAGL,IAHK,EAGL,C,aAHW,YAAA,CAEP,UAFO,EAEP,IAFO,EAEP,C,8BAFuB,oC,CAEvB,CAFO,CAGX,E,8BADI,I,CACJ,CAHK,E;;AAAA,C;;+BAKO,YAAA,CAkBZ,MAlBY,EAkBZ,IAlBY,EAAM,iWAAN,EAkBnB,CAAA;AAAA;AAlBmB,C;;+BAoBA,YAAA,CAUZ,MAVY,EAUZ,IAVY,EAAM,4LAAN,EAUnB,CAAA;AAAA;AAVmB,C;;+BAYX,YAAA,CAAsD,GAAtD,EAAsD,IAAtD,EAAG,iDAAH,EAAkD,CAAA;AAAA;AAAlD,C;;+BACW,YAAA,CAwDZ,MAxDY,EAwDZ,IAxDY,EAAM,kuFAAN,EAwDnB,CAAA;AAAA;AAxDmB,C;;+BA0DX,YAAA,CAA6B,IAA7B,EAA6B,IAA7B,EAAI,sBAAJ,EAAwB,CAAA;AAAA;AAAxB,C;;+BACA,YAAA,CAEI,GAFJ,EAEI,IAFJ,EAEI,C,8BAFD,yD,CAEC,E,aAFsD,YAAA,CAAmB,GAAnB,EAAmB,IAAnB,EAAG,cAAH,CAEtD,E,8BAFyE,sJ,CAEzE,E,aADoH,YAAA,CAAmB,GAAnB,EAAmB,IAAnB,EAAG,cAAH,CACpH,E,8BADuI,6D,CACvI,CAFJ,E;;AAAA,C;;+BAIA,YAAA,CAAkE,GAAlE,EAAkE,IAAlE,EAAG,6DAAH,EAA8D,CAAA;AAAA;AAA9D,C;;+BACI,YAAA,CAOL,MAPK,EAOL,IAPK,EAOL,C,aAPW,YAAA,CAMP,UANO,EAMP,IANO,EAMP,C,8BANuB,mR,CAMvB,CANO,CAOX,E,8BADI,I,CACJ,CAPK,E;;AAAA,C;;+BASO,YAAA,CAuCZ,MAvCY,EAuCZ,IAvCY,EAAM,w7BAAN,EAuCnB,CAAA;AAAA;AAvCmB,C;;+BAyCX,YAAA,CAAsF,GAAtF,EAAsF,IAAtF,EAAG,iFAAH,EAAkF,CAAA;AAAA;AAAlF,C;;+BACW,YAAA,CAuBZ,MAvBY,EAuBZ,IAvBY,EAAM,+gBAAN,EAuBnB,CAAA;AAAA;AAvBmB,C;;+BAyBX,YAAA,CAAkB,IAAlB,EAAkB,IAAlB,EAAI,WAAJ,EAAa,CAAA;AAAA;AAAb,C;;+BACA,YAAA,CAE+K,GAF/K,EAE+K,IAF/K,EAE+K,C,8BAF5K,gB,CAE4K,E,aAF9J,YAAA,CAAa,GAAb,EAAa,IAAb,EAAG,QAAH,CAE8J,E,8BAFjJ,I,CAEiJ,E,aAF/I,YAAA,CAAe,GAAf,EAAe,IAAf,EAAG,UAAH,CAE+I,E,8BAFhI,O,CAEgI,E,aAF3H,YAAA,CAAe,GAAf,EAAe,IAAf,EAAG,UAAH,CAE2H,E,8BAF5G,+B,CAE4G,E,aAF/E,YAAA,CAAoB,GAApB,EAAoB,IAApB,EAAG,eAAH,CAE+E,E,8BAF3D,sC,CAE2D,E,aAFvB,YAAA,CAAoB,GAApB,EAAoB,IAApB,EAAG,eAAH,CAEuB,E,8BAFH,qK,CAEG,E,aADjD,YAAA,CAAuB,GAAvB,EAAuB,IAAvB,EAAG,kBAAH,CACiD,E,8BAD1B,kJ,CAC0B,E,aAApD,YAAA,CAAiB,GAAjB,EAAiB,IAAjB,EAAG,YAAH,CAAoD,E,8BAAnC,iC,CAAmC,CAF/K,E;;AAAA,C;;+BAIA,YAAA,CACoK,GADpK,EACoK,IADpK,EACoK,C,8BADjK,mB,CACiK,E,aADhJ,YAAA,CAAmB,GAAnB,EAAmB,IAAnB,EAAG,cAAH,CACgJ,E,8BAD7H,I,CAC6H,E,aAD3H,YAAA,CAAoB,GAApB,EAAoB,IAApB,EAAG,eAAH,CAC2H,E,8BADvG,yS,CACuG,CADpK,E;;AAAA,C;;+BAEI,YAAA,CAiBL,MAjBK,EAiBL,IAjBK,EAiBL,C,aAjBW,YAAA,CAgBP,UAhBO,EAgBP,IAhBO,EAgBP,C,8BAhBuB,kxB,CAgBvB,CAhBO,CAiBX,E,8BADI,I,CACJ,CAjBK,E;;AAAA,C;;+BAmBO,YAAA,CA+BZ,MA/BY,EA+BZ,IA/BY,EAAM,o1BAAN,EA+BnB,CAAA;AAAA;AA/BmB,C;;+BAiCX,YAAA,CAAsF,GAAtF,EAAsF,IAAtF,EAAG,iFAAH,EAAkF,CAAA;AAAA;AAAlF,C;;+BACW,YAAA,CAmCZ,MAnCY,EAmCZ,IAnCY,EAAM,64BAAN,EAmCnB,CAAA;AAAA;AAnCmB,C;;+BAqCX,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,EAAQ,CAAA;AAAA;AAAR,C;;+BACA,YAAA,CAGI,GAHJ,EAGI,IAHJ,EAGI,C,8BAHD,6K,CAGC,E,aAFmD,YAAA,CAAW,GAAX,EAAW,IAAX,EAAG,MAAH,CAEnD,E,8BAF8D,0L,CAE9D,CAHJ,E;;AAAA,C;;+BAKI,YAAA,CAGL,MAHK,EAGL,IAHK,EAGL,C,aAHW,YAAA,CAEP,UAFO,EAEP,IAFO,EAEP,C,8BAFuB,uF,CAEvB,CAFO,CAGX,E,8BADI,I,CACJ,CAHK,E;;AAAA,C;;+BAKO,YAAA,CAkEZ,MAlEY,EAkEZ,IAlEY,EAAM,unDAAN,EAkEnB,CAAA;AAAA;AAlEmB,C;;+BAoEX,YAAA,CAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,EAAc,CAAA;AAAA;AAAd,C;;+BACA,YAAA,CAC8B,GAD9B,EAC8B,IAD9B,EAC8B,C,8BAD3B,M,CAC2B,E,aADvB,YAAA,CAAW,GAAX,EAAW,IAAX,EAAG,MAAH,CACuB,E,8BADZ,2K,CACY,CAD9B,E;;AAAA,C;;+BAEI,YAAA,CAUL,MAVK,EAUL,IAVK,EAUL,C,aAVW,YAAA,CASP,UATO,EASP,IATO,EASP,C,8BATuB,kQ,CASvB,CATO,CAUX,E,8BADI,I,CACJ,CAVK,E;;AAAA,C;;+BAYO,YAAA,CA8BZ,MA9BY,EA8BZ,IA9BY,EAAM,ghDAAN,EA8BnB,CAAA;AAAA;AA9BmB,C;;+BAgCH,YAAA,CAAkB,IAAlB,EAAkB,IAAlB,EAAI,WAAJ,EAAa,CAAA;AAAA;AAAb,C;;+BACA,YAAA,CAAyH,GAAzH,EAAyH,IAAzH,EAAyH,C,8BAAtH,uF,CAAsH,E,aAAjC,YAAA,CAAmB,GAAnB,EAAmB,IAAnB,EAAG,cAAH,CAAiC,E,8BAAd,Y,CAAc,CAAzH,E;;AAAA,C;;+BACJ,YAAA,CAGL,MAHK,EAGL,IAHK,EAGL,C,aAHW,YAAA,CAEP,UAFO,EAEP,IAFO,EAEP,C,8BAFuB,4D,CAEvB,CAFO,CAGX,E,8BADI,I,CACJ,CAHK,E;;AAAA,C;;+BAKI,YAAA,CAAoB,IAApB,EAAoB,IAApB,EAAI,aAAJ,EAAe,CAAA;AAAA;AAAf,C;;+BACA,YAAA,CACoH,GADpH,EACoH,IADpH,EACoH,C,8BADjH,8H,CACiH,E,aADW,YAAA,CAAmB,GAAnB,EAAmB,IAAnB,EAAG,cAAH,CACX,E,8BAD8B,a,CAC9B,E,aADyC,YAAA,CAAW,GAAX,EAAW,IAAX,EAAG,MAAH,CACzC,E,8BADoD,sI,CACpD,CADpH,E;;AAAA,C;;+BAGJ,YAAA,CAWL,MAXK,EAWL,IAXK,EAWL,C,aAXW,YAAA,CAUP,UAVO,EAUP,IAVO,EAUP,C,8BAVuB,kgB,CAUvB,CAVO,CAWX,E,8BADI,I,CACJ,CAXK,E;;AAAA,C;;+BAaJ,YAAA,CAAkB,IAAlB,EAAkB,IAAlB,EAAI,WAAJ,EAAa,CAAA;AAAA;AAAb,C;;+BACA,YAAA,CAC6L,GAD7L,EAC6L,IAD7L,EAC6L,C,8BAD1L,sC,CAC0L,E,aADtJ,YAAA,CAAa,GAAb,EAAa,IAAb,EAAG,QAAH,CACsJ,E,8BADzI,+L,CACyI,E,aAAvD,YAAA,CAAe,GAAf,EAAe,IAAf,EAAG,UAAH,CAAuD,E,8BAAxC,sC,CAAwC,CAD7L,E;;AAAA,C;;+BAGA,YAAA,CACiG,GADjG,EACiG,IADjG,EACiG,C,8BAD9F,c,CAC8F,E,aADlF,YAAA,CAAiB,GAAjB,EAAiB,IAAjB,EAAG,YAAH,CACkF,E,8BADjE,wC,CACiE,E,aAD3B,YAAA,CAAc,GAAd,EAAc,IAAd,EAAG,SAAH,CAC2B,E,8BADb,wJ,CACa,E,aAA7F,YAAA,CAAa,GAAb,EAAa,IAAb,EAAG,QAAH,CAA6F,E,8BAAhF,8E,CAAgF,CADjG,E;;AAAA,C;;+BAGI,YAAA,CAOL,MAPK,EAOL,IAPK,EAOL,C,aAPW,YAAA,CAMP,UANO,EAMP,IANO,EAMP,C,8BANuB,sM,CAMvB,CANO,CAOX,E,8BADI,I,CACJ,CAPK,E;;AAAA,C;;+BASO,YAAA,CAwCZ,MAxCY,EAwCZ,IAxCY,EAAM,87BAAN,EAwCnB,CAAA;AAAA;AAxCmB,C;;+BA0CjB,YAAA,CAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,EAAc,CAAA;AAAA;AAAd,C;;+BACM,YAAA,CAAuJ,GAAvJ,EAAuJ,IAAvJ,EAAG,kJAAH,EAAmJ,CAAA;AAAA;AAAnJ,C;;+BACN,YAAA,CA4FM,KA5FN,EA4FM;AA5FD,EAAA,KAAK,EAAC;AA4FL,CA5FN,EAA6B,C,aAC5B,YAAA,CA0FQ,OA1FR,EA0FQ;AA1FD,EAAA,KAAK,EAAC;AA0FL,CA1FR,EAAwB,C,aACvB,YAAA,CAOQ,OAPR,EAOQ,IAPR,EAOQ,C,aANQ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAIC,E,aAHD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAGC,E,aAFD,YAAA,CAAgB,IAAhB,EAAgB,IAAhB,EAAI,SAAJ,CAEC,E,aADD,YAAA,CAAoB,IAApB,EAAoB,IAApB,EAAI,aAAJ,CACC,CALL,CAMR,CAPR,CADuB,E,aASvB,YAAA,CAgFQ,OAhFR,EAgFQ,IAhFR,EAgFQ,C,aA/EQ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAc,IAAd,EAAc,IAAd,EAAI,OAAJ,CAIC,E,aAHD,YAAA,CAAc,IAAd,EAAc,IAAd,EAAI,OAAJ,CAGC,E,aAFD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAEC,E,aADD,YAAA,CAA+B,IAA/B,EAA+B,IAA/B,EAAI,wBAAJ,CACC,CALL,CA+ER,E,aAzEQ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAqB,IAArB,EAAqB,IAArB,EAAI,cAAJ,CAIC,E,aAHD,YAAA,CAAc,IAAd,EAAc,IAAd,EAAI,OAAJ,CAGC,E,aAFD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAEC,E,aADD,YAAA,CAA2E,IAA3E,EAA2E,IAA3E,EAAI,oEAAJ,CACC,CALL,CAyER,E,aAnEQ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAsB,IAAtB,EAAsB,IAAtB,EAAI,eAAJ,CAIC,E,aAHD,YAAA,CAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,CAGC,E,aAFD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAEC,E,aADD,YAAA,CAAuF,IAAvF,EAAuF,IAAvF,EAAI,sFAAJ,CACC,CALL,CAmER,E,aA7DQ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAsB,IAAtB,EAAsB,IAAtB,EAAI,eAAJ,CAIC,E,aAHD,YAAA,CAAY,IAAZ,EAAY,IAAZ,EAAI,KAAJ,CAGC,E,aAFD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAEC,E,aADD,YAAA,CAAsD,IAAtD,EAAsD,IAAtD,EAAI,+CAAJ,CACC,CALL,CA6DR,E,aAvDQ,YAAA,CAMK,IANL,EAMK,IANL,EAMK,C,aALD,YAAA,CAAyB,IAAzB,EAAyB,IAAzB,EAAI,kBAAJ,CAKC,E,aAJD,YAAA,CAAgB,IAAhB,EAAgB,IAAhB,EAAI,SAAJ,CAIC,E,aAHD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAGC,E,aAFD,YAAA,CAC6G,IAD7G,EAC6G,IAD7G,EAAI,mQAAJ,CAEC,CANL,CAuDR,E,aAhDQ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAgB,IAAhB,EAAgB,IAAhB,EAAI,SAAJ,CAIC,E,aAHD,YAAA,CAAgB,IAAhB,EAAgB,IAAhB,EAAI,SAAJ,CAGC,E,aAFD,YAAA,CAAc,IAAd,EAAc,IAAd,EAAI,OAAJ,CAEC,E,aADD,YAAA,CAA8C,IAA9C,EAA8C,IAA9C,EAAI,uCAAJ,CACC,CALL,CAgDR,E,aA1CQ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAoB,IAApB,EAAoB,IAApB,EAAI,aAAJ,CAIC,E,aAHD,YAAA,CAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,CAGC,E,aAFD,YAAA,CAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,CAEC,E,aADD,YAAA,CAA8C,IAA9C,EAA8C,IAA9C,EAAI,uCAAJ,CACC,CALL,CA0CR,E,aApCQ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,CAIC,E,aAHD,YAAA,CAAgB,IAAhB,EAAgB,IAAhB,EAAI,SAAJ,CAGC,E,aAFD,YAAA,CAAc,IAAd,EAAc,IAAd,EAAI,OAAJ,CAEC,E,aADD,YAAA,CAAqE,IAArE,EAAqE,IAArE,EAAI,8DAAJ,CACC,CALL,CAoCR,E,aA9BQ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAiB,IAAjB,EAAiB,IAAjB,EAAI,UAAJ,CAIC,E,aAHD,YAAA,CAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,CAGC,E,aAFD,YAAA,CAAc,IAAd,EAAc,IAAd,EAAI,OAAJ,CAEC,E,aADD,YAAA,CAA+G,IAA/G,EAA+G,IAA/G,EAAI,wGAAJ,CACC,CALL,CA8BR,E,aAxBQ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,CAIC,E,aAHD,YAAA,CAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,CAGC,E,aAFD,YAAA,CAAgB,IAAhB,EAAgB,IAAhB,EAAI,SAAJ,CAEC,E,aADD,YAAA,CAAwF,IAAxF,EAAwF,IAAxF,EAAI,qFAAJ,CACC,CALL,CAwBR,E,aAlBQ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAA0B,IAA1B,EAA0B,IAA1B,EAAI,mBAAJ,CAIC,E,aAHD,YAAA,CAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,CAGC,E,aAFD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAEC,E,aADD,YAAA,CAA6D,IAA7D,EAA6D,IAA7D,EAAI,sDAAJ,CACC,CALL,CAkBR,E,aAZQ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAqB,IAArB,EAAqB,IAArB,EAAI,cAAJ,CAIC,E,aAHD,YAAA,CAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,CAGC,E,aAFD,YAAA,CAAkB,IAAlB,EAAkB,IAAlB,EAAI,WAAJ,CAEC,E,aADD,YAAA,CAAiG,IAAjG,EAAiG,IAAjG,EAAI,0FAAJ,CACC,CALL,CAYR,E,aANQ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAqB,IAArB,EAAqB,IAArB,EAAI,cAAJ,CAIC,E,aAHD,YAAA,CAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,CAGC,E,aAFD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAEC,E,aADD,YAAA,CAA+F,IAA/F,EAA+F,IAA/F,EAAI,0FAAJ,CACC,CALL,CAMR,CAhFR,CATuB,CAAxB,CAD4B,CAA7B,E;;AAAA,C;;+BA8FA,YAAA,CAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,EAAU,CAAA;AAAA;AAAV,C;;+BACA,YAAA,CAgCM,KAhCN,EAgCM;AAhCD,EAAA,KAAK,EAAC;AAgCL,CAhCN,EAA6B,C,aAC5B,YAAA,CA8BQ,OA9BR,EA8BQ;AA9BD,EAAA,KAAK,EAAC;AA8BL,CA9BR,EAAwB,C,aACvB,YAAA,CAMQ,OANR,EAMQ,IANR,EAMQ,C,aALQ,YAAA,CAIK,IAJL,EAIK,IAJL,EAIK,C,aAHD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAGC,E,aAFD,YAAA,CAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,CAEC,E,aADD,YAAA,CAAoB,IAApB,EAAoB,IAApB,EAAI,aAAJ,CACC,CAJL,CAKR,CANR,CADuB,E,aAQvB,YAAA,CAqBQ,OArBR,EAqBQ,IArBR,EAqBQ,C,aApBQ,YAAA,CAIK,IAJL,EAIK,IAJL,EAIK,C,aAHD,YAAA,CAAoB,IAApB,EAAoB,IAApB,EAAI,aAAJ,CAGC,E,aAFD,YAAA,CAA4B,IAA5B,EAA4B,IAA5B,EAAI,qBAAJ,CAEC,E,aADD,YAAA,CAAoD,IAApD,EAAoD,IAApD,EAAI,6CAAJ,CACC,CAJL,CAoBR,E,aAfQ,YAAA,CAIK,IAJL,EAIK,IAJL,EAIK,C,aAHD,YAAA,CAAsB,IAAtB,EAAsB,IAAtB,EAAI,eAAJ,CAGC,E,aAFD,YAAA,CAA4B,IAA5B,EAA4B,IAA5B,EAAI,qBAAJ,CAEC,E,aADD,YAAA,CAAsD,IAAtD,EAAsD,IAAtD,EAAI,+CAAJ,CACC,CAJL,CAeR,E,aAVQ,YAAA,CAIK,IAJL,EAIK,IAJL,EAIK,C,aAHD,YAAA,CAAoB,IAApB,EAAoB,IAApB,EAAI,aAAJ,CAGC,E,aAFD,YAAA,CAA4B,IAA5B,EAA4B,IAA5B,EAAI,qBAAJ,CAEC,E,aADD,YAAA,CAAoD,IAApD,EAAoD,IAApD,EAAI,6CAAJ,CACC,CAJL,CAUR,E,aALQ,YAAA,CAIK,IAJL,EAIK,IAJL,EAIK,C,aAHD,YAAA,CAAsB,IAAtB,EAAsB,IAAtB,EAAI,eAAJ,CAGC,E,aAFD,YAAA,CAA4B,IAA5B,EAA4B,IAA5B,EAAI,qBAAJ,CAEC,E,aADD,YAAA,CAAqD,IAArD,EAAqD,IAArD,EAAI,8CAAJ,CACC,CAJL,CAKR,CArBR,CARuB,CAAxB,CAD4B,CAA7B,E;;AAAA,C;;+BAkCA,YAAA,CAAgB,IAAhB,EAAgB,IAAhB,EAAI,SAAJ,EAAW,CAAA;AAAA;AAAX,C;;gDACG,+E;;gDAAwG,S;;gDAAqB,Q;;+BAChI,YAAA,CAmDM,KAnDN,EAmDM;AAnDD,EAAA,KAAK,EAAC;AAmDL,CAnDN,EAA6B,C,aAC5B,YAAA,CAiDQ,OAjDR,EAiDQ;AAjDD,EAAA,KAAK,EAAC;AAiDL,CAjDR,EAAwB,C,aACvB,YAAA,CAKQ,OALR,EAKQ,IALR,EAKQ,C,aAJQ,YAAA,CAGK,IAHL,EAGK,IAHL,EAGK,C,aAFD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAEC,E,aADD,YAAA,CAAgB,IAAhB,EAAgB,IAAhB,EAAI,SAAJ,CACC,CAHL,CAIR,CALR,CADuB,E,aAOvB,YAAA,CAyCQ,OAzCR,EAyCQ,IAzCR,EAyCQ,C,aAxCQ,YAAA,CAGK,IAHL,EAGK,IAHL,EAGK,C,aAFD,YAAA,CAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,CAEC,E,aADD,YAAA,CAA+B,IAA/B,EAA+B,IAA/B,EAAI,wBAAJ,CACC,CAHL,CAwCR,E,aApCQ,YAAA,CAGK,IAHL,EAGK,IAHL,EAGK,C,aAFD,YAAA,CAA0B,IAA1B,EAA0B,IAA1B,EAAI,mBAAJ,CAEC,E,aADD,YAAA,CAAkD,IAAlD,EAAkD,IAAlD,EAAI,2CAAJ,CACC,CAHL,CAoCR,E,aAhCQ,YAAA,CAGK,IAHL,EAGK,IAHL,EAGK,C,aAFD,YAAA,CAAyB,IAAzB,EAAyB,IAAzB,EAAI,kBAAJ,CAEC,E,aADD,YAAA,CAA2B,IAA3B,EAA2B,IAA3B,EAAI,oBAAJ,CACC,CAHL,CAgCR,E,aA5BQ,YAAA,CAGK,IAHL,EAGK,IAHL,EAGK,C,aAFD,YAAA,CAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,CAEC,E,aADD,YAAA,CAA2B,IAA3B,EAA2B,IAA3B,EAAI,oBAAJ,CACC,CAHL,CA4BR,E,aAxBQ,YAAA,CAGK,IAHL,EAGK,IAHL,EAGK,C,aAFD,YAAA,CAA2B,IAA3B,EAA2B,IAA3B,EAAI,oBAAJ,CAEC,E,aADD,YAAA,CAA8B,IAA9B,EAA8B,IAA9B,EAAI,uBAAJ,CACC,CAHL,CAwBR,E,aApBQ,YAAA,CAGK,IAHL,EAGK,IAHL,EAGK,C,aAFD,YAAA,CAA2B,IAA3B,EAA2B,IAA3B,EAAI,oBAAJ,CAEC,E,aADD,YAAA,CAAuB,IAAvB,EAAuB,IAAvB,EAAI,gBAAJ,CACC,CAHL,CAoBR,E,aAhBQ,YAAA,CAGK,IAHL,EAGK,IAHL,EAGK,C,aAFD,YAAA,CAAgC,IAAhC,EAAgC,IAAhC,EAAI,yBAAJ,CAEC,E,aADD,YAAA,CAAoB,IAApB,EAAoB,IAApB,EAAI,aAAJ,CACC,CAHL,CAgBR,E,aAZQ,YAAA,CAGK,IAHL,EAGK,IAHL,EAGK,C,aAFD,YAAA,CAAwB,IAAxB,EAAwB,IAAxB,EAAI,iBAAJ,CAEC,E,aADD,YAAA,CAA2B,IAA3B,EAA2B,IAA3B,EAAI,oBAAJ,CACC,CAHL,CAYR,E,aARQ,YAAA,CAGK,IAHL,EAGK,IAHL,EAGK,C,aAFD,YAAA,CAAyB,IAAzB,EAAyB,IAAzB,EAAI,kBAAJ,CAEC,E,aADD,YAAA,CAA4B,IAA5B,EAA4B,IAA5B,EAAI,qBAAJ,CACC,CAHL,CAQR,E,aAJQ,YAAA,CAGK,IAHL,EAGK,IAHL,EAGK,C,aAFD,YAAA,CAA4B,IAA5B,EAA4B,IAA5B,EAAI,qBAAJ,CAEC,E,aADD,YAAA,CAA4C,IAA5C,EAA4C,IAA5C,EAAI,qCAAJ,CACC,CAHL,CAIR,CAzCR,CAPuB,CAAxB,CAD4B,CAA7B,E;;AAAA,C;;+BAqDA,YAAA,CAAqB,IAArB,EAAqB,IAArB,EAAI,cAAJ,EAAgB,CAAA;AAAA;AAAhB,C;;+BACA,YAAA,CAAY,GAAZ,EAAY,IAAZ,EAAG,OAAH,EAAQ,CAAA;AAAA;AAAR,C;;;;;;;;;uBA3vBD,YAAA,CA4vBY,iBA5vBZ,EA4vBY;AA5vBJ,IAAA,IAAI,EAAC,UA4vBD;AA5vBa,IAAA,OAAO,EAAE,KAAA,CAAA,OA4vBtB;AA5vBgC,IAAA,OAAO,EAAE,CAAA,aAAA,CA4vBzC;AA5vB2D,IAAA,IAAI,EAAE,CAAA,WAAA,CA4vBjE;AA5vBgF,IAAA,MAAM,EAAC;AA4vBvF,GA5vBZ,E;sBACO;AAAA,aAAe,CAAf,UAAe,E,gBACvB,YAAA,CAGa,KAHb,EAGa,IAHb,EAGa,CAHM,UAGN,CAHb,E;;AAAA,O;gBAAK;UADkB,EAMf,UANe,E,gBAOvB,YAAA,CAGa,KAHb,EAGa,IAHb,EAGa,CAHD,UAGC,CAHb,E;;AAAA,O,sBAPuB,EAYrB,UAZqB,EAarB,UAbqB,EAef,UAfe,EAgBf,UAhBe,EA2Ff,UA3Fe,E,gBA4FvB,YAAA,CAGa,KAHb,EAGa,IAHb,EAGa,CAHD,WAGC,CAHb,E;;AAAA,O,sBA5FuB,E,gBAiGvB,YAAA,CAkBa,KAlBb,EAkBa,IAlBb,EAkBa,CAlBM,WAkBN,CAlBb,E;;AAAA,O;gBAAK;UAjGkB,E,gBAqHvB,YAAA,CAUa,KAVb,EAUa,IAVb,EAUa,CAVM,WAUN,CAVb,E;;AAAA,O;gBAAK;UArHkB,EAiIf,WAjIe,E,gBAkIvB,YAAA,CAwDa,KAxDb,EAwDa,IAxDb,EAwDa,CAxDM,WAwDN,CAxDb,E;;AAAA,O;gBAAK;UAlIkB,EA4Lf,WA5Le,EA6Lf,WA7Le,EAiMf,WAjMe,E,gBAkMvB,YAAA,CAOa,KAPb,EAOa,IAPb,EAOa,CAPD,WAOC,CAPb,E;;AAAA,O,sBAlMuB,E,gBA2MvB,YAAA,CAuCa,KAvCb,EAuCa,IAvCb,EAuCa,CAvCM,WAuCN,CAvCb,E;;AAAA,O;gBAAK;UA3MkB,EAoPf,WApPe,E,gBAqPvB,YAAA,CAuBa,KAvBb,EAuBa,IAvBb,EAuBa,CAvBM,WAuBN,CAvBb,E;;AAAA,O;gBAAK;UArPkB,EA8Qf,WA9Qe,EA+Qf,WA/Qe,EAmRf,WAnRe,E,gBAqRvB,YAAA,CAiBa,KAjBb,EAiBa,IAjBb,EAiBa,CAjBD,WAiBC,CAjBb,E;;AAAA,O,sBArRuB,E,gBAwSvB,YAAA,CA+Ba,KA/Bb,EA+Ba,IA/Bb,EA+Ba,CA/BM,WA+BN,CA/Bb,E;;AAAA,O;gBAAK;UAxSkB,EAyUf,WAzUe,E,gBA0UvB,YAAA,CAmCa,KAnCb,EAmCa,IAnCb,EAmCa,CAnCM,WAmCN,CAnCb,E;;AAAA,O;gBAAK;UA1UkB,EA+Wf,WA/We,EAgXf,WAhXe,E,gBAqXvB,YAAA,CAGa,KAHb,EAGa,IAHb,EAGa,CAHD,WAGC,CAHb,E;;AAAA,O,sBArXuB,E,gBA0XvB,YAAA,CAkEa,KAlEb,EAkEa,IAlEb,EAkEa,CAlEM,WAkEN,CAlEb,E;;AAAA,O;gBAAK;UA1XkB,EA8bf,WA9be,EA+bf,WA/be,E,gBAicvB,YAAA,CAUa,KAVb,EAUa,IAVb,EAUa,CAVD,WAUC,CAVb,E;;AAAA,O,sBAjcuB,E,gBA6cvB,YAAA,CA8Ba,KA9Bb,EA8Ba,IA9Bb,EA8Ba,CA9BM,WA8BN,CA9Bb,E;;AAAA,O;gBAAK;UA7ckB,EA6eP,WA7eO,EA8eP,WA9eO,E,gBA+evB,YAAA,CAGa,KAHb,EAGa,IAHb,EAGa,CAHD,WAGC,CAHb,E;;AAAA,O,sBA/euB,EAofP,WApfO,EAqfP,WArfO,E,gBAwfvB,YAAA,CAWa,KAXb,EAWa,IAXb,EAWa,CAXD,WAWC,CAXb,E;;AAAA,O,sBAxfuB,EAqgBf,WArgBe,EAsgBf,WAtgBe,EAygBf,WAzgBe,E,gBA4gBvB,YAAA,CAOa,KAPb,EAOa,IAPb,EAOa,CAPD,WAOC,CAPb,E;;AAAA,O,sBA5gBuB,E,gBAqhBvB,YAAA,CAwCa,KAxCb,EAwCa,IAxCb,EAwCa,CAxCM,WAwCN,CAxCb,E;;AAAA,O;gBAAK;UArhBkB,EA+jBrB,WA/jBqB,EAgkBf,WAhkBe,EAikBrB,WAjkBqB,EA+pBrB,WA/pBqB,EAgqBrB,WAhqBqB,EAksBrB,WAlsBqB,EAmsBrB,YAAA,CAA0I,GAA1I,EAA0I,IAA1I,EAA0I,C,WAAA,EAA1D,YAAA,CAAgD,sBAAhD,EAAgD;AAAnC,QAAA,EAAE,EAAC;AAAgC,OAAhD,EAA0B;0BAAC;AAAA,iBAAO,C,WAAA,CAAP;AAAA,S,CAAD;;;;AAAA,OAA1B,CAA0D,E,WAAA,CAA1I,CAnsBqB,EAosBrB,WApsBqB,EAyvBrB,WAzvBqB,EA0vBrB,WA1vBqB,CAAf;AAAA,K;;;;GADP,E;;AAAA,I,WAAA,C","sourcesContent":["<template>\n\t<AppDoc name=\"TreeDemo\" :sources=\"sources\" :service=\"['NodeService']\" :data=\"['treenodes']\" github=\"tree/TreeDemo.vue\">\n        <h5>Import</h5>\n<pre v-code.script><code>\nimport Tree from 'primevue/tree';\n\n</code></pre>\n\n        <h5>Import via CDN</h5>\n<pre v-code><code>\n&lt;script src=\"https://unpkg.com/primevue@^3/core/core.js\"&gt;&lt;/script&gt;\n\n</code></pre>\n\n\t\t<h5>Getting Started</h5>\n\t\t<p>Tree component requires an array of TreeNode objects as its <i>value</i>.</p>\n\n        <h5>TreeNode API utilized by the Tree</h5>\n        <div class=\"doc-tablewrapper\">\n            <table class=\"doc-table\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Default</th>\n                        <th>Description</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>key</td>\n                        <td>any</td>\n                        <td>null</td>\n                        <td>Mandatory unique key of the node.</td>\n                    </tr>\n                    <tr>\n                        <td>label</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Label of the node.</td>\n                    </tr>\n                    <tr>\n                        <td>data</td>\n                        <td>any</td>\n                        <td>null</td>\n                        <td>Data represented by the node.</td>\n                    </tr>\n                    <tr>\n                        <td>type</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Type of the node to match a template.</td>\n                    </tr>\n                    <tr>\n                        <td>icon</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Icon of the node to display next to content.</td>\n                    </tr>\n                    <tr>\n                        <td>children</td>\n                        <td>TreeNode[]</td>\n                        <td>null</td>\n                        <td>An array of treenodes as children.</td>\n                    </tr>\n                    <tr>\n                        <td>style</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Inline style of the node.</td>\n                    </tr>\n                    <tr>\n                        <td>styleClass</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Style class of the node.</td>\n                    </tr>\n                    <tr>\n                        <td>selectable</td>\n                        <td>boolean</td>\n                        <td>null</td>\n                        <td>Whether the node is selectable when selection mode is enabled.</td>\n                    </tr>\n                    <tr>\n                        <td>leaf</td>\n                        <td>boolean</td>\n                        <td>null</td>\n                        <td>Specifies if the node has children. Used in lazy loading.</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        <p>Example below loads the tree nodes from a remote datasource via a service called NodeService.</p>\n<pre v-code><code><template v-pre>\n&lt;Tree :value=\"nodes\"&gt;&lt;/Tree&gt;\n</template>\n</code></pre>\n\n<pre v-code.script><code>\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            nodes: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeNodes().then(data => this.nodes = data);\n    }\n}\n\n</code></pre>\n\n<pre v-code.script><code>\nexport default class NodeService {\n\n    getTreeNodes() {\n       return fetch('demo/data/treenodes.json').then(res => res.json())\n                .then(d => d.root);\n    }\n\n}\n\n</code></pre>\n\n        <p>The json response sample would be as following.</p>\n<pre v-code.script><code>\n{\n    \"root\": [\n        {\n            \"key\": \"0\",\n            \"label\": \"Documents\",\n            \"data\": \"Documents Folder\",\n            \"icon\": \"pi pi-fw pi-inbox\",\n            \"children\": [{\n                \"key\": \"0-0\",\n                \"label\": \"Work\",\n                \"data\": \"Work Folder\",\n                \"icon\": \"pi pi-fw pi-cog\",\n                \"children\": [{ \"key\": \"0-0-0\", \"label\": \"Expenses.doc\", \"icon\": \"pi pi-fw pi-file\", \"data\": \"Expenses Document\" }, { \"key\": \"0-0-1\", \"label\": \"Resume.doc\", \"icon\": \"pi pi-fw pi-file\", \"data\": \"Resume Document\" }]\n            },\n            {\n                \"key\": \"0-1\",\n                \"label\": \"Home\",\n                \"data\": \"Home Folder\",\n                \"icon\": \"pi pi-fw pi-home\",\n                \"children\": [{ \"key\": \"0-1-0\", \"label\": \"Invoices.txt\", \"icon\": \"pi pi-fw pi-file\", \"data\": \"Invoices for this month\" }]\n            }]\n        },\n        {\n            \"key\": \"1\",\n            \"label\": \"Events\",\n            \"data\": \"Events Folder\",\n            \"icon\": \"pi pi-fw pi-calendar\",\n            \"children\": [\n                { \"key\": \"1-0\", \"label\": \"Meeting\", \"icon\": \"pi pi-fw pi-calendar-plus\", \"data\": \"Meeting\" },\n                { \"key\": \"1-1\", \"label\": \"Product Launch\", \"icon\": \"pi pi-fw pi-calendar-plus\", \"data\": \"Product Launch\" },\n                { \"key\": \"1-2\", \"label\": \"Report Review\", \"icon\": \"pi pi-fw pi-calendar-plus\", \"data\": \"Report Review\" }]\n        },\n        {\n            \"key\": \"2\",\n            \"label\": \"Movies\",\n            \"data\": \"Movies Folder\",\n            \"icon\": \"pi pi-fw pi-star\",\n            \"children\": [{\n                \"key\": \"2-0\",\n                \"icon\": \"pi pi-fw pi-star\",\n                \"label\": \"Al Pacino\",\n                \"data\": \"Pacino Movies\",\n                \"children\": [{ \"key\": \"2-0-0\", \"label\": \"Scarface\", \"icon\": \"pi pi-fw pi-video\", \"data\": \"Scarface Movie\" }, { \"key\": \"2-0-1\", \"label\": \"Serpico\", \"icon\": \"pi pi-fw pi-video\", \"data\": \"Serpico Movie\" }]\n            },\n            {\n                \"key\": \"2-1\",\n                \"label\": \"Robert De Niro\",\n                \"icon\": \"pi pi-fw pi-star\",\n                \"data\": \"De Niro Movies\",\n                \"children\": [{ \"key\": \"2-1-0\", \"label\": \"Goodfellas\", \"icon\": \"pi pi-fw pi-video\", \"data\": \"Goodfellas Movie\" }, { \"key\": \"2-1-1\", \"label\": \"Untouchables\", \"icon\": \"pi pi-fw pi-video\", \"data\": \"Untouchables Movie\" }]\n            }]\n        }\n    ]\n}\n\n</code></pre>\n\n        <h5>Programmatic Control</h5>\n        <p>Tree state can be controlled programmatically with the <i>expandedKeys</i> property that defines the keys\n            that are expanded. This property is a Map instance whose key is the key of a node and value is a boolean. Note that <i>expandedKeys</i> also supports two-way binding with the v-model directive.\n        </p>\n\n        <p>Example below expands and collapses all nodes with buttons.</p>\n<pre v-code><code><template v-pre>\n&lt;div&gt;\n    &lt;Button type=\"button\" icon=\"pi pi-plus\" label=\"Expand All\" @click=\"expandAll\" /&gt;\n    &lt;Button type=\"button\" icon=\"pi pi-minus\" label=\"Collapse All\" @click=\"collapseAll\" /&gt;\n&lt;/div&gt;\n&lt;Tree :value=\"nodes\" :expandedKeys=\"expandedKeys\"&gt;&lt;/Tree&gt;\n</template>\n</code></pre>\n\n<pre v-code.script><code>\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            nodes: null,\n            expandedKeys: {}\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeNodes().then(data => this.nodes = data);\n    },\n    methods: {\n        expandAll() {\n            for (let node of this.nodes) {\n                this.expandNode(node);\n            }\n\n            this.expandedKeys = {...this.expandedKeys};\n        },\n        collapseAll() {\n            this.expandedKeys = {};\n        },\n        expandNode(node) {\n            this.expandedKeys[node.key] = true;\n            if (node.children &amp;&amp; node.children.length) {\n                for (let child of node.children) {\n                    this.expandNode(child);\n                }\n            }\n        }\n    }\n}\n\n</code></pre>\n\n        <p>To display some nodes as expanded by default, simply add their keys to the map.</p>\n<pre v-code.script><code>\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            nodes: null,\n            expandedKeys: {}\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeNodes().then(data => {\n            this.nodes = data;\n            this.expandedKeys[this.nodes[0].key] = true;\n            this.expandedKeys[this.nodes[1].key] = true;\n        });\n    }\n}\n\n</code></pre>\n\n        <h5>Selection</h5>\n        <p>Tree supports <b>single</b>, <b>multiple</b> and <b>checkbox</b> selection modes. Define the <i>selectionKeys</i> with the v-model directive and the <i>selectionMode</i> properties to enable the selection.\n        By default in multiple selection mode, metaKey is necessary to add to existing selections however this can be configured with <i>metaKeySelection</i> property. Note that\n        in touch enabled devices, Tree does not require metaKey. In addition selection on a particular node can be disabled if the <i>selectable</i> is false on the node instance.</p>\n\n        <p>Similarly to the <i>expandedKeys</i>, <i>selectionKeys</i> is a Map instance whose key is the key of a node and value is a boolean in \"single\" and \"multiple\" cases. On the other hand\n        in \"checkbox\" mode, instead of a boolean, value should be an object that has \"checked\" and \"partialChecked\" properties to represent the checked state of a node.</p>\n<pre v-code><code><template v-pre>\n&lt;h3&gt;Single Selection&lt;/h3&gt;\n&lt;Tree :value=\"nodes\" selectionMode=\"single\" v-model:selectionKeys=\"selectedKey1\"&gt;&lt;/Tree&gt;\n\n&lt;h3&gt;Multiple Selection with MetaKey&lt;/h3&gt;\n&lt;Tree :value=\"nodes\" selectionMode=\"multiple\" v-model:selectionKeys=\"selectedKeys1\"&gt;&lt;/Tree&gt;\n\n&lt;h3&gt;Multiple Selection without MetaKey&lt;/h3&gt;\n&lt;Tree :value=\"nodes\" selectionMode=\"multiple\" v-model:selectionKeys=\"selectedKeys2\" :metaKeySelection=\"false\"&gt;&lt;/Tree&gt;\n\n&lt;h3&gt;Checkbox Selection&lt;/h3&gt;\n&lt;Tree :value=\"nodes\" selectionMode=\"checkbox\" v-model:selectionKeys=\"selectedKeys3\"&gt;&lt;/Tree&gt;\n\n&lt;h3&gt;Events&lt;/h3&gt;\n&lt;Tree :value=\"nodes\" selectionMode=\"single\" v-model:selectionKeys=\"selectedKey2\" :metaKeySelection=\"false\"\n    @node-select=\"onNodeSelect\" @node-unselect=\"onNodeUnselect\"&gt;&lt;/Tree&gt;\n</template>\n</code></pre>\n\n<pre v-code.script><code>\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            selectedKey1: null,\n            selectedKey2: null,\n            selectedKeys1: null,\n            selectedKeys2: null,\n            selectedKeys3: null,\n            nodes: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeNodes().then(data => this.nodes = data);\n    },\n    methods: {\n        onNodeSelect(node) {\n            this.$toast.add({severity:'success', summary: 'Node Selected', detail: node.label, life: 3000});\n        },\n        onNodeUnselect(node) {\n            this.$toast.add({severity:'success', summary: 'Node Unselected', detail: node.label, life: 3000});\n        }\n    }\n}\n\n</code></pre>\n\n        <p>To display some nodes as selected by default, simply add their keys to the map.</p>\n<pre v-code.script><code>\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            selectedKey1: null,\n            selectedKey2: null,\n            selectedKeys1: null,\n            selectedKeys2: null,\n            selectedKeys3: null,\n            nodes: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeNodes().then(data => {\n            this.nodes = data;\n\n            //single preselection\n            this.selectedKey1[this.nodes[0].key] = true;\n\n            //multiple preselection\n            this.selectedKeys2[this.nodes[0].key] = true;\n            this.selectedKeys2[this.nodes[1].key] = true;\n\n            //checkbox preselection\n            this.selectedKeys2[this.nodes[1].key] = {checked: true};\n        });\n    }\n}\n\n</code></pre>\n\n        <h5>Lazy</h5>\n        <p>Lazy Loading is handy to deal with huge datasets. Idea is instead of loading the whole tree, load child nodes on demand\n            using expand expand. The important part is setting <i>leaf</i> to true on a node instance so that even without children,\n            tree would render an expand icon. Example below uses an in memory collection to mimic a lazy loading scenario with timeouts.\n        </p>\n\n<pre v-code><code><template v-pre>\n&lt;Tree :value=\"nodes\" @node-expand=\"onNodeExpand\" :loading=\"loading\"&gt;&lt;/Tree&gt;\n</template>\n</code></pre>\n\n<pre v-code.script><code>\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            loading: false,\n            nodes: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.loading = true;\n\n        setTimeout(() => {\n            this.nodes = this.initateNodes();\n            this.loading = false;\n        }, 2000);\n    },\n    methods: {\n        onNodeExpand(node) {\n            if (!node.children) {\n                this.loading = true;\n\n                setTimeout(() => {\n                    let _node = {...node};\n                    _node.children = [];\n\n                    for (let i = 0; i &lt; 3; i++) {\n                        _node.children.push({\n                            key: node.key + '-' + i,\n                            label: 'Lazy ' + node.label + '-' + i\n                        });\n                    }\n\n                    let _nodes = {...this.nodes}\n                    _nodes[parseInt(node.key, 10)] = _node;\n\n                    this.nodes = _nodes;\n                    this.loading = false;\n                }, 500);\n            }\n        },\n        initateNodes() {\n            return [{\n                key: '0',\n                label: 'Node 0',\n                leaf: false\n            },\n            {\n                key: '1',\n                label: 'Node 1',\n                leaf: false\n            },\n            {\n                key: '2',\n                label: 'Node 2',\n                leaf: false\n            }];\n        }\n    }\n}\n\n</code></pre>\n\n        <h5>Templating</h5>\n        <p>The <i>type</i> property of a TreeNode is used to map a template to a node to create the node label. If it is undefined and no default template is available,\n        label of the node is used.</p>\n<pre v-code><code><template v-pre>\n&lt;Tree :value=\"nodes\"&gt;\n    &lt;template #default=\"slotProps\"&gt;\n        &lt;b&gt;&#123;&#123;slotProps.node.label&#125;&#125;&lt;/b&gt;\n    &lt;/template&gt;\n    &lt;template #url=\"slotProps\"&gt;\n        &lt;a :href=\"slotProps.node.data\"&gt;&#123;&#123;slotProps.node.label&#125;&#125;&lt;/a&gt;\n    &lt;/template&gt;\n&lt;/Tree&gt;\n</template>\n</code></pre>\n\n<pre v-code.script><code>\nexport default {\n    data() {\n        return {\n            nodes: [\n                {\n                    key: '0',\n                    label: 'Introduction',\n                    children: [\n                        {key: '0-0', label: 'What is Vue.js?', data:'https://vuejs.org/v2/guide/#What-is-Vue-js', type: 'url'},\n                        {key: '0-1', label: 'Getting Started', data: 'https://vuejs.org/v2/guide/#Getting-Started', type: 'url'},\n                        {key: '0-2', label: 'Declarative Rendering', data:'https://vuejs.org/v2/guide/#Declarative-Rendering', type: 'url'},\n                        {key: '0-3', label: 'Conditionals and Loops', data: 'https://vuejs.org/v2/guide/#Conditionals-and-Loops', type: 'url'}\n                    ]\n                },\n                {\n                    key: '1',\n                    label: 'Components In-Depth',\n                    children: [\n                        {key: '1-0', label: 'Component Registration', data: 'https://vuejs.org/v2/guide/components-registration.html', type: 'url'},\n                        {key: '1-1', llabel: 'Props', data: 'https://vuejs.org/v2/guide/components-props.html', type: 'url'},\n                        {key: '1-2', llabel: 'Custom Events', data: 'https://vuejs.org/v2/guide/components-custom-events.html', type: 'url'},\n                        {key: '1-3', llabel: 'Slots', data: 'https://vuejs.org/v2/guide/components-slots.html', type: 'url'}\n                    ]\n                }\n            ]\n        }\n    }\n}\n\n</code></pre>\n\n                <h5>Scrolling</h5>\n                <p>Scrolling is used to preserve space as content of the tree is dynamic and enabled by <i>scrollHeight</i> property.</p>\n<pre v-code><code><template v-pre>\n&lt;Tree :value=\"nodes1\" scrollHeight=\"200px\"&gt;&lt;/Tree&gt;\n</template>\n</code></pre>\n\n                <h5>Flex Scroll</h5>\n                <p>In cases where viewport should adjust itself according to the table parent's height instead of a fixed viewport height, set <i>scrollHeight</i> option as <b>flex</b>. In example below,\n                table is inside a Dialog where viewport size dynamically responds to the dialog size changes such as maximizing.</p>\n\n<pre v-code><code><template v-pre>\n&lt;Button type=\"button\" icon=\"pi pi-external-link\" label=\"View\" @click=\"dialogVisible = true\"&gt;&lt;/Button&gt;\n\n&lt;Dialog header=\"Flex Scroll\" v-model:visible=\"dialogVisible\" :style=\"{width: '50vw'}\" maximizable\n    :contentStyle=\"{height: '300px'}\" class=\"p-fluid\"&gt;\n    &lt;Tree :value=\"nodes2\" scrollHeight=\"flex\"&gt;&lt;/Tree&gt;\n    &lt;template #footer&gt;\n        &lt;Button type=\"button\" icon=\"pi pi-check\" @click=\"dialogVisible = false\" class=\"p-button-text\"&gt;&lt;/Button&gt;\n    &lt;/template&gt;\n&lt;/Dialog&gt;\n</template>\n</code></pre>\n\n        <h5>Filtering</h5>\n        <p>Filtering is enabled by setting the <i>filter</i> property to true, by default label property of a node\n        is used to compare against the value in the text field, in order to customize which field(s) should be used during search, define the <i>filterBy</i> property as a comma separated list.</p>\n\n        <p>In addition <i>filterMode</i> specifies the filtering strategy. In <b>lenient</b> mode when the query matches a node, children of the node are not searched further as all descendants of the node are included. On the other hand,\n         in <b>strict</b> mode when the query matches a node, filtering continues on all descendants.</p>\n\n<pre v-code><code><template v-pre>\n&lt;h3&gt;Lenient Filter&lt;/h3&gt;\n&lt;Tree :value=\"nodes\" :filter=\"true\" filterMode=\"lenient\"&gt;&lt;/Tree&gt;\n\n&lt;h3&gt;Strict Filter&lt;/h3&gt;\n&lt;Tree :value=\"nodes\" :filter=\"true\" filterMode=\"strict\"&gt;&lt;/Tree&gt;\n</template>\n</code></pre>\n\n<pre v-code.script><code>\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            nodes: null,\n            expandedKeys: {}\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeNodes().then(data => this.nodes = data);\n    },\n    methods: {\n        expandAll() {\n            for (let node of this.nodes) {\n                this.expandNode(node);\n            }\n\n            this.expandedKeys = {...this.expandedKeys};\n        },\n        collapseAll() {\n            this.expandedKeys = {};\n        },\n        expandNode(node) {\n            if (node.children &lt;&lt; node.children.length) {\n                this.expandedKeys[node.key] = true;\n\n                for (let child of node.children) {\n                    this.expandNode(child);\n                }\n            }\n        }\n    }\n}\n\n</code></pre>\n\n\t\t<h5>Properties</h5>\n        <p>Any property such as style and class are passed to the underlying root element. Following is the additional property to configure the component.</p>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Default</th>\n                        <th>Description</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>value</td>\n                        <td>array</td>\n                        <td>null</td>\n                        <td>An array of treenodes.</td>\n                    </tr>\n                    <tr>\n                        <td>expandedKeys</td>\n                        <td>array</td>\n                        <td>null</td>\n                        <td>A map of keys to represent the expansion state in controlled mode.</td>\n                    </tr>\n                    <tr>\n                        <td>selectionMode</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Defines the selection mode, valid values \"single\", \"multiple\", and \"checkbox\".</td>\n                    </tr>\n                    <tr>\n                        <td>selectionKeys</td>\n                        <td>any</td>\n                        <td>null</td>\n                        <td>A map of keys to control the selection state.</td>\n                    </tr>\n                    <tr>\n                        <td>metaKeySelection</td>\n                        <td>boolean</td>\n                        <td>true</td>\n                        <td>Defines how multiple items can be selected, when true metaKey needs to be pressed to select or unselect an item and when set to false selection of each item\n                            can be toggled individually. On touch enabled devices, metaKeySelection is turned off automatically.</td>\n                    </tr>\n                    <tr>\n                        <td>loading</td>\n                        <td>boolean</td>\n                        <td>false</td>\n                        <td>Whether to display loading indicator.</td>\n                    </tr>\n                    <tr>\n                        <td>loadingIcon</td>\n                        <td>string</td>\n                        <td>pi pi-spin</td>\n                        <td>Icon to display when tree is loading.</td>\n                    </tr>\n                    <tr>\n                        <td>filter</td>\n                        <td>boolean</td>\n                        <td>false</td>\n                        <td>When specified, displays an input field to filter the items.</td>\n                    </tr>\n                    <tr>\n                        <td>filterBy</td>\n                        <td>string</td>\n                        <td>label</td>\n                        <td>When filtering is enabled, filterBy decides which field or fields (comma separated) to search against.</td>\n                    </tr>\n                    <tr>\n                        <td>filterMode</td>\n                        <td>string</td>\n                        <td>lenient</td>\n                        <td>Mode for filtering valid values are \"lenient\" and \"strict\". Default is lenient.</td>\n                    </tr>\n                    <tr>\n                        <td>filterPlaceholder</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Placeholder text to show when filter input is empty.</td>\n                    </tr>\n                    <tr>\n                        <td>filterLocale</td>\n                        <td>string</td>\n                        <td>undefined</td>\n                        <td>Locale to use in filtering. The default locale is the host environment's current locale.</td>\n                    </tr>\n                    <tr>\n                        <td>scrollHeight</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Height of the scroll viewport in fixed units or the \"flex\" keyword for a dynamic size.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Events</h5>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Parameters</th>\n                        <th>Description</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>node-select</td>\n                        <td>node: Node instance</td>\n                        <td>Callback to invoke when a node is selected.</td>\n                    </tr>\n                    <tr>\n                        <td>node-unselect</td>\n                        <td>node: Node instance</td>\n                        <td>Callback to invoke when a node is unselected.</td>\n                    </tr>\n                    <tr>\n                        <td>node-expand</td>\n                        <td>node: Node instance</td>\n                        <td>Callback to invoke when a node is expanded.</td>\n                    </tr>\n                    <tr>\n                        <td>node-collapse</td>\n                        <td>node: Node instance</td>\n                        <td>Callback to invoke when a node is collapsed.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Styling</h5>\n\t\t<p>Following is the list of structural style classes, for theming classes visit <router-link to=\"/theming\">theming</router-link> page.</p>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Element</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>p-tree</td>\n                        <td>Main container element</td>\n                    </tr>\n                    <tr>\n                        <td>p-tree-horizontal</td>\n                        <td>Main container element in horizontal mode</td>\n                    </tr>\n                    <tr>\n                        <td>p-tree-container</td>\n                        <td>Container of nodes</td>\n                    </tr>\n                    <tr>\n                        <td>p-treenode</td>\n                        <td>A treenode element</td>\n                    </tr>\n                    <tr>\n                        <td>p-treenode-content</td>\n                        <td>Content of a treenode</td>\n                    </tr>\n                    <tr>\n                        <td>p-treenode-toggler</td>\n                        <td>Toggle element</td>\n                    </tr>\n                    <tr>\n                        <td>p-treenode-toggler-icon</td>\n                        <td>Toggle icon</td>\n                    </tr>\n                    <tr>\n                        <td>p-treenode-icon</td>\n                        <td>Icon of a treenode</td>\n                    </tr>\n                    <tr>\n                        <td>p-treenode-label</td>\n                        <td>Label of a treenode</td>\n                    </tr>\n                    <tr>\n                        <td>p-treenode-children</td>\n                        <td>Container element for node children</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Dependencies</h5>\n\t\t<p>None.</p>\n    </AppDoc>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div>\n        <h5>Basic</h5>\n        <Tree :value=\"nodes\"></Tree>\n\n        <h5>Programmatic Control</h5>\n        <div style=\"margin-bottom: 1em\">\n            <Button type=\"button\" icon=\"pi pi-plus\" label=\"Expand All\" @click=\"expandAll\" />\n            <Button type=\"button\" icon=\"pi pi-minus\" label=\"Collapse All\" @click=\"collapseAll\" />\n        </div>\n        <Tree :value=\"nodes\" :expandedKeys=\"expandedKeys\"></Tree>\n    </div>\n</template>\n\n<script>\nimport NodeService from './service/NodeService';\n\nexport default {\n    data() {\n        return {\n            nodes: null,\n            expandedKeys: {}\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeNodes().then(data => this.nodes = data);\n    },\n    methods: {\n        expandAll() {\n            for (let node of this.nodes) {\n                this.expandNode(node);\n            }\n\n            this.expandedKeys = {...this.expandedKeys};\n        },\n        collapseAll() {\n            this.expandedKeys = {};\n        },\n        expandNode(node) {\n            if (node.children && node.children.length) {\n                this.expandedKeys[node.key] = true;\n\n                for (let child of node.children) {\n                    this.expandNode(child);\n                }\n            }\n        }\n    }\n}\n<\\\\/script>\n\n<style scoped>\n.p-button {\n    margin-right: .5rem;\n}\n</style>`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div>\n        <h5>Basic</h5>\n        <Tree :value=\"nodes\"></Tree>\n\n        <h5>Programmatic Control</h5>\n        <div style=\"margin-bottom: 1em\">\n            <Button type=\"button\" icon=\"pi pi-plus\" label=\"Expand All\" @click=\"expandAll\" />\n            <Button type=\"button\" icon=\"pi pi-minus\" label=\"Collapse All\" @click=\"collapseAll\" />\n        </div>\n        <Tree :value=\"nodes\" :expandedKeys=\"expandedKeys\"></Tree>\n    </div>\n</template>\n\n<script>\nimport { ref, onMounted } from \"vue\";\nimport NodeService from './service/NodeService';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            nodeService.value.getTreeNodes().then(data => nodes.value = data);\n        })\n\n        const nodes = ref();\n        const expandedKeys = ref({});\n        const nodeService = ref(new NodeService());\n        const expandAll = () => {\n            for (let node of nodes.value) {\n                expandNode(node);\n            }\n\n            expandedKeys.value = {...expandedKeys.value};\n        };\n        const collapseAll = () => {\n            expandedKeys.value = {};\n        };\n        const expandNode = (node) => {\n            if (node.children && node.children.length) {\n                expandedKeys.value[node.key] = true;\n\n                for (let child of node.children) {\n                    expandNode(child);\n                }\n            }\n        };\n\n        return { nodes, expandedKeys, nodeService, expandAll, collapseAll, expandNode }\n    }\n}\n<\\\\/script>\n\n<style scoped>\n.p-button {\n    margin-right: .5rem;\n}\n</style>`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"./NodeService.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <h5>Basic</h5>\n            <p-tree :value=\"nodes\"></p-tree>\n\n            <h5>Programmatic Control</h5>\n            <div style=\"margin-bottom: 1em\">\n                <p-button type=\"button\" icon=\"pi pi-plus\" label=\"Expand All\" @click=\"expandAll\"></p-button>\n                <p-button type=\"button\" icon=\"pi pi-minus\" label=\"Collapse All\" @click=\"collapseAll\"></p-button>\n            </div>\n            <p-tree :value=\"nodes\" :expanded-keys=\"expandedKeys\"></p-tree>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref, onMounted } = Vue;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    nodeService.value.getTreeNodes().then(data => nodes.value = data);\n                })\n\n                const nodes = ref();\n                const expandedKeys = ref({});\n                const nodeService = ref(new NodeService());\n                const expandAll = () => {\n                    for (let node of nodes.value) {\n                        expandNode(node);\n                    }\n\n                    expandedKeys.value = {...expandedKeys.value};\n                };\n                const collapseAll = () => {\n                    expandedKeys.value = {};\n                };\n                const expandNode = (node) => {\n                    if (node.children && node.children.length) {\n                        expandedKeys.value[node.key] = true;\n\n                        for (let child of node.children) {\n                            expandNode(child);\n                        }\n                    }\n                };\n\n                return { nodes, expandedKeys, nodeService, expandAll, collapseAll, expandNode }\n            },\n            components: {\n                \"p-tree\": primevue.tree,\n                \"p-button\": primevue.button\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\\\/script>\n\n        <style>\n        .p-button {\n            margin-right: .5rem;\n        }\n        </style>`\n                }\n            }\n        }\n    }\n}\n</script>\n"],"sourceRoot":""}]}