{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/checkbox/CheckboxDoc.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/checkbox/CheckboxDoc.vue","mtime":1634589566255},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/checkbox/CheckboxDoc.vue"],"names":[],"mappings":"AAyKA,eAAe;AACX,EAAA,IADW,kBACJ;AACH,WAAO;AACH,MAAA,OAAO,EAAE;AACL,uBAAe;AACX,UAAA,OAAO,EAAE,oBADE;AAEX,UAAA,OAAO;AAFI,SADV;AAsDL,2BAAmB;AACf,UAAA,OAAO,EAAE,wBADM;AAEf,UAAA,OAAO;AAFQ,SAtDd;AA8GL,0BAAkB;AACd,UAAA,OAAO,EAAE,gBADK;AAEd,UAAA,OAAO,sFAFO;AAGd,UAAA,OAAO;AAHO;AA9Gb;AADN,KAAP;AA8KJ;AAhLW,CAAf","sourcesContent":["<template>\n    <AppDoc name=\"CheckboxDemo\" :sources=\"sources\" github=\"checkbox/CheckboxDemo.vue\">\n        <h5>Import</h5>\n<pre v-code.script><code>\nimport Checkbox from 'primevue/checkbox';\n\n</code></pre>\n\n        <h5>Import via CDN</h5>\n<pre v-code><code>\n&lt;script src=\"https://unpkg.com/primevue@^3/core/core.js\"&gt;&lt;/script&gt;\n&lt;script src=\"https://unpkg.com/primevue@^3/checkbox/checkbox.min.js\"&gt;&lt;/script&gt;\n\n</code></pre>\n\n\t\t<h5>Getting Started</h5>\n\t\t<p>Checkbox can either be used in multiple selection with other checkboxes or as a single checkbox to provide a boolean value.</p>\n<pre v-code><code>\n&lt;Checkbox v-model=\"checked\" :binary=\"true\" /&gt;\n\n</code></pre>\n\n\t\t<h5>Multiple Values</h5>\n\t\t<p>Multiple mode is enabled by default, v-model property refers to an array to bind the selected values.</p>\n<pre v-code><code>\n&lt;Checkbox name=\"city\" value=\"Chicago\" v-model=\"cities\" /&gt;\n&lt;Checkbox name=\"city\" value=\"Los Angeles\" v-model=\"cities\" /&gt;\n&lt;Checkbox name=\"city\" value=\"New York\" v-model=\"cities\" /&gt;\n&lt;Checkbox name=\"city\" value=\"San Francisco\" v-model=\"cities\" /&gt;\n\n</code></pre>\n\n<pre v-code.script><code>\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tcities: []\n\t\t}\n\t}\n}\n\n</code></pre>\n\n\t\t<p>As v-model is two-way binding enabled, prepopulating the model array with values is enough to display the related\n\t\t\tcheckboxes as checked by default.</p>\n\n\t\t<h5>Properties</h5>\n        <p>Any property such as name and autofocus are passed to the underlying input element. Following are the additional properties to configure the component.</p>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Default</th>\n                        <th>Description</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>value</td>\n                        <td>any</td>\n                        <td>null</td>\n                        <td>Value of the checkbox.</td>\n                    </tr>\n                    <tr>\n                        <td>modelValue</td>\n                        <td>any</td>\n                        <td>null</td>\n                        <td>Value binding of the checkbox.</td>\n                    </tr>\n                    <tr>\n                        <td>binary</td>\n                        <td>boolean</td>\n                        <td>false</td>\n                        <td>Allows to select a boolean value instead of multiple values.</td>\n                    </tr>\n                    <tr>\n                        <td>style</td>\n                        <td>any</td>\n                        <td>null</td>\n                        <td>Style class of the component input field.</td>\n                    </tr>\n                    <tr>\n                        <td>class</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Inline style of the component.</td>\n                    </tr>\n                    <tr>\n                        <td>trueValue</td>\n                        <td>any</td>\n                        <td>null</td>\n                        <td>Value in checked state.</td>\n                    </tr>\n                    <tr>\n                        <td>falseValue</td>\n                        <td>any</td>\n                        <td>null</td>\n                        <td>Value in unchecked state.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Events</h5>\n        <p>In addition to the following events, any other valid events such as focus and blur are passed implicitly.</p>\n        <div class=\"doc-tablewrapper\">\n            <table class=\"doc-table\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Parameters</th>\n                        <th>Description</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>click</td>\n                        <td>event: Browser event</td>\n                        <td>Callback to invoke on value click.</td>\n                    </tr>\n                    <tr>\n                        <td>change</td>\n                        <td>event: Browser event</td>\n                        <td>Callback to invoke on value change.</td>\n                    </tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>input</td>\n\t\t\t\t\t\t<td>value: New value</td>\n\t\t\t\t\t\t<td>Callback to invoke on value change.</td>\n\t\t\t\t\t</tr>\n                </tbody>\n            </table>\n        </div>\n\n\t\t<h5>Styling</h5>\n\t\t<p>Following is the list of structural style classes, for theming classes visit <router-link to=\"/theming\">theming</router-link> page.</p>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Element</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>p-checkbox</td>\n                        <td>Container element</td>\n                    </tr>\n                    <tr>\n                        <td>p-checkbox-box</td>\n                        <td>Container of icon.</td>\n                    </tr>\n                    <tr>\n                        <td>p-checkbox-icon</td>\n                        <td>Icon element.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Dependencies</h5>\n\t\t<p>None.</p>\n    </AppDoc>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div>\n        <h5>Basic</h5>\n        <div class=\"p-field-checkbox\">\n            <Checkbox id=\"binary\" v-model=\"checked\" :binary=\"true\" />\n            <label for=\"binary\">{{checked}}</label>\n        </div>\n\n        <h5>Multiple</h5>\n        <div class=\"p-field-checkbox\">\n            <Checkbox id=\"city1\" name=\"city\" value=\"Chicago\" v-model=\"cities\" />\n            <label for=\"city1\">Chicago</label>\n        </div>\n        <div class=\"p-field-checkbox\">\n            <Checkbox id=\"city2\" name=\"city\" value=\"Los Angeles\" v-model=\"cities\" />\n            <label for=\"city2\">Los Angeles</label>\n        </div>\n        <div class=\"p-field-checkbox\">\n            <Checkbox id=\"city3\" name=\"city\" value=\"New York\" v-model=\"cities\" />\n            <label for=\"city3\">New York</label>\n        </div>\n        <div class=\"p-field-checkbox\">\n            <Checkbox id=\"city4\" name=\"city\" value=\"San Francisco\" v-model=\"cities\" />\n            <label for=\"city4\">San Francisco</label>\n        </div>\n\n        <h5>Dynamic Values, Preselection, Value Binding and Disabled Option</h5>\n        <div v-for=\"category of categories\" :key=\"category.key\" class=\"p-field-checkbox\">\n            <Checkbox :id=\"category.key\" name=\"category\" :value=\"category\" v-model=\"selectedCategories\" :disabled=\"category.key === 'R'\"/>\n            <label :for=\"category.key\">{{category.name}}</label>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            checked: false,\n            cities: [],\n            categories: [{name: 'Accounting', key: 'A'}, {name: 'Marketing', key: 'M'}, {name: 'Production', key: 'P'}, {name: 'Research', key: 'R'}],\n            selectedCategories: []\n        }\n    },\n    created() {\n        this.selectedCategories = this.categories.slice(1,3);\n    }\n}\n<\\\\/script>`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div>\n        <h5>Basic</h5>\n        <div class=\"p-field-checkbox\">\n            <Checkbox id=\"binary\" v-model=\"checked\" :binary=\"true\" />\n            <label for=\"binary\">{{checked}}</label>\n        </div>\n\n        <h5>Multiple</h5>\n        <div class=\"p-field-checkbox\">\n            <Checkbox id=\"city1\" name=\"city\" value=\"Chicago\" v-model=\"cities\" />\n            <label for=\"city1\">Chicago</label>\n        </div>\n        <div class=\"p-field-checkbox\">\n            <Checkbox id=\"city2\" name=\"city\" value=\"Los Angeles\" v-model=\"cities\" />\n            <label for=\"city2\">Los Angeles</label>\n        </div>\n        <div class=\"p-field-checkbox\">\n            <Checkbox id=\"city3\" name=\"city\" value=\"New York\" v-model=\"cities\" />\n            <label for=\"city3\">New York</label>\n        </div>\n        <div class=\"p-field-checkbox\">\n            <Checkbox id=\"city4\" name=\"city\" value=\"San Francisco\" v-model=\"cities\" />\n            <label for=\"city4\">San Francisco</label>\n        </div>\n\n        <h5>Dynamic Values, Preselection, Value Binding and Disabled Option</h5>\n        <div v-for=\"category of categories\" :key=\"category.key\" class=\"p-field-checkbox\">\n            <Checkbox :id=\"category.key\" name=\"category\" :value=\"category\" v-model=\"selectedCategories\" :disabled=\"category.key === 'R'\"/>\n            <label :for=\"category.key\">{{category.name}}</label>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nexport default {\n    setup() {\n        const checked = ref(false);\n        const cities = ref([]);\n        const categories = ref([\n            {name: 'Accounting', key: 'A'},\n            {name: 'Marketing', key: 'M'},\n            {name: 'Production', key: 'P'},\n            {name: 'Research', key: 'R'}\n        ]);\n        const selectedCategories = ref(categories.value.slice(1,3));\n\n        return { checked, cities, categories, selectedCategories }\n    }\n}\n<\\\\/script>`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/checkbox/checkbox.min.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n        <h5>Basic</h5>\n        <div class=\"p-field-checkbox\">\n            <p-checkbox id=\"binary\" v-model=\"checked\" :binary=\"true\"></p-checkbox>\n            <label for=\"binary\">{{checked}}</label>\n        </div>\n\n        <h5>Multiple</h5>\n        <div class=\"p-field-checkbox\">\n            <p-checkbox id=\"city1\" name=\"city\" value=\"Chicago\" v-model=\"cities\"></p-checkbox>\n            <label for=\"city1\">Chicago</label>\n        </div>\n        <div class=\"p-field-checkbox\">\n            <p-checkbox id=\"city2\" name=\"city\" value=\"Los Angeles\" v-model=\"cities\"></p-checkbox>\n            <label for=\"city2\">Los Angeles</label>\n        </div>\n        <div class=\"p-field-checkbox\">\n            <p-checkbox id=\"city3\" name=\"city\" value=\"New York\" v-model=\"cities\"></p-checkbox>\n            <label for=\"city3\">New York</label>\n        </div>\n        <div class=\"p-field-checkbox\">\n            <p-checkbox id=\"city4\" name=\"city\" value=\"San Francisco\" v-model=\"cities\"></p-checkbox>\n            <label for=\"city4\">San Francisco</label>\n        </div>\n\n        <h5>Dynamic Values, Preselection, Value Binding and Disabled Option</h5>\n        <div v-for=\"category of categories\" :key=\"category.key\" class=\"p-field-checkbox\">\n            <p-checkbox :id=\"category.key\" name=\"category\" :value=\"category\" v-model=\"selectedCategories\" :disabled=\"category.key === 'R'\"></p-checkbox>\n            <label :for=\"category.key\">{{category.name}}</label>\n        </div>\n    </div>\n\n    <script type=\"module\">\n        const { createApp, ref } = Vue;\n\n        const App = {\n            setup() {\n                const checked = ref(false);\n                const cities = ref([]);\n                const categories = ref([\n                    {name: 'Accounting', key: 'A'},\n                    {name: 'Marketing', key: 'M'},\n                    {name: 'Production', key: 'P'},\n                    {name: 'Research', key: 'R'}\n                ]);\n                const selectedCategories = ref(categories.value.slice(1,3));\n\n                return { checked, cities, categories, selectedCategories }\n            },\n            components: {\n                \"p-checkbox\": primevue.checkbox\n            }\n        };\n\n        createApp(App).use(primevue.config.default).mount('#app');\n    <\\\\/script>\n`\n                }\n            }\n        }\n    }\n}\n</script>\n"],"sourceRoot":""}]}