{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/filterservice/FilterServiceDemo.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/filterservice/FilterServiceDemo.vue","mtime":1634589566266},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW0uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCBGaWx0ZXJTZXJ2aWNlRG9jIGZyb20gJy4vRmlsdGVyU2VydmljZURvYyc7CmltcG9ydCB7IEZpbHRlck1hdGNoTW9kZSwgRmlsdGVyU2VydmljZSB9IGZyb20gJ3ByaW1ldnVlL2FwaSc7CmltcG9ydCBDdXN0b21lclNlcnZpY2UgZnJvbSAnLi4vLi4vc2VydmljZS9DdXN0b21lclNlcnZpY2UnOwp2YXIgWU9VUl9GSUxURVIgPSAnWU9VUiBGSUxURVInOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGN1c3RvbWVyczogbnVsbCwKICAgICAgZmlsdGVyczogewogICAgICAgICduYW1lJzogewogICAgICAgICAgdmFsdWU6IG51bGwsCiAgICAgICAgICBtYXRjaE1vZGU6IFlPVVJfRklMVEVSCiAgICAgICAgfSwKICAgICAgICAnY291bnRyeS5uYW1lJzogewogICAgICAgICAgdmFsdWU6IG51bGwsCiAgICAgICAgICBtYXRjaE1vZGU6IEZpbHRlck1hdGNoTW9kZS5TVEFSVFNfV0lUSAogICAgICAgIH0KICAgICAgfSwKICAgICAgbWF0Y2hNb2RlT3B0aW9uczogW3sKICAgICAgICBsYWJlbDogJ1lvdXIgRXF1YWxzJywKICAgICAgICB2YWx1ZTogWU9VUl9GSUxURVIKICAgICAgfSwgewogICAgICAgIGxhYmVsOiAnU3RhcnRzIFdpdGgnLAogICAgICAgIHZhbHVlOiBGaWx0ZXJNYXRjaE1vZGUuU1RBUlRTX1dJVEgKICAgICAgfV0sCiAgICAgIGxvYWRpbmc6IHRydWUKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5jdXN0b21lclNlcnZpY2UgPSBuZXcgQ3VzdG9tZXJTZXJ2aWNlKCk7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB0aGlzLmN1c3RvbWVyU2VydmljZS5nZXRDdXN0b21lcnNMYXJnZSgpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgX3RoaXMuY3VzdG9tZXJzID0gZGF0YTsKICAgICAgX3RoaXMubG9hZGluZyA9IGZhbHNlOwogICAgfSk7CiAgICBGaWx0ZXJTZXJ2aWNlLnJlZ2lzdGVyKFlPVVJfRklMVEVSLCBmdW5jdGlvbiAodmFsdWUsIGZpbHRlcikgewogICAgICBpZiAoZmlsdGVyID09PSB1bmRlZmluZWQgfHwgZmlsdGVyID09PSBudWxsIHx8IGZpbHRlci50cmltKCkgPT09ICcnKSB7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0KCiAgICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHZhbHVlID09PSBudWxsKSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CgogICAgICByZXR1cm4gdmFsdWUudG9TdHJpbmcoKSA9PT0gZmlsdGVyLnRvU3RyaW5nKCk7CiAgICB9KTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgICdGaWx0ZXJTZXJ2aWNlRG9jJzogRmlsdGVyU2VydmljZURvYwogIH0KfTs="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/filterservice/FilterServiceDemo.vue"],"names":[],"mappings":";;;AAiDA,OAAO,gBAAP,MAA6B,oBAA7B;AACA,SAAQ,eAAR,EAAwB,aAAxB,QAA4C,cAA5C;AACA,OAAO,eAAP,MAA4B,+BAA5B;AAEA,IAAM,WAAU,GAAI,aAApB;AAEA,eAAe;AACX,EAAA,IADW,kBACJ;AACH,WAAO;AACH,MAAA,SAAS,EAAE,IADR;AAEH,MAAA,OAAO,EAAE;AACL,gBAAQ;AAAC,UAAA,KAAK,EAAE,IAAR;AAAc,UAAA,SAAS,EAAE;AAAzB,SADH;AAEL,wBAAgB;AAAC,UAAA,KAAK,EAAE,IAAR;AAAc,UAAA,SAAS,EAAE,eAAe,CAAC;AAAzC;AAFX,OAFN;AAMH,MAAA,gBAAgB,EAAE,CACd;AAAC,QAAA,KAAK,EAAE,aAAR;AAAuB,QAAA,KAAK,EAAE;AAA9B,OADc,EAEd;AAAC,QAAA,KAAK,EAAE,aAAR;AAAuB,QAAA,KAAK,EAAE,eAAe,CAAC;AAA9C,OAFc,CANf;AAUH,MAAA,OAAO,EAAE;AAVN,KAAP;AAYH,GAdU;AAeX,EAAA,OAfW,qBAeD;AACN,SAAK,eAAL,GAAuB,IAAI,eAAJ,EAAvB;AACH,GAjBU;AAkBX,EAAA,OAlBW,qBAkBD;AAAA;;AACN,SAAK,eAAL,CAAqB,iBAArB,GAAyC,IAAzC,CAA8C,UAAA,IAAG,EAAK;AAClD,MAAA,KAAI,CAAC,SAAL,GAAiB,IAAjB;AACA,MAAA,KAAI,CAAC,OAAL,GAAe,KAAf;AACH,KAHD;AAKA,IAAA,aAAa,CAAC,QAAd,CAAuB,WAAvB,EAAoC,UAAC,KAAD,EAAQ,MAAR,EAAmB;AACnD,UAAI,MAAK,KAAM,SAAX,IAAwB,MAAK,KAAM,IAAnC,IAA2C,MAAM,CAAC,IAAP,OAAkB,EAAjE,EAAqE;AACjE,eAAO,IAAP;AACJ;;AAEA,UAAI,KAAI,KAAM,SAAV,IAAuB,KAAI,KAAM,IAArC,EAA2C;AACvC,eAAO,KAAP;AACJ;;AAEA,aAAO,KAAK,CAAC,QAAN,OAAqB,MAAM,CAAC,QAAP,EAA5B;AACH,KAVD;AAWH,GAnCU;AAoCX,EAAA,UAAU,EAAE;AACR,wBAAoB;AADZ;AApCD,CAAf","sourcesContent":["<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>FilterService</h1>\n                <p>FilterService is a helper utility to filter collections against constraints.</p>\n            </div>\n            <AppDemoActions />\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card\">\n                <h5>Table Integration</h5>\n                <p>A custom equals filter that checks for exact case sensitive value is registered and defined as a match mode of a column filter.</p>\n\n                <DataTable :value=\"customers\" :paginator=\"true\" :rows=\"10\" responsiveLayout=\"scroll\"\n                    dataKey=\"id\" v-model:filters=\"filters\" filterDisplay=\"row\" :loading=\"loading\">\n                    <template #empty>\n                        No customers found.\n                    </template>\n                    <template #loading>\n                        Loading customers data. Please wait.\n                    </template>\n                    <Column field=\"name\" header=\"Name\" :filterMatchModeOptions=\"matchModeOptions\">\n                        <template #body=\"{data}\">\n                            {{data.name}}\n                        </template>\n                        <template #filter=\"{filterModel,filterCallback}\">\n                            <InputText type=\"text\" v-model=\"filterModel.value\" @input=\"filterCallback()\" class=\"p-column-filter\" :placeholder=\"`Search by name - ${filterModel.matchMode}`\"/>\n                        </template>\n                    </Column>\n                    <Column header=\"Country\" filterField=\"country.name\" :filterMatchModeOptions=\"matchModeOptions\">\n                        <template #body=\"{data}\">\n                            <img src=\"../../assets/images/flag_placeholder.png\" :class=\"'flag flag-' + data.country.code\" width=\"30\" />\n                            <span class=\"image-text\">{{data.country.name}}</span>\n                        </template>\n                        <template #filter=\"{filterModel,filterCallback}\">\n                            <InputText type=\"text\" v-model=\"filterModel.value\" @input=\"filterCallback()\" class=\"p-column-filter\" :placeholder=\"`Search by country - ${filterModel.matchMode}`\" />\n                        </template>\n                    </Column>\n                </DataTable>\n            </div>\n        </div>\n\n        <FilterServiceDoc />\n    </div>\n</template>\n\n<script>\nimport FilterServiceDoc from './FilterServiceDoc';\nimport {FilterMatchMode,FilterService} from 'primevue/api';\nimport CustomerService from '../../service/CustomerService';\n\nconst YOUR_FILTER = 'YOUR FILTER';\n\nexport default {\n    data() {\n        return {\n            customers: null,\n            filters: {\n                'name': {value: null, matchMode: YOUR_FILTER},\n                'country.name': {value: null, matchMode: FilterMatchMode.STARTS_WITH}\n            },\n            matchModeOptions: [\n                {label: 'Your Equals', value: YOUR_FILTER},\n                {label: 'Starts With', value: FilterMatchMode.STARTS_WITH}\n            ],\n            loading: true\n        }\n    },\n    created() {\n        this.customerService = new CustomerService();\n    },\n    mounted() {\n        this.customerService.getCustomersLarge().then(data => {\n            this.customers = data; \n            this.loading = false;\n        });\n\n        FilterService.register(YOUR_FILTER, (value, filter) => {\n            if (filter === undefined || filter === null || filter.trim() === '') {\n                return true;\n            }\n    \n            if (value === undefined || value === null) {\n                return false;\n            }\n            \n            return value.toString() === filter.toString();\n        });\n    },\n    components: {\n        'FilterServiceDoc': FilterServiceDoc\n    }\n}\n</script>"],"sourceRoot":""}]}