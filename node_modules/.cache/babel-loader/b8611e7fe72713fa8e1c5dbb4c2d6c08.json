{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/floatlabel/FloatLabelDemo.vue?vue&type=template&id=4d77b348&scoped=true","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/floatlabel/FloatLabelDemo.vue","mtime":1634589566266},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/floatlabel/FloatLabelDemo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>Float Label</h1>\n                <p>All input text components support floating labels.</p>\n            </div>\n            <AppDemoActions />\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card\">\n                <div class=\"p-fluid p-grid\">\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <InputText id=\"inputtext\" type=\"text\" v-model=\"value1\" />\n                            <label for=\"inputtext\">InputText</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label p-input-icon-left\">\n                            <i class=\"pi pi-search\" />\n                            <InputText id=\"inputtext-left\" type=\"text\" v-model=\"valueIconLeft\" />\n                            <label for=\"inputtext-left\">Left Icon</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                       <span class=\"p-float-label p-input-icon-right\">\n                            <i class=\"pi pi-search\" />\n                            <InputText id=\"inputtext-right\" type=\"text\" v-model=\"valueIconRight\" />\n                            <label for=\"inputtext-right\">Right Icon</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <AutoComplete v-model=\"value2\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\" />\n                            <label for=\"autocomplete\">AutoComplete</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <Calendar id=\"calendar\" v-model=\"value3\" />\n                            <label for=\"calendar\">Calendar</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <Chips id=\"chips\" v-model=\"value4\" />\n                            <label for=\"chips\">Chips</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <InputMask id=\"inputmask\" v-model=\"value5\" mask=\"99/99/9999\" slotChar=\"mm/dd/yyyy\" />\n                            <label for=\"inputmask\">InputMask</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <InputNumber id=\"inputnumber\" v-model=\"value6\" />\n                            <label for=\"inputnumber\">InputNumber</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <div class=\"p-inputgroup\">\n                            <span class=\"p-inputgroup-addon\">\n                                <i class=\"pi pi-user\"></i>\n                            </span>\n                            <span class=\"p-float-label\">\n                                <InputText id=\"inputgroup\" type=\"text\" v-model=\"value7\" />\n                                <label for=\"inputgroup\">InputGroup</label>\n                            </span>\n                        </div>\n                    </div>\n                     <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <CascadeSelect id=\"cascadeSelect\" v-model=\"selectedCity\" :options=\"cascadeCountries\" optionLabel=\"cname\" optionGroupLabel=\"name\"\n                                :optionGroupChildren=\"['states', 'cities']\" />\n                            <label for=\"multiselect\">CascadeSelect</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <Dropdown id=\"dropdown\" v-model=\"value8\" :options=\"cities\" optionLabel=\"name\" />\n                            <label for=\"dropdown\">Dropdown</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <MultiSelect id=\"multiselect\" v-model=\"value9\" :options=\"cities\" optionLabel=\"name\" />\n                            <label for=\"multiselect\">MultiSelect</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <TreeSelect v-model=\"selectedNode\" :options=\"nodes\"></TreeSelect>\n                            <label for=\"treeselect\">TreeSelect</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <Password id=\"password\" v-model=\"value11\" />\n                            <label for=\"password\">Password</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <Textarea id=\"textarea\" v-model=\"value10\" rows=\"3\" />\n                            <label for=\"textarea\">Textarea</label>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <AppDoc name=\"FloatLabelDemo\" :sources=\"sources\" :service=\"['CountryService', 'NodeService']\" :data=\"['countries', 'treenodes']\" github=\"floatlabel/FloatLabelDemo.vue\" />\n    </div>\n</template>\n\n<script>\nimport CountryService from '../../service/CountryService';\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            countries: null,\n            filteredCountries: null,\n            cities: [\n                {name: 'New York', code: 'NY'},\n                {name: 'Rome', code: 'RM'},\n                {name: 'London', code: 'LDN'},\n                {name: 'Istanbul', code: 'IST'},\n                {name: 'Paris', code: 'PRS'}\n            ],\n            value1: null,\n            value2: null,\n            value3: null,\n            value4: null,\n            value5: null,\n            value6: null,\n            value7: null,\n            value8: null,\n            value9: null,\n            value10: null,\n            value11: null,\n            valueIconLeft: null,\n            valueIconRight: null,\n            selectedCity: null,\n            nodes: null,\n            selectedNode: null,\n            cascadeCountries: [\n                {\n                    name: 'Australia',\n                    code: 'AU',\n                    states: [\n                        {\n                            name: 'New South Wales',\n                            cities: [\n                                {cname: 'Sydney', code: 'A-SY'},\n                                {cname: 'Newcastle', code: 'A-NE'},\n                                {cname: 'Wollongong', code: 'A-WO'}\n                            ]\n                        },\n                        {\n                            name: 'Queensland',\n                            cities: [\n                                {cname: 'Brisbane', code: 'A-BR'},\n                                {cname: 'Townsville', code: 'A-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'Canada', \n                    code: 'CA',\n                    states: [\n                        {\n                            name: 'Quebec',\n                            cities: [\n                                {cname: 'Montreal', code: 'C-MO'},\n                                {cname: 'Quebec City', code: 'C-QU'}\n                            ]\n                        },\n                        {\n                            name: 'Ontario',\n                            cities: [\n                                {cname: 'Ottawa', code: 'C-OT'},\n                                {cname: 'Toronto', code: 'C-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'United States',\n                    code: 'US',\n                    states: [\n                        {\n                            name: 'California',\n                            cities: [\n                                {cname: 'Los Angeles', code: 'US-LA'},\n                                {cname: 'San Diego', code: 'US-SD'},\n                                {cname: 'San Francisco', code: 'US-SF'}\n                            ]\n                        },\n                        {\n                            name: 'Florida',\n                            cities: [\n                                {cname: 'Jacksonville', code: 'US-JA'},\n                                {cname: 'Miami', code: 'US-MI'},\n                                {cname: 'Tampa', code: 'US-TA'},\n                                {cname: 'Orlando', code: 'US-OR'}\n                            ]\n                        },\n                        {\n                            name: 'Texas',\n                            cities: [\n                                {cname: 'Austin', code: 'US-AU'},\n                                {cname: 'Dallas', code: 'US-DA'},\n                                {cname: 'Houston', code: 'US-HO'}\n                            ]\n                        }\n                    ]\n                }\n            ],\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div>\n        <div class=\"card\">\n            <div class=\"p-fluid p-grid\">\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <InputText id=\"inputtext\" type=\"text\" v-model=\"value1\" />\n                        <label for=\"inputtext\">InputText</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label p-input-icon-left\">\n                        <i class=\"pi pi-search\" />\n                        <InputText id=\"inputtext-left\" type=\"text\" v-model=\"valueIconLeft\" />\n                        <label for=\"inputtext-left\">Left Icon</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                   <span class=\"p-float-label p-input-icon-right\">\n                        <i class=\"pi pi-search\" />\n                        <InputText id=\"inputtext-right\" type=\"text\" v-model=\"valueIconRight\" />\n                        <label for=\"inputtext-right\">Right Icon</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <AutoComplete v-model=\"value2\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\" />\n                        <label for=\"autocomplete\">AutoComplete</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Calendar id=\"calendar\" v-model=\"value3\" />\n                        <label for=\"calendar\">Calendar</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Chips id=\"chips\" v-model=\"value4\" />\n                        <label for=\"chips\">Chips</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <InputMask id=\"inputmask\" v-model=\"value5\" mask=\"99/99/9999\" slotChar=\"mm/dd/yyyy\" />\n                        <label for=\"inputmask\">InputMask</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <InputNumber id=\"inputnumber\" v-model=\"value6\" />\n                        <label for=\"inputnumber\">InputNumber</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <div class=\"p-inputgroup\">\n                        <span class=\"p-inputgroup-addon\">\n                            <i class=\"pi pi-user\"></i>\n                        </span>\n                        <span class=\"p-float-label\">\n                            <InputText id=\"inputgroup\" type=\"text\" v-model=\"value7\" />\n                            <label for=\"inputgroup\">InputGroup</label>\n                        </span>\n                    </div>\n                </div>\n                 <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <CascadeSelect id=\"cascadeSelect\" v-model=\"selectedCity\" :options=\"cascadeCountries\" optionLabel=\"cname\" optionGroupLabel=\"name\"\n                            :optionGroupChildren=\"['states', 'cities']\" />\n                        <label for=\"multiselect\">CascadeSelect</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Dropdown id=\"dropdown\" v-model=\"value8\" :options=\"cities\" optionLabel=\"name\" />\n                        <label for=\"dropdown\">Dropdown</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <MultiSelect id=\"multiselect\" v-model=\"value9\" :options=\"cities\" optionLabel=\"name\" />\n                        <label for=\"multiselect\">MultiSelect</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <TreeSelect v-model=\"selectedNode\" :options=\"nodes\"></TreeSelect>\n                        <label for=\"treeselect\">TreeSelect</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Password id=\"password\" v-model=\"value11\" />\n                        <label for=\"password\">Password</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Textarea id=\"textarea\" v-model=\"value10\" rows=\"3\" />\n                        <label for=\"textarea\">Textarea</label>\n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>                    \n</template>\n\n<script>\nimport CountryService from './service/CountryService';\nimport NodeService from './service/NodeService';\n\nexport default {\n    data() {\n        return {\n            countries: null,\n            filteredCountries: null,\n            cities: [\n                {name: 'New York', code: 'NY'},\n                {name: 'Rome', code: 'RM'},\n                {name: 'London', code: 'LDN'},\n                {name: 'Istanbul', code: 'IST'},\n                {name: 'Paris', code: 'PRS'}\n            ],\n            value1: null,\n            value2: null,\n            value3: null,\n            value4: null,\n            value5: null,\n            value6: null,\n            value7: null,\n            value8: null,\n            value9: null,\n            value10: null,\n            value11: null,\n            valueIconLeft: null,\n            valueIconRight: null,\n            selectedCity: null,\n            nodes: null,\n            selectedNode: null,\n            cascadeCountries: [\n                {\n                    name: 'Australia',\n                    code: 'AU',\n                    states: [\n                        {\n                            name: 'New South Wales',\n                            cities: [\n                                {cname: 'Sydney', code: 'A-SY'},\n                                {cname: 'Newcastle', code: 'A-NE'},\n                                {cname: 'Wollongong', code: 'A-WO'}\n                            ]\n                        },\n                        {\n                            name: 'Queensland',\n                            cities: [\n                                {cname: 'Brisbane', code: 'A-BR'},\n                                {cname: 'Townsville', code: 'A-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'Canada', \n                    code: 'CA',\n                    states: [\n                        {\n                            name: 'Quebec',\n                            cities: [\n                                {cname: 'Montreal', code: 'C-MO'},\n                                {cname: 'Quebec City', code: 'C-QU'}\n                            ]\n                        },\n                        {\n                            name: 'Ontario',\n                            cities: [\n                                {cname: 'Ottawa', code: 'C-OT'},\n                                {cname: 'Toronto', code: 'C-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'United States',\n                    code: 'US',\n                    states: [\n                        {\n                            name: 'California',\n                            cities: [\n                                {cname: 'Los Angeles', code: 'US-LA'},\n                                {cname: 'San Diego', code: 'US-SD'},\n                                {cname: 'San Francisco', code: 'US-SF'}\n                            ]\n                        },\n                        {\n                            name: 'Florida',\n                            cities: [\n                                {cname: 'Jacksonville', code: 'US-JA'},\n                                {cname: 'Miami', code: 'US-MI'},\n                                {cname: 'Tampa', code: 'US-TA'},\n                                {cname: 'Orlando', code: 'US-OR'}\n                            ]\n                        },\n                        {\n                            name: 'Texas',\n                            cities: [\n                                {cname: 'Austin', code: 'US-AU'},\n                                {cname: 'Dallas', code: 'US-DA'},\n                                {cname: 'Houston', code: 'US-HO'}\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    countryService: null,\n    nodeService: null,\n    created() {\n        this.countryService = new CountryService();\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.countryService.getCountries().then(data => this.countries = data);\n        this.nodeService.getTreeNodes().then(data => this.nodes = data);\n    },\n    methods: {\n        searchCountry(event) {\n            setTimeout(() => {\n                if (!event.query.trim().length) {\n                    this.filteredCountries = [...this.countries];\n                }\n                else {\n                    this.filteredCountries = this.countries.filter((country) => {\n                        return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n                    });\n                }\n            }, 250);\n        }\n    }\n}\n<\\\\/script>\n`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div>\n        <div class=\"card\">\n            <div class=\"p-fluid p-grid\">\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <InputText id=\"inputtext\" type=\"text\" v-model=\"value1\" />\n                        <label for=\"inputtext\">InputText</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label p-input-icon-left\">\n                        <i class=\"pi pi-search\" />\n                        <InputText id=\"inputtext-left\" type=\"text\" v-model=\"valueIconLeft\" />\n                        <label for=\"inputtext-left\">Left Icon</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                   <span class=\"p-float-label p-input-icon-right\">\n                        <i class=\"pi pi-search\" />\n                        <InputText id=\"inputtext-right\" type=\"text\" v-model=\"valueIconRight\" />\n                        <label for=\"inputtext-right\">Right Icon</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <AutoComplete v-model=\"value2\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\" />\n                        <label for=\"autocomplete\">AutoComplete</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Calendar id=\"calendar\" v-model=\"value3\" />\n                        <label for=\"calendar\">Calendar</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Chips id=\"chips\" v-model=\"value4\" />\n                        <label for=\"chips\">Chips</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <InputMask id=\"inputmask\" v-model=\"value5\" mask=\"99/99/9999\" slotChar=\"mm/dd/yyyy\" />\n                        <label for=\"inputmask\">InputMask</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <InputNumber id=\"inputnumber\" v-model=\"value6\" />\n                        <label for=\"inputnumber\">InputNumber</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <div class=\"p-inputgroup\">\n                        <span class=\"p-inputgroup-addon\">\n                            <i class=\"pi pi-user\"></i>\n                        </span>\n                        <span class=\"p-float-label\">\n                            <InputText id=\"inputgroup\" type=\"text\" v-model=\"value7\" />\n                            <label for=\"inputgroup\">InputGroup</label>\n                        </span>\n                    </div>\n                </div>\n                 <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <CascadeSelect id=\"cascadeSelect\" v-model=\"selectedCity\" :options=\"cascadeCountries\" optionLabel=\"cname\" optionGroupLabel=\"name\"\n                            :optionGroupChildren=\"['states', 'cities']\" />\n                        <label for=\"multiselect\">CascadeSelect</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Dropdown id=\"dropdown\" v-model=\"value8\" :options=\"cities\" optionLabel=\"name\" />\n                        <label for=\"dropdown\">Dropdown</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <MultiSelect id=\"multiselect\" v-model=\"value9\" :options=\"cities\" optionLabel=\"name\" />\n                        <label for=\"multiselect\">MultiSelect</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <TreeSelect v-model=\"selectedNode\" :options=\"nodes\"></TreeSelect>\n                        <label for=\"treeselect\">TreeSelect</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Password id=\"password\" v-model=\"value11\" />\n                        <label for=\"password\">Password</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Textarea id=\"textarea\" v-model=\"value10\" rows=\"3\" />\n                        <label for=\"textarea\">Textarea</label>\n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>                    \n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport CountryService from './service/CountryService';\nimport NodeService from './service/NodeService';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            countryService.value.getCountries().then(data => countries.value = data);\n            nodeService.value.getTreeNodes().then(data => nodes.value = data);\n        })\n        const countryService = ref(new CountryService());\n        const nodeService = ref(new NodeService());\n        const countries = ref();\n        const filteredCountries = ref();\n        const cities = ref([\n            {name: 'New York', code: 'NY'},\n            {name: 'Rome', code: 'RM'},\n            {name: 'London', code: 'LDN'},\n            {name: 'Istanbul', code: 'IST'},\n            {name: 'Paris', code: 'PRS'}\n        ]);\n        const value1 = ref();\n        const value2 = ref();\n        const value3 = ref();\n        const value4 = ref();\n        const value5 = ref();\n        const value6 = ref();\n        const value7 = ref();\n        const value8 = ref();\n        const value9 = ref();\n        const value10 = ref();\n        const value11 = ref();\n        const valueIconLeft = ref();\n        const valueIconRight = ref();\n        const selectedCity = ref();\n        const selectedNode = ref();\n        const nodes = ref();\n        const cascadeCountries = ref([\n            {\n                name: 'Australia',\n                code: 'AU',\n                states: [\n                    {\n                        name: 'New South Wales',\n                        cities: [\n                            {cname: 'Sydney', code: 'A-SY'},\n                            {cname: 'Newcastle', code: 'A-NE'},\n                            {cname: 'Wollongong', code: 'A-WO'}\n                        ]\n                    },\n                    {\n                        name: 'Queensland',\n                        cities: [\n                            {cname: 'Brisbane', code: 'A-BR'},\n                            {cname: 'Townsville', code: 'A-TO'}\n                        ]\n                    },\n                    \n                ]\n            },\n            {\n                name: 'Canada', \n                code: 'CA',\n                states: [\n                    {\n                        name: 'Quebec',\n                        cities: [\n                            {cname: 'Montreal', code: 'C-MO'},\n                            {cname: 'Quebec City', code: 'C-QU'}\n                        ]\n                    },\n                    {\n                        name: 'Ontario',\n                        cities: [\n                            {cname: 'Ottawa', code: 'C-OT'},\n                            {cname: 'Toronto', code: 'C-TO'}\n                        ]\n                    },\n                    \n                ]\n            },\n            {\n                name: 'United States',\n                code: 'US',\n                states: [\n                    {\n                        name: 'California',\n                        cities: [\n                            {cname: 'Los Angeles', code: 'US-LA'},\n                            {cname: 'San Diego', code: 'US-SD'},\n                            {cname: 'San Francisco', code: 'US-SF'}\n                        ]\n                    },\n                    {\n                        name: 'Florida',\n                        cities: [\n                            {cname: 'Jacksonville', code: 'US-JA'},\n                            {cname: 'Miami', code: 'US-MI'},\n                            {cname: 'Tampa', code: 'US-TA'},\n                            {cname: 'Orlando', code: 'US-OR'}\n                        ]\n                    },\n                    {\n                        name: 'Texas',\n                            cities: [\n                                {cname: 'Austin', code: 'US-AU'},\n                                {cname: 'Dallas', code: 'US-DA'},\n                                {cname: 'Houston', code: 'US-HO'}\n                            ]\n                        }\n                    ]\n                }\n            ]);\n\n        const searchCountry = (event) => {\n            setTimeout(() => {\n                if (!event.query.trim().length) {\n                    filteredCountries.value = [...countries.value];\n                }\n                else {\n                    filteredCountries.value = countries.value.filter((country) => {\n                        return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n                    });\n                }\n            }, 250);\n        };\n\n        return { countryService, countries, filteredCountries, cities, value1, value2, value3, value4, value5, value6, \n            value7, value8, value9, value10, value11, valueIconLeft, valueIconRight, selectedCity, cascadeCountries, searchCountry,\n            nodes, selectedNode }\n    }\n}\n<\\\\/script>\n`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/autocomplete/autocomplete.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/calendar/calendar.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/chips/chips.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/inputmask/inputmask.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/cascadeselect/cascadeselect.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/multiselect/multiselect.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/treeselect/treeselect.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/password/password.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/textarea/textarea.min.js\"><\\\\/script>\n        <script src=\"./CountryService.js\"><\\\\/script>\n        <script src=\"./NodeService.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <div class=\"card\">\n                <div class=\"p-fluid p-grid\">\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-inputtext id=\"inputtext\" type=\"text\" v-model=\"value1\"></p-inputtext>\n                            <label for=\"inputtext\">InputText</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label p-input-icon-left\">\n                            <i class=\"pi pi-search\"></i>\n                            <p-inputtext id=\"inputtext-left\" type=\"text\" v-model=\"valueIconLeft\"></p-inputtext>\n                            <label for=\"inputtext-left\">Left Icon</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label p-input-icon-right\">\n                            <i class=\"pi pi-search\"></i>\n                            <p-inputtext id=\"inputtext-right\" type=\"text\" v-model=\"valueIconRight\"></p-inputtext>\n                            <label for=\"inputtext-right\">Right Icon</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-autocomplete v-model=\"value2\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\"></p-autocomplete>\n                            <label for=\"autocomplete\">AutoComplete</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-calendar id=\"calendar\" v-model=\"value3\"></p-calendar>\n                            <label for=\"calendar\">Calendar</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-chips id=\"chips\" v-model=\"value4\"></p-chips>\n                            <label for=\"chips\">Chips</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-inputmask id=\"inputmask\" v-model=\"value5\" mask=\"99/99/9999\" slot-char=\"mm/dd/yyyy\"></p-inputmask>\n                            <label for=\"inputmask\">InputMask</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-inputnumber id=\"inputnumber\" v-model=\"value6\"></p-inputnumber>\n                            <label for=\"inputnumber\">InputNumber</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <div class=\"p-inputgroup\">\n                            <span class=\"p-inputgroup-addon\">\n                                <i class=\"pi pi-user\"></i>\n                            </span>\n                            <span class=\"p-float-label\">\n                                <p-inputtext id=\"inputgroup\" type=\"text\" v-model=\"value7\" />\n                                <label for=\"inputgroup\">InputGroup</label>\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-cascadeselect id=\"cascadeSelect\" v-model=\"selectedCity\" :options=\"cascadeCountries\" option-label=\"cname\" option-group-label=\"name\"\n                                :option-group-children=\"['states', 'cities']\"></p-cascadeselect>\n                            <label for=\"multiselect\">CascadeSelect</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-dropdown id=\"dropdown\" v-model=\"value8\" :options=\"cities\" option-label=\"name\"></p-dropdown>\n                            <label for=\"dropdown\">Dropdown</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-multiselect id=\"multiselect\" v-model=\"value9\" :options=\"cities\" option-label=\"name\">\n                            <label for=\"multiselect\">MultiSelect</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-treeselect v-model=\"selectedNode\" :options=\"nodes\"></p-treeselect>\n                            <label for=\"treeselect\">TreeSelect</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-password id=\"password\" v-model=\"value11\"></p-password>\n                            <label for=\"password\">Password</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-textarea id=\"textarea\" v-model=\"value10\" rows=\"3\"></p-textarea>\n                            <label for=\"textarea\">Textarea</label>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref, onMounted } = Vue;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    countryService.value.getCountries().then(data => countries.value = data);\n                    nodeService.value.getTreeNodes().then(data => nodes.value = data);\n                })\n                const countryService = ref(new CountryService());\n                const nodeService = ref(new NodeService());\n                const countries = ref();\n                const filteredCountries = ref();\n                const cities = ref([\n                    {name: 'New York', code: 'NY'},\n                    {name: 'Rome', code: 'RM'},\n                    {name: 'London', code: 'LDN'},\n                    {name: 'Istanbul', code: 'IST'},\n                    {name: 'Paris', code: 'PRS'}\n                ]);\n                const value1 = ref();\n                const value2 = ref();\n                const value3 = ref();\n                const value4 = ref();\n                const value5 = ref();\n                const value6 = ref();\n                const value7 = ref();\n                const value8 = ref();\n                const value9 = ref();\n                const value10 = ref();\n                const value11 = ref();\n                const valueIconLeft = ref();\n                const valueIconRight = ref();\n                const selectedCity = ref();\n                const selectedNode = ref();\n                const nodes = ref();\n            const cascadeCountries = ref([\n                {\n                    name: 'Australia',\n                    code: 'AU',\n                    states: [\n                        {\n                            name: 'New South Wales',\n                            cities: [\n                                {cname: 'Sydney', code: 'A-SY'},\n                                {cname: 'Newcastle', code: 'A-NE'},\n                                {cname: 'Wollongong', code: 'A-WO'}\n                            ]\n                        },\n                        {\n                            name: 'Queensland',\n                            cities: [\n                                {cname: 'Brisbane', code: 'A-BR'},\n                                {cname: 'Townsville', code: 'A-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'Canada', \n                    code: 'CA',\n                    states: [\n                        {\n                            name: 'Quebec',\n                            cities: [\n                                {cname: 'Montreal', code: 'C-MO'},\n                                {cname: 'Quebec City', code: 'C-QU'}\n                            ]\n                        },\n                        {\n                            name: 'Ontario',\n                            cities: [\n                                {cname: 'Ottawa', code: 'C-OT'},\n                                {cname: 'Toronto', code: 'C-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'United States',\n                    code: 'US',\n                    states: [\n                        {\n                            name: 'California',\n                            cities: [\n                                {cname: 'Los Angeles', code: 'US-LA'},\n                                {cname: 'San Diego', code: 'US-SD'},\n                                {cname: 'San Francisco', code: 'US-SF'}\n                            ]\n                        },\n                        {\n                            name: 'Florida',\n                            cities: [\n                                {cname: 'Jacksonville', code: 'US-JA'},\n                                {cname: 'Miami', code: 'US-MI'},\n                                {cname: 'Tampa', code: 'US-TA'},\n                                {cname: 'Orlando', code: 'US-OR'}\n                            ]\n                        },\n                        {\n                            name: 'Texas',\n                                cities: [\n                                    {cname: 'Austin', code: 'US-AU'},\n                                    {cname: 'Dallas', code: 'US-DA'},\n                                    {cname: 'Houston', code: 'US-HO'}\n                                ]\n                            }\n                        ]\n                    }\n                ]);\n\n                const searchCountry = (event) => {\n                    setTimeout(() => {\n                        if (!event.query.trim().length) {\n                            filteredCountries.value = [...countries.value];\n                        }\n                        else {\n                            filteredCountries.value = countries.value.filter((country) => {\n                                return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n                            });\n                        }\n                    }, 250);\n                };\n\n                return { countryService, countries, filteredCountries, cities, value1, value2, value3, value4, value5, value6, \n                    value7, value8, value9, value10, value11, valueIconLeft, valueIconRight, selectedCity, cascadeCountries, searchCountry,\n                    nodes, selectedNode }\n            },\n            components: {\n                \"p-inputtext\": primevue.inputtext,\n                \"p-inputnumber\": primevue.inputnumber,\n                \"p-autocomplete\": primevue.autocomplete,\n                \"p-calendar\": primevue.calendar,\n                \"p-chips\": primevue.chips,\n                \"p-inputmask\": primevue.inputmask,\n                \"p-cascadeselect\": primevue.cascadeselect,\n                \"p-dropdown\": primevue.dropdown,\n                \"p-multiselect\": primevue.multiselect,\n                \"p-treeselect\": primevue.treeselect,\n                \"p-password\": primevue.password,\n                \"p-textarea\": primevue.textarea\n            }\n        };\n        \n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\\\/script>\n`\n                }\n            }\n        }\n    },\n    countryService: null,\n    nodeService: null,\n    created() {\n        this.countryService = new CountryService();\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.countryService.getCountries().then(data => this.countries = data);\n        this.nodeService.getTreeNodes().then(data => this.nodes = data);\n    },\n    methods: {\n        searchCountry(event) {\n            setTimeout(() => {\n                if (!event.query.trim().length) {\n                    this.filteredCountries = [...this.countries];\n                }\n                else {\n                    this.filteredCountries = this.countries.filter((country) => {\n                        return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n                    });\n                }\n            }, 250);\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\ntextarea {\n    resize: none;\n}\n</style>"],"sourceRoot":""}]}