{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTablePaginatorDemo.vue?vue&type=template&id=417f6875","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTablePaginatorDemo.vue","mtime":1634589566260},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBjcmVhdGVUZXh0Vk5vZGUgYXMgX2NyZWF0ZVRleHRWTm9kZSwgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgd2l0aEN0eCBhcyBfd2l0aEN0eCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jayB9IGZyb20gInZ1ZSI7CnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAiY29udGVudC1zZWN0aW9uIGludHJvZHVjdGlvbiIKfTsKCnZhciBfaG9pc3RlZF8yID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiZGl2IiwgewogIGNsYXNzOiAiZmVhdHVyZS1pbnRybyIKfSwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImgxIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCJEYXRhVGFibGUgIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInNwYW4iLCBudWxsLCAiUGFnaW5hdG9yIildKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgicCIsIG51bGwsICJQYWdpbmF0aW9uIGlzIGVuYWJsZWQgYnkgc2V0dGluZyBwYWdpbmF0b3IgcHJvcGVydHkgdG8gdHJ1ZSBhbmQgZGVmaW5pbmcgdGhlIHJvd3MgYXR0cmlidXRlIGFzIHRoZSBudW1iZXIgb2Ygcm93cyBwZXIgcGFnZS4iKV0sIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8zID0gewogIGNsYXNzOiAiY29udGVudC1zZWN0aW9uIGltcGxlbWVudGF0aW9uIgp9Owp2YXIgX2hvaXN0ZWRfNCA9IHsKICBjbGFzczogImNhcmQiCn07CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF9jb21wb25lbnRfQXBwRGVtb0FjdGlvbnMgPSBfcmVzb2x2ZUNvbXBvbmVudCgiQXBwRGVtb0FjdGlvbnMiKTsKCiAgdmFyIF9jb21wb25lbnRfQ29sdW1uID0gX3Jlc29sdmVDb21wb25lbnQoIkNvbHVtbiIpOwoKICB2YXIgX2NvbXBvbmVudF9CdXR0b24gPSBfcmVzb2x2ZUNvbXBvbmVudCgiQnV0dG9uIik7CgogIHZhciBfY29tcG9uZW50X0RhdGFUYWJsZSA9IF9yZXNvbHZlQ29tcG9uZW50KCJEYXRhVGFibGUiKTsKCiAgdmFyIF9jb21wb25lbnRfQXBwRG9jID0gX3Jlc29sdmVDb21wb25lbnQoIkFwcERvYyIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImRpdiIsIG51bGwsIFtfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzEsIFtfaG9pc3RlZF8yLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9BcHBEZW1vQWN0aW9ucyldKSwgX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF8zLCBbX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF80LCBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfRGF0YVRhYmxlLCB7CiAgICB2YWx1ZTogJGRhdGEuY3VzdG9tZXJzLAogICAgcGFnaW5hdG9yOiB0cnVlLAogICAgcm93czogMTAsCiAgICBwYWdpbmF0b3JUZW1wbGF0ZTogIkN1cnJlbnRQYWdlUmVwb3J0IEZpcnN0UGFnZUxpbmsgUHJldlBhZ2VMaW5rIFBhZ2VMaW5rcyBOZXh0UGFnZUxpbmsgTGFzdFBhZ2VMaW5rIFJvd3NQZXJQYWdlRHJvcGRvd24iLAogICAgcm93c1BlclBhZ2VPcHRpb25zOiBbMTAsIDIwLCA1MF0sCiAgICByZXNwb25zaXZlTGF5b3V0OiAic2Nyb2xsIiwKICAgIGN1cnJlbnRQYWdlUmVwb3J0VGVtcGxhdGU6ICJTaG93aW5nIHtmaXJzdH0gdG8ge2xhc3R9IG9mIHt0b3RhbFJlY29yZHN9IgogIH0sIHsKICAgIHBhZ2luYXRvckxlZnQ6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9CdXR0b24sIHsKICAgICAgICB0eXBlOiAiYnV0dG9uIiwKICAgICAgICBpY29uOiAicGkgcGktcmVmcmVzaCIsCiAgICAgICAgY2xhc3M6ICJwLWJ1dHRvbi10ZXh0IgogICAgICB9KV07CiAgICB9KSwKICAgIHBhZ2luYXRvclJpZ2h0OiBfd2l0aEN0eChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfQnV0dG9uLCB7CiAgICAgICAgdHlwZTogImJ1dHRvbiIsCiAgICAgICAgaWNvbjogInBpIHBpLWNsb3VkIiwKICAgICAgICBjbGFzczogInAtYnV0dG9uLXRleHQiCiAgICAgIH0pXTsKICAgIH0pLAogICAgZGVmYXVsdDogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gW19jcmVhdGVWTm9kZShfY29tcG9uZW50X0NvbHVtbiwgewogICAgICAgIGZpZWxkOiAibmFtZSIsCiAgICAgICAgaGVhZGVyOiAiTmFtZSIKICAgICAgfSksIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X0NvbHVtbiwgewogICAgICAgIGZpZWxkOiAiY291bnRyeS5uYW1lIiwKICAgICAgICBoZWFkZXI6ICJDb3VudHJ5IgogICAgICB9KSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfQ29sdW1uLCB7CiAgICAgICAgZmllbGQ6ICJjb21wYW55IiwKICAgICAgICBoZWFkZXI6ICJDb21wYW55IgogICAgICB9KSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfQ29sdW1uLCB7CiAgICAgICAgZmllbGQ6ICJyZXByZXNlbnRhdGl2ZS5uYW1lIiwKICAgICAgICBoZWFkZXI6ICJSZXByZXNlbnRhdGl2ZSIKICAgICAgfSldOwogICAgfSksCiAgICBfOiAxCiAgICAvKiBTVEFCTEUgKi8KCiAgfSwgOAogIC8qIFBST1BTICovCiAgLCBbInZhbHVlIl0pXSldKSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfQXBwRG9jLCB7CiAgICBuYW1lOiAiRGF0YVRhYmxlUGFnaW5hdG9yRGVtbyIsCiAgICBzb3VyY2VzOiAkZGF0YS5zb3VyY2VzLAogICAgc2VydmljZTogWydDdXN0b21lclNlcnZpY2UnXSwKICAgIGRhdGE6IFsnY3VzdG9tZXJzLWxhcmdlJ10sCiAgICBnaXRodWI6ICJkYXRhdGFibGUvRGF0YVRhYmxlUGFnaW5hdG9yRGVtby52dWUiCiAgfSwgbnVsbCwgOAogIC8qIFBST1BTICovCiAgLCBbInNvdXJjZXMiXSldKTsKfQ=="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTablePaginatorDemo.vue"],"names":[],"mappings":";;AAEa,EAAA,KAAK,EAAC;;;8BAChB,YAAA,CAGM,KAHN,EAGM;AAHD,EAAA,KAAK,EAAC;AAGL,CAHN,EAA0B,C,aACzB,YAAA,CAAyC,IAAzC,EAAyC,IAAzC,EAAyC,C,8BAArC,Y,CAAqC,E,aAA3B,YAAA,CAAsB,MAAtB,EAAsB,IAAtB,EAAM,WAAN,CAA2B,CAAzC,CADyB,E,aAEzB,YAAA,CAAkI,GAAlI,EAAkI,IAAlI,EAAG,6HAAH,CAFyB,CAA1B,E;;AAAA,C;;;AAOI,EAAA,KAAK,EAAC;;;AACI,EAAA,KAAK,EAAC;;;;;;;;;;;;;uBAVtB,YAAA,CA+BM,KA/BN,EA+BM,IA/BN,EA+BM,CA9BC,YAAA,CAMA,KANA,EAAA,UAAA,EAMA,CALL,UAKK,EADI,YAAA,CAAkB,yBAAlB,CACJ,CANA,CA8BD,EAtBL,YAAA,CAkBM,KAlBN,EAAA,UAAA,EAkBM,CAjBI,YAAA,CAgBM,KAhBN,EAAA,UAAA,EAgBM,CAfF,YAAA,CAcY,oBAdZ,EAcY;AAdA,IAAA,KAAK,EAAE,KAAA,CAAA,SAcP;AAdmB,IAAA,SAAS,EAAE,IAc9B;AAdqC,IAAA,IAAI,EAAE,EAc3C;AAbR,IAAA,iBAAiB,EAAC,sGAaV;AAZP,IAAA,kBAAkB,EAAE,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAYb;AAZyB,IAAA,gBAAgB,EAAC,QAY1C;AAXR,IAAA,yBAAyB,EAAC;AAWlB,GAdZ,E;AAQe,IAAA,aAAa,EAAA,QAAA,CACpB;AAAA,aAAmE,CAAnE,YAAA,CAAmE,iBAAnE,EAAmE;AAA3D,QAAA,IAAI,EAAC,QAAsD;AAA7C,QAAA,IAAI,EAAC,eAAwC;AAAxB,QAAA,KAAK,EAAC;AAAkB,OAAnE,CAAmE,CAAnE;AAAA,KADoB,C;AAGb,IAAA,cAAc,EAAA,QAAA,CACrB;AAAA,aAAiE,CAAjE,YAAA,CAAiE,iBAAjE,EAAiE;AAAzD,QAAA,IAAI,EAAC,QAAoD;AAA3C,QAAA,IAAI,EAAC,aAAsC;AAAxB,QAAA,KAAK,EAAC;AAAkB,OAAjE,CAAiE,CAAjE;AAAA,KADqB,C;sBAPzB;AAAA,aAA4C,CAA5C,YAAA,CAA4C,iBAA5C,EAA4C;AAApC,QAAA,KAAK,EAAC,MAA8B;AAAvB,QAAA,MAAM,EAAC;AAAgB,OAA5C,CAA4C,EAC5C,YAAA,CAAuD,iBAAvD,EAAuD;AAA/C,QAAA,KAAK,EAAC,cAAyC;AAA1B,QAAA,MAAM,EAAC;AAAmB,OAAvD,CAD4C,EAE5C,YAAA,CAAkD,iBAAlD,EAAkD;AAA1C,QAAA,KAAK,EAAC,SAAoC;AAA1B,QAAA,MAAM,EAAC;AAAmB,OAAlD,CAF4C,EAG5C,YAAA,CAAqE,iBAArE,EAAqE;AAA7D,QAAA,KAAK,EAAC,qBAAuD;AAAjC,QAAA,MAAM,EAAC;AAA0B,OAArE,CAH4C,CAA5C;AAAA,K;;;;GAJJ,E;;AAAA,I,SAAA,CAeE,CAhBN,CAiBJ,CAlBN,CAsBK,EAFC,YAAA,CAAoK,iBAApK,EAAoK;AAA5J,IAAA,IAAI,EAAC,wBAAuJ;AAA7H,IAAA,OAAO,EAAE,KAAA,CAAA,OAAoH;AAA1G,IAAA,OAAO,EAAE,CAAA,iBAAA,CAAiG;AAA3E,IAAA,IAAI,EAAE,CAAA,iBAAA,CAAqE;AAAhD,IAAA,MAAM,EAAC;AAAyC,GAApK,E,IAAA,E;;AAAA,I,WAAA,CAED,CA/BN,C","sourcesContent":["<template>\n\t<div>\n        <div class=\"content-section introduction\">\n\t\t\t<div class=\"feature-intro\">\n\t\t\t\t<h1>DataTable <span>Paginator</span></h1>\n\t\t\t\t<p>Pagination is enabled by setting paginator property to true and defining the rows attribute as the number of rows per page.</p>\n\t\t\t</div>\n            <AppDemoActions />\n\t\t</div>\n\n\t\t<div class=\"content-section implementation\">\n            <div class=\"card\">\n                <DataTable :value=\"customers\" :paginator=\"true\" :rows=\"10\"\n                    paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\n                    :rowsPerPageOptions=\"[10,20,50]\" responsiveLayout=\"scroll\"\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords}\">\n                    <Column field=\"name\" header=\"Name\"></Column>\n                    <Column field=\"country.name\" header=\"Country\"></Column>\n                    <Column field=\"company\" header=\"Company\"></Column>\n                    <Column field=\"representative.name\" header=\"Representative\"></Column>\n                    <template #paginatorLeft>\n                        <Button type=\"button\" icon=\"pi pi-refresh\" class=\"p-button-text\" />\n                    </template>\n                    <template #paginatorRight>\n                        <Button type=\"button\" icon=\"pi pi-cloud\" class=\"p-button-text\" />\n                    </template>\n                </DataTable>\n            </div>\n\t\t</div>\n\n        <AppDoc name=\"DataTablePaginatorDemo\" :sources=\"sources\" :service=\"['CustomerService']\" :data=\"['customers-large']\" github=\"datatable/DataTablePaginatorDemo.vue\" />\n                  \n\t</div>\n</template>\n\n<script>\nimport CustomerService from '../../service/CustomerService';\n\nexport default {\n    data() {\n        return {\n            customers: null,\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n\t<div>\n        <DataTable :value=\"customers\" :paginator=\"true\" :rows=\"10\"\n            paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\n            :rowsPerPageOptions=\"[10,20,50]\" responsiveLayout=\"scroll\"\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords}\">\n            <Column field=\"name\" header=\"Name\"></Column>\n            <Column field=\"country.name\" header=\"Country\"></Column>\n            <Column field=\"company\" header=\"Company\"></Column>\n            <Column field=\"representative.name\" header=\"Representative\"></Column>\n            <template #paginatorLeft>\n                <Button type=\"button\" icon=\"pi pi-refresh\" class=\"p-button-text\" />\n            </template>\n            <template #paginatorRight>\n                <Button type=\"button\" icon=\"pi pi-cloud\" class=\"p-button-text\" />\n            </template>\n        </DataTable>    \n\t</div>\n</template>\n\n<script>\nimport CustomerService from './service/CustomerService';\n\nexport default {\n    data() {\n        return {\n            customers: null\n        }\n    },\n    customerService: null,\n    created() {\n        this.customerService = new CustomerService();\n    },\n    mounted() {\n        this.customerService.getCustomersLarge().then(data => this.customers = data);\n    }\n}\n<\\\\/script>                  \n`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n\t<div>\n        <DataTable :value=\"customers\" :paginator=\"true\" :rows=\"10\"\n            paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\n            :rowsPerPageOptions=\"[10,20,50]\" responsiveLayout=\"scroll\"\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords}\">\n            <Column field=\"name\" header=\"Name\"></Column>\n            <Column field=\"country.name\" header=\"Country\"></Column>\n            <Column field=\"company\" header=\"Company\"></Column>\n            <Column field=\"representative.name\" header=\"Representative\"></Column>\n            <template #paginatorLeft>\n                <Button type=\"button\" icon=\"pi pi-refresh\" class=\"p-button-text\" />\n            </template>\n            <template #paginatorRight>\n                <Button type=\"button\" icon=\"pi pi-cloud\" class=\"p-button-text\" />\n            </template>\n        </DataTable>    \n\t</div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport CustomerService from './service/CustomerService';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            customerService.value.getCustomersLarge().then(data => customers.value = data);\n        })\n\n        const customers = ref();\n        const customerService = ref(new CustomerService());\n\n        return { customers }\n    }\n}\n<\\\\/script>                  \n`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/datatable/datatable.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/column/column.min.js\"><\\\\/script>\n        <script src=\"./CustomerService.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <p-datatable :value=\"customers\" :paginator=\"true\" :rows=\"10\"\n                paginator-template=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\n                :rows-per-page-options=\"[10,20,50]\" responsive-layout=\"scroll\"\n                current-page-report-template=\"Showing {first} to {last} of {totalRecords}\">\n                <p-column field=\"name\" header=\"Name\"></p-column>\n                <p-column field=\"country.name\" header=\"Country\"></p-column>\n                <p-column field=\"company\" header=\"Company\"></p-column>\n                <p-column field=\"representative.name\" header=\"Representative\"></p-column>\n                <template #paginatorLeft>\n                    <p-button type=\"button\" icon=\"pi pi-refresh\" class=\"p-button-text\"></p-button>\n                </template>\n                <template #paginatorRight>\n                    <p-button type=\"button\" icon=\"pi pi-cloud\" class=\"p-button-text\"></p-button>\n                </template>\n            </p-datatable>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref, onMounted } = Vue;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    customerService.value.getCustomersLarge().then(data => customers.value = data);\n                })\n\n                const customers = ref();\n                const customerService = ref(new CustomerService());\n\n                return { customers }\n            },\n            components: {\n                \"p-datatable\": primevue.datatable,\n                \"p-column\": primevue.column,\n                \"p-button\": primevue.button\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\\\/script>                  \n`\n                }\n            }\n        }\n    },\n    customerService: null,\n    created() {\n        this.customerService = new CustomerService();\n    },\n    mounted() {\n        this.customerService.getCustomersLarge().then(data => this.customers = data);\n    }\n}\n</script>"],"sourceRoot":""}]}