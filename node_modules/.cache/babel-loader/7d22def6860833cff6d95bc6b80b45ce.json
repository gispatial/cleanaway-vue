{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/colorpicker/ColorPicker.vue?vue&type=template&id=f88c6a1a","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/colorpicker/ColorPicker.vue","mtime":1634589566211},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgVHJhbnNpdGlvbiBhcyBfVHJhbnNpdGlvbiwgd2l0aEN0eCBhcyBfd2l0aEN0eCwgVGVsZXBvcnQgYXMgX1RlbGVwb3J0IH0gZnJvbSAidnVlIjsKdmFyIF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJwLWNvbG9ycGlja2VyLWNvbnRlbnQiCn07CnZhciBfaG9pc3RlZF8yID0gewogIGNsYXNzOiAicC1jb2xvcnBpY2tlci1jb2xvciIKfTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImRpdiIsIHsKICAgIHJlZjogImNvbnRhaW5lciIsCiAgICBjbGFzczogJG9wdGlvbnMuY29udGFpbmVyQ2xhc3MKICB9LCBbISRwcm9wcy5pbmxpbmUgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImlucHV0IiwgewogICAga2V5OiAwLAogICAgcmVmOiAiaW5wdXQiLAogICAgdHlwZTogInRleHQiLAogICAgY2xhc3M6ICRvcHRpb25zLmlucHV0Q2xhc3MsCiAgICByZWFkb25seTogInJlYWRvbmx5IiwKICAgIHRhYmluZGV4OiAkcHJvcHMudGFiaW5kZXgsCiAgICBkaXNhYmxlZDogJHByb3BzLmRpc2FibGVkLAogICAgb25DbGljazogX2NhY2hlWzFdIHx8IChfY2FjaGVbMV0gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5vbklucHV0Q2xpY2sgJiYgJG9wdGlvbnMub25JbnB1dENsaWNrLmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSksCiAgICBvbktleWRvd246IF9jYWNoZVsyXSB8fCAoX2NhY2hlWzJdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMub25JbnB1dEtleWRvd24gJiYgJG9wdGlvbnMub25JbnB1dEtleWRvd24uYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9KSwKICAgICJhcmlhLWxhYmVsbGVkYnkiOiAkcHJvcHMuYXJpYUxhYmVsbGVkQnkKICB9LCBudWxsLCA0MgogIC8qIENMQVNTLCBQUk9QUywgSFlEUkFURV9FVkVOVFMgKi8KICAsIFsidGFiaW5kZXgiLCAiZGlzYWJsZWQiLCAiYXJpYS1sYWJlbGxlZGJ5Il0pKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKSwgKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9UZWxlcG9ydCwgewogICAgdG86ICRvcHRpb25zLmFwcGVuZFRhcmdldCwKICAgIGRpc2FibGVkOiAkb3B0aW9ucy5hcHBlbmREaXNhYmxlZAogIH0sIFtfY3JlYXRlVk5vZGUoX1RyYW5zaXRpb24sIHsKICAgIG5hbWU6ICJwLWNvbm5lY3RlZC1vdmVybGF5IiwKICAgIG9uRW50ZXI6ICRvcHRpb25zLm9uT3ZlcmxheUVudGVyLAogICAgb25MZWF2ZTogJG9wdGlvbnMub25PdmVybGF5TGVhdmUsCiAgICBvbkFmdGVyTGVhdmU6ICRvcHRpb25zLm9uT3ZlcmxheUFmdGVyTGVhdmUKICB9LCB7CiAgICBkZWZhdWx0OiBfd2l0aEN0eChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBbKCRwcm9wcy5pbmxpbmUgPyB0cnVlIDogJGRhdGEub3ZlcmxheVZpc2libGUpID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJkaXYiLCB7CiAgICAgICAga2V5OiAwLAogICAgICAgIHJlZjogJG9wdGlvbnMucGlja2VyUmVmLAogICAgICAgIGNsYXNzOiAkb3B0aW9ucy5waWNrZXJDbGFzcywKICAgICAgICBvbkNsaWNrOiBfY2FjaGVbMTFdIHx8IChfY2FjaGVbMTFdID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgcmV0dXJuICRvcHRpb25zLm9uT3ZlcmxheUNsaWNrICYmICRvcHRpb25zLm9uT3ZlcmxheUNsaWNrLmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgICAgIH0pCiAgICAgIH0sIFtfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzEsIFtfY3JlYXRlVk5vZGUoImRpdiIsIHsKICAgICAgICByZWY6ICRvcHRpb25zLmNvbG9yU2VsZWN0b3JSZWYsCiAgICAgICAgY2xhc3M6ICJwLWNvbG9ycGlja2VyLWNvbG9yLXNlbGVjdG9yIiwKICAgICAgICBvbk1vdXNlZG93bjogX2NhY2hlWzNdIHx8IChfY2FjaGVbM10gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICByZXR1cm4gJG9wdGlvbnMub25Db2xvck1vdXNlZG93bigkZXZlbnQpOwogICAgICAgIH0pLAogICAgICAgIG9uVG91Y2hzdGFydDogX2NhY2hlWzRdIHx8IChfY2FjaGVbNF0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICByZXR1cm4gJG9wdGlvbnMub25Db2xvckRyYWdTdGFydCgkZXZlbnQpOwogICAgICAgIH0pLAogICAgICAgIG9uVG91Y2htb3ZlOiBfY2FjaGVbNV0gfHwgKF9jYWNoZVs1XSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICAgIHJldHVybiAkb3B0aW9ucy5vbkRyYWcoJGV2ZW50KTsKICAgICAgICB9KSwKICAgICAgICBvblRvdWNoZW5kOiBfY2FjaGVbNl0gfHwgKF9jYWNoZVs2XSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICAgIHJldHVybiAkb3B0aW9ucy5vbkRyYWdFbmQoKTsKICAgICAgICB9KQogICAgICB9LCBbX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF8yLCBbX2NyZWF0ZVZOb2RlKCJkaXYiLCB7CiAgICAgICAgcmVmOiAkb3B0aW9ucy5jb2xvckhhbmRsZVJlZiwKICAgICAgICBjbGFzczogInAtY29sb3JwaWNrZXItY29sb3ItaGFuZGxlIgogICAgICB9LCBudWxsLCA1MTIKICAgICAgLyogTkVFRF9QQVRDSCAqLwogICAgICApXSldLCA1NDQKICAgICAgLyogSFlEUkFURV9FVkVOVFMsIE5FRURfUEFUQ0ggKi8KICAgICAgKSwgX2NyZWF0ZVZOb2RlKCJkaXYiLCB7CiAgICAgICAgcmVmOiAkb3B0aW9ucy5odWVWaWV3UmVmLAogICAgICAgIGNsYXNzOiAicC1jb2xvcnBpY2tlci1odWUiLAogICAgICAgIG9uTW91c2Vkb3duOiBfY2FjaGVbN10gfHwgKF9jYWNoZVs3XSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICAgIHJldHVybiAkb3B0aW9ucy5vbkh1ZU1vdXNlZG93bigkZXZlbnQpOwogICAgICAgIH0pLAogICAgICAgIG9uVG91Y2hzdGFydDogX2NhY2hlWzhdIHx8IChfY2FjaGVbOF0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICByZXR1cm4gJG9wdGlvbnMub25IdWVEcmFnU3RhcnQoJGV2ZW50KTsKICAgICAgICB9KSwKICAgICAgICBvblRvdWNobW92ZTogX2NhY2hlWzldIHx8IChfY2FjaGVbOV0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICByZXR1cm4gJG9wdGlvbnMub25EcmFnKCRldmVudCk7CiAgICAgICAgfSksCiAgICAgICAgb25Ub3VjaGVuZDogX2NhY2hlWzEwXSB8fCAoX2NhY2hlWzEwXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICAgIHJldHVybiAkb3B0aW9ucy5vbkRyYWdFbmQoKTsKICAgICAgICB9KQogICAgICB9LCBbX2NyZWF0ZVZOb2RlKCJkaXYiLCB7CiAgICAgICAgcmVmOiAkb3B0aW9ucy5odWVIYW5kbGVSZWYsCiAgICAgICAgY2xhc3M6ICJwLWNvbG9ycGlja2VyLWh1ZS1oYW5kbGUiCiAgICAgIH0sIG51bGwsIDUxMgogICAgICAvKiBORUVEX1BBVENIICovCiAgICAgICldLCA1NDQKICAgICAgLyogSFlEUkFURV9FVkVOVFMsIE5FRURfUEFUQ0ggKi8KICAgICAgKV0pXSwgMgogICAgICAvKiBDTEFTUyAqLwogICAgICApKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKV07CiAgICB9KSwKICAgIF86IDEKICAgIC8qIFNUQUJMRSAqLwoKICB9LCA4CiAgLyogUFJPUFMgKi8KICAsIFsib25FbnRlciIsICJvbkxlYXZlIiwgIm9uQWZ0ZXJMZWF2ZSJdKV0sIDgKICAvKiBQUk9QUyAqLwogICwgWyJ0byIsICJkaXNhYmxlZCJdKSldLCAyCiAgLyogQ0xBU1MgKi8KICApOwp9"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/colorpicker/ColorPicker.vue"],"names":[],"mappings":";;AAOyB,EAAA,KAAK,EAAC;;;AAGE,EAAA,KAAK,EAAC;;;uBATnC,YAAA,CAqBM,KArBN,EAqBM;AArBD,IAAA,GAAG,EAAC,WAqBH;AArBgB,IAAA,KAAK,EAAE,QAAA,CAAA;AAqBvB,GArBN,E,EAE+D,MAAA,CAAA,M,kBAD3D,YAAA,CACsG,OADtG,EACsG;UAAA;AAD/F,IAAA,GAAG,EAAC,OAC2F;AADnF,IAAA,IAAI,EAAC,MAC8E;AADtE,IAAA,KAAK,EAAE,QAAA,CAAA,UAC+D;AADnD,IAAA,QAAQ,EAAC,UAC0C;AAD9B,IAAA,QAAQ,EAAE,MAAA,CAAA,QACoB;AADT,IAAA,QAAQ,EAAE,MAAA,CAAA,QACD;AAAjG,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,YAAA,IAAA,QAAA,CAAA,YAAA,OAAA,QAAA,YAAF;AAAA,KAAA,CAA4F;AAA3E,IAAA,SAAO,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,cAAA,IAAA,QAAA,CAAA,cAAA,OAAA,QAAA,YAAF;AAAA,KAAA,CAAoE;AAAlC,uBAAiB,MAAA,CAAA;AAAiB,GADtG,E,IAAA,E;;AAAA,I,2CAAA,C,sDAEA,YAAA,CAiBW,SAjBX,EAiBW;AAjBA,IAAA,EAAE,EAAE,QAAA,CAAA,YAiBJ;AAjBmB,IAAA,QAAQ,EAAE,QAAA,CAAA;AAiB7B,GAjBX,E,CACI,YAAA,CAea,WAfb,EAea;AAfD,IAAA,IAAI,EAAC,qBAeJ;AAf2B,IAAA,OAAK,EAAE,QAAA,CAAA,cAelC;AAfmD,IAAA,OAAK,EAAE,QAAA,CAAA,cAe1D;AAf2E,IAAA,YAAW,EAAE,QAAA,CAAA;AAexF,GAfb,E;sBACI;AAAA,aAaM,C,CAb2C,MAAA,CAAA,MAAA,GAAM,IAAN,GAAgB,KAAA,CAAA,c,mBAAjE,YAAA,CAaM,KAbN,EAaM;cAAA;AAbA,QAAA,GAAG,EAAE,QAAA,CAAA,SAaL;AAbiB,QAAA,KAAK,EAAE,QAAA,CAAA,WAaxB;AAb4E,QAAA,OAAK,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,MAAA,CAAA,EAAA,CAAA,GAAA;AAAA,iBAAE,QAAA,CAAA,cAAA,IAAA,QAAA,CAAA,cAAA,OAAA,QAAA,YAAF;AAAA,SAAA;AAajF,OAbN,E,CACI,YAAA,CAWM,KAXN,EAAA,UAAA,EAWM,CAVF,YAAA,CAKM,KALN,EAKM;AALA,QAAA,GAAG,EAAE,QAAA,CAAA,gBAKL;AALuB,QAAA,KAAK,EAAC,8BAK7B;AAL6D,QAAA,WAAS,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,iBAAE,QAAA,CAAA,gBAAA,CAAiB,MAAjB,CAAF;AAAA,SAAA,CAKtE;AAJD,QAAA,YAAU,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,iBAAE,QAAA,CAAA,gBAAA,CAAiB,MAAjB,CAAF;AAAA,SAAA,CAIT;AAJsC,QAAA,WAAS,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,iBAAE,QAAA,CAAA,MAAA,CAAO,MAAP,CAAF;AAAA,SAAA,CAI/C;AAJkE,QAAA,UAAQ,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,iBAAE,QAAA,CAAA,SAAA,EAAF;AAAA,SAAA;AAI1E,OALN,E,CAEI,YAAA,CAEM,KAFN,EAAA,UAAA,EAEM,CADF,YAAA,CAAoE,KAApE,EAAoE;AAA9D,QAAA,GAAG,EAAE,QAAA,CAAA,cAAyD;AAAzC,QAAA,KAAK,EAAC;AAAmC,OAApE,E,IAAA,E;;AAAA,OACE,CAFN,C,CAFJ,E;;AAAA,OAUE,EAJF,YAAA,CAGM,KAHN,EAGM;AAHA,QAAA,GAAG,EAAE,QAAA,CAAA,UAGL;AAHiB,QAAA,KAAK,EAAC,mBAGvB;AAH4C,QAAA,WAAS,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,iBAAE,QAAA,CAAA,cAAA,CAAe,MAAf,CAAF;AAAA,SAAA,CAGrD;AAFD,QAAA,YAAU,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,iBAAE,QAAA,CAAA,cAAA,CAAe,MAAf,CAAF;AAAA,SAAA,CAET;AAFoC,QAAA,WAAS,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,iBAAE,QAAA,CAAA,MAAA,CAAO,MAAP,CAAF;AAAA,SAAA,CAE7C;AAFgE,QAAA,UAAQ,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,MAAA,CAAA,EAAA,CAAA,GAAA,UAAA,MAAA;AAAA,iBAAE,QAAA,CAAA,SAAA,EAAF;AAAA,SAAA;AAExE,OAHN,E,CAEI,YAAA,CAAgE,KAAhE,EAAgE;AAA1D,QAAA,GAAG,EAAE,QAAA,CAAA,YAAqD;AAAvC,QAAA,KAAK,EAAC;AAAiC,OAAhE,E,IAAA,E;;AAAA,O,CAFJ,E;;AAAA,OAIE,CAXN,C,CADJ,E;;AAAA,O,qCAaM,CAbN;AAAA,K;;;;GADJ,E;;AAAA,I,sCAAA,C,CADJ,E;;AAAA,I,kBAAA,C,EAHJ,E;;AAAA,G","sourcesContent":["<template>\n    <div ref=\"container\" :class=\"containerClass\">\n        <input ref=\"input\" type=\"text\" :class=\"inputClass\" readonly=\"readonly\" :tabindex=\"tabindex\" :disabled=\"disabled\"\n            @click=\"onInputClick\" @keydown=\"onInputKeydown\" v-if=\"!inline\" :aria-labelledby=\"ariaLabelledBy\"/>\n        <Teleport :to=\"appendTarget\" :disabled=\"appendDisabled\">\n            <transition name=\"p-connected-overlay\" @enter=\"onOverlayEnter\" @leave=\"onOverlayLeave\" @after-leave=\"onOverlayAfterLeave\">\n                <div :ref=\"pickerRef\" :class=\"pickerClass\" v-if=\"inline ? true : overlayVisible\" @click=\"onOverlayClick\">\n                    <div class=\"p-colorpicker-content\">\n                        <div :ref=\"colorSelectorRef\" class=\"p-colorpicker-color-selector\" @mousedown=\"onColorMousedown($event)\"\n                            @touchstart=\"onColorDragStart($event)\" @touchmove=\"onDrag($event)\" @touchend=\"onDragEnd()\">\n                            <div class=\"p-colorpicker-color\">\n                                <div :ref=\"colorHandleRef\" class=\"p-colorpicker-color-handle\"></div>\n                            </div>\n                        </div>\n                        <div :ref=\"hueViewRef\" class=\"p-colorpicker-hue\" @mousedown=\"onHueMousedown($event)\"\n                            @touchstart=\"onHueDragStart($event)\" @touchmove=\"onDrag($event)\" @touchend=\"onDragEnd()\">\n                            <div :ref=\"hueHandleRef\" class=\"p-colorpicker-hue-handle\"></div>\n                        </div>\n                    </div>\n                </div>\n            </transition>\n        </Teleport>\n    </div>\n</template>\n\n<script>\nimport {ConnectedOverlayScrollHandler,DomHandler,ZIndexUtils} from 'primevue/utils';\nimport OverlayEventBus from 'primevue/overlayeventbus';\n\nexport default {\n    name: 'ColorPicker',\n    emits: ['update:modelValue'],\n    props: {\n        modelValue: {\n            type: null,\n            default: null\n        },\n        defaultColor: {\n            type: null,\n            default: 'ff0000'\n        },\n        inline: {\n            type: Boolean,\n            default: false\n        },\n        format: {\n            type: String,\n            default: 'hex'\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        tabindex: {\n            type: String,\n            default: null\n        },\n        autoZIndex: {\n            type: Boolean,\n            default: true\n        },\n        baseZIndex: {\n            type: Number,\n            default: 0\n        },\n        ariaLabelledBy: {\n            type: String,\n            default: null\n        },\n        appendTo: {\n            type: String,\n            default: 'body'\n        },\n        panelClass: null\n    },\n    data() {\n        return {\n            overlayVisible: false\n        };\n    },\n    hsbValue: null,\n    outsideClickListener: null,\n    documentMouseMoveListener: null,\n    documentMouseUpListener: null,\n    scrollHandler: null,\n    resizeListener: null,\n    hueDragging: null,\n    colorDragging: null,\n    selfUpdate: null,\n    picker: null,\n    colorSelector: null,\n    colorHandle: null,\n    hueView: null,\n    hueHandle: null,\n    beforeUnmount() {\n        this.unbindOutsideClickListener();\n        this.unbindDragListeners();\n        this.unbindResizeListener();\n\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n\n        if (this.picker && this.autoZIndex) {\n            ZIndexUtils.clear(this.picker);\n        }\n\n        this.clearRefs();\n    },\n    mounted() {\n        this.updateUI();\n    },\n    watch: {\n        modelValue: {\n            immediate: true,\n            handler(newValue) {\n                this.hsbValue = this.toHSB(newValue);\n\n                if (this.selfUpdate)\n                    this.selfUpdate = false;\n                else\n                    this.updateUI();\n            }\n        }\n    },\n    methods: {\n        pickColor(event) {\n            let rect = this.colorSelector.getBoundingClientRect();\n            let top = rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0);\n            let left = rect.left + document.body.scrollLeft;\n            let saturation = Math.floor(100 * (Math.max(0, Math.min(150, ((event.pageX || event.changedTouches[0].pageX)- left)))) / 150);\n            let brightness = Math.floor(100 * (150 - Math.max(0, Math.min(150, ((event.pageY || event.changedTouches[0].pageY) - top)))) / 150);\n            this.hsbValue = this.validateHSB({\n                h: this.hsbValue.h,\n                s: saturation,\n                b: brightness\n            });\n\n            this.selfUpdate = true;\n            this.updateColorHandle();\n            this.updateInput();\n            this.updateModel();\n        },\n        pickHue(event) {\n            let top = this.hueView.getBoundingClientRect().top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0);\n            this.hsbValue = this.validateHSB({\n                h: Math.floor(360 * (150 - Math.max(0, Math.min(150, ((event.pageY || event.changedTouches[0].pageY) - top)))) / 150),\n                s: 100,\n                b: 100\n            });\n\n            this.selfUpdate = true;\n            this.updateColorSelector();\n            this.updateHue();\n            this.updateModel();\n            this.updateInput();\n        },\n        updateModel() {\n            switch(this.format) {\n                case 'hex':\n                    this.$emit('update:modelValue', this.HSBtoHEX(this.hsbValue));\n                break;\n\n                case 'rgb':\n                    this.$emit('update:modelValue', this.HSBtoRGB(this.hsbValue));\n                break;\n\n                case 'hsb':\n                    this.$emit('update:modelValue', this.hsbValue);\n                break;\n\n                default:\n                    //NoOp\n                break;\n            }\n        },\n        updateColorSelector() {\n            if (this.colorSelector) {\n                let hsbValue = this.validateHSB({\n                    h: this.hsbValue.h,\n                    s: 100,\n                    b: 100\n                });\n                this.colorSelector.style.backgroundColor = '#' + this.HSBtoHEX(hsbValue);\n            }\n        },\n        updateColorHandle() {\n            if (this.colorHandle) {\n                this.colorHandle.style.left = Math.floor(150 * this.hsbValue.s / 100) + 'px';\n                this.colorHandle.style.top = Math.floor(150 * (100 - this.hsbValue.b) / 100) + 'px';\n            }\n        },\n        updateHue() {\n            if (this.hueHandle) {\n                this.hueHandle.style.top = Math.floor(150 - (150 * this.hsbValue.h / 360)) + 'px';\n            }\n        },\n        updateInput() {\n            if (this.$refs.input) {\n                this.$refs.input.style.backgroundColor = '#' + this.HSBtoHEX(this.hsbValue);\n            }\n        },\n        updateUI() {\n            this.updateHue();\n            this.updateColorHandle();\n            this.updateInput();\n            this.updateColorSelector();\n        },\n        validateHSB(hsb) {\n            return {\n                h: Math.min(360, Math.max(0, hsb.h)),\n                s: Math.min(100, Math.max(0, hsb.s)),\n                b: Math.min(100, Math.max(0, hsb.b))\n            };\n        },\n        validateRGB(rgb) {\n            return {\n                r: Math.min(255, Math.max(0, rgb.r)),\n                g: Math.min(255, Math.max(0, rgb.g)),\n                b: Math.min(255, Math.max(0, rgb.b))\n            };\n        },\n        validateHEX(hex) {\n            var len = 6 - hex.length;\n            if (len > 0) {\n                var o = [];\n                for (var i=0; i<len; i++) {\n                    o.push('0');\n                }\n                o.push(hex);\n                hex = o.join('');\n            }\n            return hex;\n        },\n        HEXtoRGB(hex) {\n            let hexValue = parseInt(((hex.indexOf('#') > -1) ? hex.substring(1) : hex), 16);\n            return {r: hexValue >> 16, g: (hexValue & 0x00FF00) >> 8, b: (hexValue & 0x0000FF)};\n        },\n        HEXtoHSB(hex) {\n            return this.RGBtoHSB(this.HEXtoRGB(hex));\n        },\n        RGBtoHSB(rgb) {\n            var hsb = {\n                h: 0,\n                s: 0,\n                b: 0\n            };\n            var min = Math.min(rgb.r, rgb.g, rgb.b);\n            var max = Math.max(rgb.r, rgb.g, rgb.b);\n            var delta = max - min;\n            hsb.b = max;\n            hsb.s = max !== 0 ? 255 * delta / max : 0;\n            if (hsb.s !== 0) {\n                if (rgb.r === max) {\n                    hsb.h = (rgb.g - rgb.b) / delta;\n                } else if (rgb.g === max) {\n                    hsb.h = 2 + (rgb.b - rgb.r) / delta;\n                } else {\n                    hsb.h = 4 + (rgb.r - rgb.g) / delta;\n                }\n            } else {\n                hsb.h = -1;\n            }\n            hsb.h *= 60;\n            if (hsb.h < 0) {\n                hsb.h += 360;\n            }\n            hsb.s *= 100/255;\n            hsb.b *= 100/255;\n            return hsb;\n        },\n        HSBtoRGB(hsb) {\n            var rgb = {\n                r: null, g: null, b: null\n            };\n            var h = Math.round(hsb.h);\n            var s = Math.round(hsb.s*255/100);\n            var v = Math.round(hsb.b*255/100);\n            if (s === 0) {\n                rgb = {\n                    r: v,\n                    g: v,\n                    b: v\n                }\n            }\n            else {\n                var t1 = v;\n                var t2 = (255-s)*v/255;\n                var t3 = (t1-t2)*(h%60)/60;\n                if (h===360) h = 0;\n                if (h<60) {rgb.r=t1;\trgb.b=t2; rgb.g=t2+t3}\n                else if (h<120) {rgb.g=t1; rgb.b=t2;\trgb.r=t1-t3}\n                else if (h<180) {rgb.g=t1; rgb.r=t2;\trgb.b=t2+t3}\n                else if (h<240) {rgb.b=t1; rgb.r=t2;\trgb.g=t1-t3}\n                else if (h<300) {rgb.b=t1; rgb.g=t2;\trgb.r=t2+t3}\n                else if (h<360) {rgb.r=t1; rgb.g=t2;\trgb.b=t1-t3}\n                else {rgb.r=0; rgb.g=0;\trgb.b=0}\n            }\n            return {r:Math.round(rgb.r), g:Math.round(rgb.g), b:Math.round(rgb.b)};\n        },\n        RGBtoHEX(rgb) {\n            var hex = [\n                rgb.r.toString(16),\n                rgb.g.toString(16),\n                rgb.b.toString(16)\n            ];\n\n            for (var key in hex) {\n                if (hex[key].length === 1) {\n                    hex[key] = '0' + hex[key];\n                }\n            }\n\n            return hex.join('');\n        },\n        HSBtoHEX(hsb) {\n            return this.RGBtoHEX(this.HSBtoRGB(hsb));\n        },\n        toHSB(value) {\n            let hsb;\n\n            if (value) {\n                switch (this.format) {\n                    case 'hex':\n                        hsb = this.HEXtoHSB(value);\n                    break;\n\n                    case 'rgb':\n                        hsb = this.RGBtoHSB(value);\n                    break;\n\n                    case 'hsb':\n                        hsb = value;\n                    break;\n\n                    default:\n                        break;\n                }\n            }\n            else {\n                hsb = this.HEXtoHSB(this.defaultColor);\n            }\n\n            return hsb;\n        },\n        onOverlayEnter(el) {\n            this.updateUI();\n            this.alignOverlay();\n            this.bindOutsideClickListener();\n            this.bindScrollListener();\n            this.bindResizeListener();\n\n            if (this.autoZIndex) {\n                ZIndexUtils.set('overlay', el, this.$primevue.config.zIndex.overlay);\n            }\n        },\n        onOverlayLeave() {\n            this.unbindOutsideClickListener();\n            this.unbindScrollListener();\n            this.unbindResizeListener();\n            this.clearRefs();\n        },\n        onOverlayAfterLeave(el) {\n            if (this.autoZIndex) {\n                ZIndexUtils.clear(el);\n            }\n        },\n        alignOverlay() {\n            if (this.appendDisabled)\n                DomHandler.relativePosition(this.picker, this.$refs.input);\n            else\n                DomHandler.absolutePosition(this.picker, this.$refs.input);\n        },\n        onInputClick() {\n            if (this.disabled) {\n                return;\n            }\n\n            this.overlayVisible = !this.overlayVisible;\n        },\n        onInputKeydown(event) {\n            switch(event.which) {\n                //space\n                case 32:\n                    this.overlayVisible = !this.overlayVisible;\n                    event.preventDefault();\n                break;\n\n                //escape and tab\n                case 27:\n                case 9:\n                    this.overlayVisible = false;\n                break;\n\n                default:\n                    //NoOp\n                break;\n            }\n        },\n        onColorMousedown(event) {\n            if (this.disabled) {\n                return;\n            }\n\n            this.bindDragListeners();\n            this.onColorDragStart(event);\n        },\n        onColorDragStart(event) {\n            if (this.disabled) {\n                return;\n            }\n\n            this.colorDragging = true;\n            this.pickColor(event);\n            DomHandler.addClass(this.$el, 'p-colorpicker-dragging');\n            event.preventDefault();\n        },\n        onDrag(event) {\n            if (this.colorDragging) {\n                this.pickColor(event);\n                event.preventDefault();\n            }\n\n            if (this.hueDragging) {\n                this.pickHue(event);\n                event.preventDefault();\n            }\n        },\n        onDragEnd() {\n            this.colorDragging = false;\n            this.hueDragging = false;\n            DomHandler.removeClass(this.$el, 'p-colorpicker-dragging');\n            this.unbindDragListeners();\n        },\n        onHueMousedown(event) {\n            if (this.disabled) {\n                return;\n            }\n\n            this.bindDragListeners();\n            this.onHueDragStart(event);\n        },\n        onHueDragStart(event) {\n            if (this.disabled) {\n                return;\n            }\n\n            this.hueDragging = true;\n            this.pickHue(event);\n            DomHandler.addClass(this.$el, 'p-colorpicker-dragging');\n        },\n        isInputClicked(event) {\n            return this.$refs.input && this.$refs.input.isSameNode(event.target);\n        },\n        bindDragListeners() {\n            this.bindDocumentMouseMoveListener();\n            this.bindDocumentMouseUpListener();\n        },\n        unbindDragListeners() {\n            this.unbindDocumentMouseMoveListener();\n            this.unbindDocumentMouseUpListener();\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    if (this.overlayVisible && this.picker && !this.picker.contains(event.target) && !this.isInputClicked(event)) {\n                        this.overlayVisible = false;\n                    }\n                };\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindScrollListener() {\n            if (!this.scrollHandler) {\n                this.scrollHandler = new ConnectedOverlayScrollHandler(this.$refs.container, () => {\n                    if (this.overlayVisible) {\n                        this.overlayVisible = false;\n                    }\n                });\n            }\n\n            this.scrollHandler.bindScrollListener();\n        },\n        unbindScrollListener() {\n            if (this.scrollHandler) {\n                this.scrollHandler.unbindScrollListener();\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = () => {\n                    if (this.overlayVisible) {\n                        this.overlayVisible = false;\n                    }\n                };\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        bindDocumentMouseMoveListener() {\n            if (!this.documentMouseMoveListener) {\n                this.documentMouseMoveListener = this.onDrag.bind(this);\n                document.addEventListener('mousemove', this.documentMouseMoveListener);\n            }\n        },\n        unbindDocumentMouseMoveListener() {\n            if (this.documentMouseMoveListener) {\n                document.removeEventListener('mousemove', this.documentMouseMoveListener);\n                this.documentMouseMoveListener = null;\n            }\n        },\n        bindDocumentMouseUpListener() {\n            if (!this.documentMouseUpListener) {\n                this.documentMouseUpListener = this.onDragEnd.bind(this);\n                document.addEventListener('mouseup', this.documentMouseUpListener);\n            }\n        },\n        unbindDocumentMouseUpListener() {\n            if (this.documentMouseUpListener) {\n                document.removeEventListener('mouseup', this.documentMouseUpListener);\n                this.documentMouseUpListener = null;\n            }\n        },\n        pickerRef(el) {\n            this.picker = el\n        },\n        colorSelectorRef(el) {\n            this.colorSelector = el;\n        },\n        colorHandleRef(el) {\n            this.colorHandle = el;\n        },\n        hueViewRef(el) {\n            this.hueView = el;\n        },\n        hueHandleRef(el) {\n            this.hueHandle = el;\n        },\n        clearRefs() {\n            this.picker = null;\n            this.colorSelector = null;\n            this.colorHandle = null;\n            this.hueView = null;\n            this.hueHandle = null;\n        },\n        onOverlayClick(event) {\n            OverlayEventBus.emit('overlay-click', {\n                originalEvent: event,\n                target: this.$el\n            });\n        }\n    },\n    computed: {\n        containerClass() {\n            return ['p-colorpicker p-component', {'p-colorpicker-overlay': !this.inline}];\n        },\n        inputClass() {\n            return ['p-colorpicker-preview p-inputtext', {'p-disabled': this.disabled}];\n        },\n        pickerClass() {\n            return ['p-colorpicker-panel', this.panelClass, {\n                'p-colorpicker-overlay-panel': !this.inline, 'p-disabled': this.disabled,\n                'p-input-filled': this.$primevue.config.inputStyle === 'filled',\n                'p-ripple-disabled': this.$primevue.config.ripple === false\n            }];\n        },\n        appendDisabled() {\n            return this.appendTo === 'self' || this.inline;\n        },\n        appendTarget() {\n            return this.appendDisabled ? null : this.appendTo;\n        }\n    }\n}\n</script>\n\n<style>\n.p-colorpicker {\n    display: inline-block;\n}\n\n.p-colorpicker-dragging {\n    cursor: pointer;\n}\n\n.p-colorpicker-overlay {\n    position: relative;\n}\n\n.p-colorpicker-panel {\n    position: relative;\n    width: 193px;\n    height: 166px;\n}\n\n.p-colorpicker-overlay-panel {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n\n.p-colorpicker-preview {\n    cursor: pointer;\n}\n\n.p-colorpicker-panel .p-colorpicker-content {\n    position: relative;\n}\n\n.p-colorpicker-panel .p-colorpicker-color-selector {\n    width: 150px;\n    height: 150px;\n    top: 8px;\n    left: 8px;\n    position: absolute;\n}\n\n.p-colorpicker-panel .p-colorpicker-color {\n     width: 150px;\n     height: 150px;\n}\n\n.p-colorpicker-panel .p-colorpicker-color-handle {\n     position: absolute;\n     top: 0px;\n     left: 150px;\n     border-radius: 100%;\n     width: 10px;\n     height: 10px;\n     border-width: 1px;\n     border-style: solid;\n     margin: -5px 0 0 -5px;\n     cursor: pointer;\n     opacity: .85;\n}\n\n.p-colorpicker-panel .p-colorpicker-hue {\n    width: 17px;\n    height: 150px;\n    top: 8px;\n    left: 167px;\n    position: absolute;\n    opacity: .85;\n}\n\n.p-colorpicker-panel .p-colorpicker-hue-handle {\n     position: absolute;\n     top: 150px;\n     left: 0px;\n     width: 21px;\n     margin-left: -2px;\n     margin-top: -5px;\n     height: 10px;\n     border-width: 2px;\n     border-style: solid;\n     opacity: .85;\n     cursor: pointer;\n}\n</style>\n"],"sourceRoot":""}]}