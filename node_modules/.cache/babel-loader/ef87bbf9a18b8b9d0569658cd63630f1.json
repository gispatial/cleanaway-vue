{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/autocomplete/AutoComplete.vue?vue&type=template&id=131dab8f","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/autocomplete/AutoComplete.vue","mtime":1634589566206},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/autocomplete/AutoComplete.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <span ref=\"container\" :class=\"containerClass\" aria-haspopup=\"listbox\" :aria-owns=\"listId\" :aria-expanded=\"overlayVisible\" :style=\"style\">\n        <input ref=\"input\" :class=\"inputFieldClass\" :style=\"inputStyle\" v-bind=\"$attrs\" :value=\"inputValue\" @click=\"onInputClicked\" @input=\"onInput\" @focus=\"onFocus\" @blur=\"onBlur\" @keydown=\"onKeyDown\" @change=\"onChange\"\n            type=\"text\" autoComplete=\"off\" v-if=\"!multiple\" role=\"searchbox\" aria-autocomplete=\"list\" :aria-controls=\"listId\">\n        <ul ref=\"multiContainer\" :class=\"multiContainerClass\" v-if=\"multiple\" @click=\"onMultiContainerClick\">\n            <li v-for=\"(item, i) of modelValue\" :key=\"i\" class=\"p-autocomplete-token\">\n                <slot name=\"chip\" :value=\"item\">\n                    <span class=\"p-autocomplete-token-label\">{{getItemContent(item)}}</span>\n                </slot>\n                <span class=\"p-autocomplete-token-icon pi pi-times-circle\" @click=\"removeItem($event, i)\"></span>\n            </li>\n            <li class=\"p-autocomplete-input-token\">\n                <input ref=\"input\" type=\"text\" autoComplete=\"off\" v-bind=\"$attrs\" @input=\"onInput\" @focus=\"onFocus\" @blur=\"onBlur\" @keydown=\"onKeyDown\"  @change=\"onChange\"\n                    role=\"searchbox\" aria-autocomplete=\"list\" :aria-controls=\"listId\">\n            </li>\n        </ul>\n        <i class=\"p-autocomplete-loader pi pi-spinner pi-spin\" v-if=\"searching\"></i>\n        <Button ref=\"dropdownButton\" type=\"button\" icon=\"pi pi-chevron-down\" class=\"p-autocomplete-dropdown\" :disabled=\"$attrs.disabled\" @click=\"onDropdownClick\" v-if=\"dropdown\"/>\n        <Teleport :to=\"appendTarget\" :disabled=\"appendDisabled\">\n            <transition name=\"p-connected-overlay\" @enter=\"onOverlayEnter\" @leave=\"onOverlayLeave\" @after-leave=\"onOverlayAfterLeave\">\n                <div :ref=\"overlayRef\" :class=\"panelStyleClass\" :style=\"{'max-height': virtualScrollerDisabled ? scrollHeight : ''}\" v-if=\"overlayVisible\" @click=\"onOverlayClick\">\n                    <slot name=\"header\" :value=\"modelValue\" :suggestions=\"suggestions\"></slot>\n                    <VirtualScroller :ref=\"virtualScrollerRef\" v-bind=\"virtualScrollerOptions\" :style=\"{'height': scrollHeight}\" :items=\"suggestions\" :disabled=\"virtualScrollerDisabled\">\n                        <template v-slot:content=\"{ styleClass, contentRef, items, getItemOptions }\">\n                            <ul :id=\"listId\" :ref=\"contentRef\" :class=\"['p-autocomplete-items', styleClass]\" role=\"listbox\">\n                                <template v-if=\"!optionGroupLabel\">\n                                    <li v-for=\"(item, i) of items\" class=\"p-autocomplete-item\" :key=\"i\" @click=\"selectItem($event, item)\" role=\"option\" v-ripple>\n                                        <slot name=\"item\" :item=\"item\" :index=\"getOptionIndex(i, getItemOptions)\">{{getItemContent(item)}}</slot>\n                                    </li>\n                                </template>\n                                <template v-else>\n                                    <template v-for=\"(optionGroup, i) of items\" :key=\"getOptionGroupRenderKey(optionGroup)\">\n                                        <li  class=\"p-autocomplete-item-group\">\n                                            <slot name=\"optiongroup\" :item=\"optionGroup\" :index=\"getOptionIndex(i, getItemOptions)\">{{getOptionGroupLabel(optionGroup)}}</slot>\n                                        </li>\n                                        <li v-for=\"(item, j) of getOptionGroupChildren(optionGroup)\" class=\"p-autocomplete-item\" :key=\"j\" @click=\"selectItem($event, item)\" role=\"option\" v-ripple :data-group=\"i\" :data-index=\"j\">\n                                            <slot name=\"item\" :item=\"item\" :index=\"getOptionIndex(j, getItemOptions)\">{{getItemContent(item)}}</slot>\n                                        </li>\n                                    </template>\n                                </template>\n                            </ul>\n                        </template>\n                        <template v-slot:loader=\"{ options }\" v-if=\"$slots.loader\">\n                            <slot name=\"loader\" :options=\"options\"></slot>\n                        </template>\n                    </VirtualScroller>\n                    <slot name=\"footer\" :value=\"modelValue\" :suggestions=\"suggestions\"></slot>\n                </div>\n            </transition>\n        </Teleport>\n    </span>\n</template>\n\n<script>\nimport {ConnectedOverlayScrollHandler,UniqueComponentId,ObjectUtils,DomHandler,ZIndexUtils} from 'primevue/utils';\nimport OverlayEventBus from 'primevue/overlayeventbus';\nimport Button from 'primevue/button';\nimport Ripple from 'primevue/ripple';\nimport VirtualScroller from 'primevue/virtualscroller';\n\nexport default {\n    name: 'AutoComplete',\n    inheritAttrs: false,\n    emits: ['update:modelValue', 'item-select', 'item-unselect', 'dropdown-click', 'clear', 'complete'],\n    props: {\n        modelValue: null,\n        suggestions: {\n            type: Array,\n            default: null\n        },\n        field: {\n            type: [String,Function],\n            default: null\n        },\n        optionGroupLabel: null,\n        optionGroupChildren: null,\n        scrollHeight: {\n            type: String,\n            default: '200px'\n        },\n        dropdown: {\n            type: Boolean,\n            default: false\n        },\n        dropdownMode: {\n            type: String,\n            default: 'blank'\n        },\n        autoHighlight: {\n            type: Boolean,\n            default: false\n        },\n        multiple: {\n            type: Boolean,\n            default: false\n        },\n        minLength: {\n            type: Number,\n            default: 1\n        },\n        delay: {\n            type: Number,\n            default: 300\n        },\n        appendTo: {\n            type: String,\n            default: 'body'\n        },\n        forceSelection: {\n            type: Boolean,\n            default: false\n        },\n        completeOnFocus: {\n            type: Boolean,\n            default: false\n        },\n        inputClass: null,\n        inputStyle: null,\n        class: null,\n        style: null,\n        panelClass: null,\n        virtualScrollerOptions: {\n            type: Object,\n            default: null\n        }\n    },\n    timeout: null,\n    outsideClickListener: null,\n    resizeListener: null,\n    scrollHandler: null,\n    overlay: null,\n    virtualScroller: null,\n    data() {\n        return {\n            searching: false,\n            focused: false,\n            overlayVisible: false,\n            inputTextValue: null,\n            highlightItem: null\n        };\n    },\n    watch: {\n        suggestions() {\n            if (this.searching) {\n                if (this.suggestions && this.suggestions.length)\n                    this.showOverlay();\n                else\n                    this.hideOverlay();\n\n                this.searching = false;\n            }\n        }\n    },\n    beforeUnmount() {\n        this.unbindOutsideClickListener();\n        this.unbindResizeListener();\n\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n\n        if (this.overlay) {\n            ZIndexUtils.clear(this.overlay);\n            this.overlay = null;\n        }\n    },\n    updated() {\n        if (this.overlayVisible) {\n            this.alignOverlay();\n        }\n    },\n    methods: {\n        getOptionIndex(index, fn) {\n            return this.virtualScrollerDisabled ? index : (fn && fn(index)['index']);\n        },\n        getOptionGroupRenderKey(optionGroup) {\n            return ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel);\n        },\n        getOptionGroupLabel(optionGroup) {\n            return ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel);\n        },\n        getOptionGroupChildren(optionGroup) {\n            return ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren);\n        },\n        onOverlayEnter(el) {\n            ZIndexUtils.set('overlay', el, this.$primevue.config.zIndex.overlay);\n            this.alignOverlay();\n            this.bindOutsideClickListener();\n            this.bindScrollListener();\n            this.bindResizeListener();\n\n            if (this.autoHighlight && this.suggestions && this.suggestions.length) {\n                DomHandler.addClass(this.overlay.firstElementChild.firstElementChild, 'p-highlight')\n            }\n        },\n        onOverlayLeave() {\n            this.unbindOutsideClickListener();\n            this.unbindScrollListener();\n            this.unbindResizeListener();\n            this.overlay = null;\n        },\n        onOverlayAfterLeave(el) {\n            ZIndexUtils.clear(el);\n        },\n        alignOverlay() {\n            let target = this.multiple ? this.$refs.multiContainer : this.$refs.input;\n            if (this.appendDisabled) {\n                DomHandler.relativePosition(this.overlay, target);\n            }\n            else {\n                this.overlay.style.minWidth = DomHandler.getOuterWidth(target) + 'px';\n                DomHandler.absolutePosition(this.overlay, target);\n            }\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    if (this.overlayVisible && this.overlay && this.isOutsideClicked(event)) {\n                        this.hideOverlay();\n                    }\n                };\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        bindScrollListener() {\n            if (!this.scrollHandler) {\n                this.scrollHandler = new ConnectedOverlayScrollHandler(this.$refs.container, () => {\n                    if (this.overlayVisible) {\n                        this.hideOverlay();\n                    }\n                });\n            }\n\n            this.scrollHandler.bindScrollListener();\n        },\n        unbindScrollListener() {\n            if (this.scrollHandler) {\n                this.scrollHandler.unbindScrollListener();\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = () => {\n                    if (this.overlayVisible) {\n                        this.hideOverlay();\n                    }\n                };\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        isOutsideClicked(event) {\n            return !this.overlay.contains(event.target) && !this.isInputClicked(event) && !this.isDropdownClicked(event);\n        },\n        isInputClicked(event) {\n            if (this.multiple)\n                return event.target === this.$refs.multiContainer || this.$refs.multiContainer.contains(event.target);\n            else\n                return event.target === this.$refs.input;\n        },\n        isDropdownClicked(event) {\n            return this.$refs.dropdownButton ? (event.target === this.$refs.dropdownButton || this.$refs.dropdownButton.$el.contains(event.target)) : false;\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        selectItem(event, item) {\n            if (this.multiple) {\n                this.$refs.input.value = '';\n                this.inputTextValue = '';\n\n                if (!this.isSelected(item)) {\n                    let newValue = this.modelValue ? [...this.modelValue, item] : [item];\n                    this.$emit('update:modelValue', newValue);\n                }\n            }\n            else {\n                this.$emit('update:modelValue', item);\n            }\n\n            this.$emit('item-select', {\n                originalEvent: event,\n                value: item\n            });\n\n            this.focus();\n            this.hideOverlay();\n        },\n        onMultiContainerClick(event) {\n            this.focus();\n            if(this.completeOnFocus) {\n                this.search(event, '', 'click');\n            }\n        },\n        removeItem(event, index) {\n            let removedValue = this.modelValue[index];\n            let newValue = this.modelValue.filter((val, i) => (index !== i));\n            this.$emit('update:modelValue', newValue);\n            this.$emit('item-unselect', {\n                originalEvent: event,\n                value: removedValue\n            });\n        },\n        onDropdownClick(event) {\n            this.focus();\n            const query = this.$refs.input.value;\n\n            if (this.dropdownMode === 'blank')\n                this.search(event, '', 'dropdown');\n            else if (this.dropdownMode === 'current')\n                this.search(event, query, 'dropdown');\n\n            this.$emit('dropdown-click', {\n                originalEvent: event,\n                query: query\n            });\n        },\n        getItemContent(item) {\n            return this.field ? ObjectUtils.resolveFieldData(item, this.field) : item;\n        },\n        showOverlay() {\n            this.overlayVisible = true;\n        },\n        hideOverlay() {\n            this.overlayVisible = false;\n        },\n        focus() {\n            this.$refs.input.focus();\n        },\n        search(event, query, source) {\n            //allow empty string but not undefined or null\n            if (query === undefined || query === null) {\n                return;\n            }\n\n            //do not search blank values on input change\n            if (source === 'input' && query.trim().length === 0) {\n                return;\n            }\n\n            this.searching = true;\n            this.$emit('complete', {\n                originalEvent: event,\n                query: query\n            });\n        },\n        onInputClicked(event) {\n            if(this.completeOnFocus) {\n                this.search(event, '', 'click');\n            }\n        },\n        onInput(event) {\n            this.inputTextValue = event.target.value;\n\n            if (this.timeout) {\n                clearTimeout(this.timeout);\n            }\n\n            let query = event.target.value;\n            if (!this.multiple) {\n                this.$emit('update:modelValue', query);\n            }\n\n            if (query.length === 0) {\n                this.hideOverlay();\n                this.$emit('clear');\n            }\n            else {\n                if (query.length >= this.minLength) {\n                    this.timeout = setTimeout(() => {\n                        this.search(event, query, 'input');\n                    }, this.delay);\n                }\n                else {\n                    this.hideOverlay();\n                }\n            }\n        },\n        onFocus() {\n            this.focused = true;\n        },\n        onBlur() {\n            this.focused = false;\n        },\n        onKeyDown(event) {\n            if (this.overlayVisible) {\n                let highlightItem = DomHandler.findSingle(this.overlay, 'li.p-highlight');\n\n                switch(event.which) {\n                    //down\n                    case 40:\n                        if (highlightItem) {\n                            let nextElement = this.findNextItem(highlightItem);\n                            if (nextElement) {\n                                DomHandler.addClass(nextElement, 'p-highlight');\n                                DomHandler.removeClass(highlightItem, 'p-highlight');\n                                DomHandler.scrollInView(this.overlay, nextElement);\n                            }\n                        }\n                        else {\n                            highlightItem = this.overlay.firstElementChild.firstElementChild;\n                            if (DomHandler.hasClass(highlightItem, 'p-autocomplete-item-group')) {\n                                highlightItem = this.findNextItem(highlightItem);\n                            }\n\n                            if (highlightItem) {\n                                DomHandler.addClass(highlightItem, 'p-highlight');\n                            }\n                        }\n\n                        event.preventDefault();\n                    break;\n\n                    //up\n                    case 38:\n                        if (highlightItem) {\n                            let previousElement = this.findPrevItem(highlightItem);\n                            if (previousElement) {\n                                DomHandler.addClass(previousElement, 'p-highlight');\n                                DomHandler.removeClass(highlightItem, 'p-highlight');\n                                DomHandler.scrollInView(this.overlay, previousElement);\n                            }\n                        }\n\n                        event.preventDefault();\n                    break;\n\n                    //enter\n                    case 13:\n                        if (highlightItem) {\n                            this.selectHighlightItem(event, highlightItem);\n                            this.hideOverlay();\n                        }\n\n                        event.preventDefault();\n                    break;\n\n                    //escape\n                    case 27:\n                        this.hideOverlay();\n                        event.preventDefault();\n                    break;\n\n                    //tab\n                    case 9:\n                        if (highlightItem) {\n                            this.selectHighlightItem(event, highlightItem);\n                        }\n\n                        this.hideOverlay();\n                    break;\n\n                    default:\n                    break;\n                }\n            }\n\n            if (this.multiple) {\n                switch(event.which) {\n                    //backspace\n                    case 8:\n                        if (this.modelValue && this.modelValue.length && !this.$refs.input.value) {\n                            let removedValue = this.modelValue[this.modelValue.length - 1];\n                            let newValue = this.modelValue.slice(0, -1);\n\n                            this.$emit('update:modelValue', newValue);\n                            this.$emit('item-unselect', {\n                                originalEvent: event,\n                                value: removedValue\n                            });\n                        }\n                    break;\n\n                    default:\n                    break;\n                }\n            }\n        },\n        selectHighlightItem(event, item) {\n            if (this.optionGroupLabel) {\n                let optionGroup = this.suggestions[item.dataset.group];\n                this.selectItem(event, this.getOptionGroupChildren(optionGroup)[item.dataset.index]);\n            }\n            else {\n                this.selectItem(event, this.suggestions[DomHandler.index(item)]);\n            }\n        },\n        findNextItem(item) {\n            let nextItem = item.nextElementSibling;\n\n            if (nextItem)\n                return DomHandler.hasClass(nextItem, 'p-autocomplete-item-group') ? this.findNextItem(nextItem) : nextItem;\n            else\n                return null;\n        },\n        findPrevItem(item) {\n            let prevItem = item.previousElementSibling;\n\n            if (prevItem)\n                return DomHandler.hasClass(prevItem, 'p-autocomplete-item-group') ? this.findPrevItem(prevItem) : prevItem;\n            else\n                return null;\n        },\n        onChange(event) {\n            if (this.forceSelection) {\n                let valid = false;\n                let inputValue = event.target.value.trim();\n\n                if (this.suggestions)  {\n                    for (let item of this.suggestions) {\n                        let itemValue = this.field ? ObjectUtils.resolveFieldData(item, this.field) : item;\n                        if (itemValue && inputValue === itemValue.trim()) {\n                            valid = true;\n                            this.selectItem(event, item);\n                            break;\n                        }\n                    }\n                }\n\n                if (!valid) {\n                    this.$refs.input.value = '';\n                    this.inputTextValue = '';\n                    this.$emit('clear');\n                    if (!this.multiple) {\n                        this.$emit('update:modelValue', null);\n                    }\n                }\n            }\n        },\n        isSelected(val) {\n            let selected = false;\n            if (this.modelValue && this.modelValue.length) {\n                for (let i = 0; i < this.modelValue.length; i++) {\n                    if (ObjectUtils.equals(this.modelValue[i], val)) {\n                        selected = true;\n                        break;\n                    }\n                }\n            }\n\n            return selected;\n        },\n        overlayRef(el) {\n            this.overlay = el;\n        },\n        virtualScrollerRef(el) {\n            this.virtualScroller = el;\n        },\n        onOverlayClick(event) {\n            OverlayEventBus.emit('overlay-click', {\n                originalEvent: event,\n                target: this.$el\n            });\n        }\n    },\n    computed: {\n        containerClass() {\n            return ['p-autocomplete p-component p-inputwrapper', this.class, {\n                'p-autocomplete-dd': this.dropdown,\n                'p-autocomplete-multiple': this.multiple,\n                'p-inputwrapper-filled': ((this.modelValue) || (this.inputTextValue && this.inputTextValue.length)),\n                'p-inputwrapper-focus': this.focused\n            }];\n        },\n        inputFieldClass() {\n            return ['p-autocomplete-input p-inputtext p-component', this.inputClass, {\n                'p-autocomplete-dd-input': this.dropdown,\n                'p-disabled': this.$attrs.disabled\n            }];\n        },\n        multiContainerClass() {\n            return ['p-autocomplete-multiple-container p-component p-inputtext', {\n                'p-disabled': this.$attrs.disabled,\n                'p-focus': this.focused\n            }];\n        },\n        panelStyleClass() {\n            return [\n                'p-autocomplete-panel p-component', this.panelClass, {\n                'p-input-filled': this.$primevue.config.inputStyle === 'filled',\n                'p-ripple-disabled': this.$primevue.config.ripple === false\n            }];\n        },\n        inputValue() {\n            if (this.modelValue) {\n                if (this.field && typeof this.modelValue === 'object') {\n                    const resolvedFieldData = ObjectUtils.resolveFieldData(this.modelValue, this.field);\n                    return resolvedFieldData != null ? resolvedFieldData : this.modelValue;\n                }\n                else\n                    return this.modelValue;\n            }\n            else {\n                return '';\n            }\n        },\n        listId() {\n            return UniqueComponentId() + '_list';\n        },\n        appendDisabled() {\n            return this.appendTo === 'self';\n        },\n        appendTarget() {\n            return this.appendDisabled ? null : this.appendTo;\n        },\n        virtualScrollerDisabled() {\n            return !this.virtualScrollerOptions;\n        }\n    },\n    components: {\n        'Button': Button,\n        'VirtualScroller': VirtualScroller\n    },\n    directives: {\n        'ripple': Ripple\n    }\n}\n</script>\n\n<style>\n.p-autocomplete {\n    display: inline-flex;\n    position: relative;\n}\n\n.p-autocomplete-loader {\n    position: absolute;\n    top: 50%;\n    margin-top: -.5rem;\n}\n\n.p-autocomplete-dd .p-autocomplete-input {\n    flex: 1 1 auto;\n    width: 1%;\n}\n\n.p-autocomplete-dd .p-autocomplete-input,\n.p-autocomplete-dd .p-autocomplete-multiple-container {\n     border-top-right-radius: 0;\n     border-bottom-right-radius: 0;\n }\n\n.p-autocomplete-dd .p-autocomplete-dropdown {\n     border-top-left-radius: 0;\n     border-bottom-left-radius: 0px;\n}\n\n.p-autocomplete .p-autocomplete-panel {\n    min-width: 100%;\n}\n\n.p-autocomplete-panel {\n    position: absolute;\n    overflow: auto;\n    top: 0;\n    left: 0;\n}\n\n.p-autocomplete-items {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n}\n\n.p-autocomplete-item {\n    cursor: pointer;\n    white-space: nowrap;\n    position: relative;\n    overflow: hidden;\n}\n\n.p-autocomplete-multiple-container {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    cursor: text;\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n}\n\n.p-autocomplete-token {\n    cursor: default;\n    display: inline-flex;\n    align-items: center;\n    flex: 0 0 auto;\n}\n\n.p-autocomplete-token-icon {\n    cursor: pointer;\n}\n\n.p-autocomplete-input-token {\n    flex: 1 1 auto;\n    display: inline-flex;\n}\n\n.p-autocomplete-input-token input {\n    border: 0 none;\n    outline: 0 none;\n    background-color: transparent;\n    margin: 0;\n    padding: 0;\n    box-shadow: none;\n    border-radius: 0;\n    width: 100%;\n}\n\n.p-fluid .p-autocomplete {\n    display: flex;\n}\n\n.p-fluid .p-autocomplete-dd .p-autocomplete-input {\n    width: 1%;\n}\n</style>\n"],"sourceRoot":""}]}