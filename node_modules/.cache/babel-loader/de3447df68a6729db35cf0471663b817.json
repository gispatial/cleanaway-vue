{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treetable/TreeTableSelectionDemo.vue?vue&type=template&id=539303d8","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treetable/TreeTableSelectionDemo.vue","mtime":1634589566292},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treetable/TreeTableSelectionDemo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>TreeTable <span>Selection</span></h1>\n                <p>TreeTable supports <b>single</b>, <b>multiple</b> and <b>checkbox</b> as selection modes.</p>\n            </div>\n            <AppDemoActions />\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card\">\n                <h5>Single Selection</h5>\n                <TreeTable :value=\"nodes\" selectionMode=\"single\" v-model:selectionKeys=\"selectedKey1\">\n                    <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                    <Column field=\"size\" header=\"Size\"></Column>\n                    <Column field=\"type\" header=\"Type\"></Column>\n                </TreeTable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Multiple Selection with MetaKey</h5>\n                <TreeTable :value=\"nodes\" selectionMode=\"multiple\" v-model:selectionKeys=\"selectedKeys1\">\n                    <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                    <Column field=\"size\" header=\"Size\"></Column>\n                    <Column field=\"type\" header=\"Type\"></Column>\n                </TreeTable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Multiple Selection without MetaKey</h5>\n                <TreeTable :value=\"nodes\" selectionMode=\"multiple\" v-model:selectionKeys=\"selectedKeys2\" :metaKeySelection=\"false\">\n                    <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                    <Column field=\"size\" header=\"Size\"></Column>\n                    <Column field=\"type\" header=\"Type\"></Column>\n                </TreeTable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Checkbox Selection</h5>\n                <TreeTable :value=\"nodes\" selectionMode=\"checkbox\" v-model:selectionKeys=\"selectedKeys3\">\n                    <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                    <Column field=\"size\" header=\"Size\"></Column>\n                    <Column field=\"type\" header=\"Type\"></Column>\n                </TreeTable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Events</h5>\n                <TreeTable :value=\"nodes\" selectionMode=\"single\" v-model:selectionKeys=\"selectedKey2\"\n                    @node-select=\"onNodeSelect\" @node-unselect=\"onNodeUnselect\">\n                    <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                    <Column field=\"size\" header=\"Size\"></Column>\n                    <Column field=\"type\" header=\"Type\"></Column>\n                </TreeTable>\n            </div>\n        </div>\n\n        <AppDoc name=\"TreeTableSelectionDemo\" :sources=\"sources\" :service=\"['NodeService']\" :data=\"['treetablenodes']\" github=\"treetable/TreeTableSelectionDemo.vue\" />\n    </div>\n</template>\n\n<script>\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            selectedKey1: null,\n            selectedKey2: null,\n            selectedKeys1: null,\n            selectedKeys2: null,\n            selectedKeys3: null,\n            nodes: null,\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div>\n        <Toast />\n\n        <div class=\"card\">\n            <h5>Single Selection</h5>\n            <TreeTable :value=\"nodes\" selectionMode=\"single\" v-model:selectionKeys=\"selectedKey1\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\"></Column>\n                <Column field=\"type\" header=\"Type\"></Column>\n            </TreeTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Multiple Selection with MetaKey</h5>\n            <TreeTable :value=\"nodes\" selectionMode=\"multiple\" v-model:selectionKeys=\"selectedKeys1\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\"></Column>\n                <Column field=\"type\" header=\"Type\"></Column>\n            </TreeTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Multiple Selection without MetaKey</h5>\n            <TreeTable :value=\"nodes\" selectionMode=\"multiple\" v-model:selectionKeys=\"selectedKeys2\" :metaKeySelection=\"false\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\"></Column>\n                <Column field=\"type\" header=\"Type\"></Column>\n            </TreeTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Checkbox Selection</h5>\n            <TreeTable :value=\"nodes\" selectionMode=\"checkbox\" v-model:selectionKeys=\"selectedKeys3\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\"></Column>\n                <Column field=\"type\" header=\"Type\"></Column>\n            </TreeTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Events</h5>\n            <TreeTable :value=\"nodes\" selectionMode=\"single\" v-model:selectionKeys=\"selectedKey2\"\n                @nodeSelect=\"onNodeSelect\" @nodeUnselect=\"onNodeUnselect\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\"></Column>\n                <Column field=\"type\" header=\"Type\"></Column>\n            </TreeTable>\n        </div>\n    </div>                    \n</template>\n\n<script>\nimport NodeService from './service/NodeService';\n\nexport default {\n    data() {\n        return {\n            selectedKey1: null,\n            selectedKey2: null,\n            selectedKeys1: null,\n            selectedKeys2: null,\n            selectedKeys3: null,\n            nodes: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeTableNodes().then(data => this.nodes = data);\n    },\n    methods: {\n        onNodeSelect(node) {\n            this.$toast.add({severity:'success', summary: 'Node Selected', detail: node.data.name, life: 3000});\n        },\n        onNodeUnselect(node) {\n            this.$toast.add({severity:'success', summary: 'Node Unselected', detail: node.data.name, life: 3000});\n        }\n    }\n}\n<\\\\/script>\n`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div>\n        <Toast />\n\n        <div class=\"card\">\n            <h5>Single Selection</h5>\n            <TreeTable :value=\"nodes\" selectionMode=\"single\" v-model:selectionKeys=\"selectedKey1\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\"></Column>\n                <Column field=\"type\" header=\"Type\"></Column>\n            </TreeTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Multiple Selection with MetaKey</h5>\n            <TreeTable :value=\"nodes\" selectionMode=\"multiple\" v-model:selectionKeys=\"selectedKeys1\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\"></Column>\n                <Column field=\"type\" header=\"Type\"></Column>\n            </TreeTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Multiple Selection without MetaKey</h5>\n            <TreeTable :value=\"nodes\" selectionMode=\"multiple\" v-model:selectionKeys=\"selectedKeys2\" :metaKeySelection=\"false\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\"></Column>\n                <Column field=\"type\" header=\"Type\"></Column>\n            </TreeTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Checkbox Selection</h5>\n            <TreeTable :value=\"nodes\" selectionMode=\"checkbox\" v-model:selectionKeys=\"selectedKeys3\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\"></Column>\n                <Column field=\"type\" header=\"Type\"></Column>\n            </TreeTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Events</h5>\n            <TreeTable :value=\"nodes\" selectionMode=\"single\" v-model:selectionKeys=\"selectedKey2\"\n                @nodeSelect=\"onNodeSelect\" @nodeUnselect=\"onNodeUnselect\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\"></Column>\n                <Column field=\"type\" header=\"Type\"></Column>\n            </TreeTable>\n        </div>\n    </div>                    \n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { useToast } from 'primevue/usetoast';\nimport NodeService from './service/NodeService';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            nodeService.value.getTreeTableNodes().then(data => nodes.value = data);\n        })\n\n        const toast = useToast();\n        const selectedKey1 = ref();\n        const selectedKey2 = ref();\n        const selectedKeys1 = ref();\n        const selectedKeys2 = ref();\n        const selectedKeys3 = ref();\n        const nodes = ref();\n        const nodeService = ref(new NodeService());\n        const onNodeSelect = (node) => {\n            toast.add({severity:'success', summary: 'Node Selected', detail: node.data.name, life: 3000});\n        }\n        const onNodeUnselect = (node) => {\n            toast.add({severity:'success', summary: 'Node Unselected', detail: node.data.name, life: 3000});\n        }\n\n        return { selectedKey1, selectedKey2, selectedKeys1, selectedKeys2, selectedKeys3, nodes, onNodeSelect, onNodeUnselect}\n    }\n}\n<\\\\/script>\n`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/treetable/treetable.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/column/column.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/toast/toast.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/toastservice/toastservice.min.js\"><\\\\/script>\n        <script src=\"./NodeService.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <p-toast></p-toast>\n\n            <div class=\"card\">\n                <h5>Single Selection</h5>\n                <p-treetable :value=\"nodes\" selection-mode=\"single\" v-model:selection-keys=\"selectedKey1\">\n                    <p-column field=\"name\" header=\"Name\" :expander=\"true\"></p-column>\n                    <p-column field=\"size\" header=\"Size\"></p-column>\n                    <p-column field=\"type\" header=\"Type\"></p-column>\n                </p-treetable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Multiple Selection with MetaKey</h5>\n                <p-treetable :value=\"nodes\" selection-mode=\"multiple\" v-model:selection-keys=\"selectedKeys1\">\n                    <p-column field=\"name\" header=\"Name\" :expander=\"true\"></p-column>\n                    <p-column field=\"size\" header=\"Size\"></p-column>\n                    <p-column field=\"type\" header=\"Type\"></p-column>\n                </p-treetable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Multiple Selection without MetaKey</h5>\n                <p-treetable :value=\"nodes\" selection-mode=\"multiple\" v-model:selection-keys=\"selectedKeys2\" :meta-key-selection=\"false\">\n                    <p-column field=\"name\" header=\"Name\" :expander=\"true\"></p-column>\n                    <p-column field=\"size\" header=\"Size\"></p-column>\n                    <p-column field=\"type\" header=\"Type\"></p-column>\n                </p-treetable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Checkbox Selection</h5>\n                <p-treetable :value=\"nodes\" selection-mode=\"checkbox\" v-model:selection-keys=\"selectedKeys3\">\n                    <p-column field=\"name\" header=\"Name\" :expander=\"true\"></p-column>\n                    <p-column field=\"size\" header=\"Size\"></p-column>\n                    <p-column field=\"type\" header=\"Type\"></p-column>\n                </p-treetable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Events</h5>\n                <p-treetable :value=\"nodes\" selection-mode=\"single\" v-model:selection-keys=\"selectedKey2\"\n                    @node-select=\"onNodeSelect\" @node-unselect=\"onNodeUnselect\">\n                    <p-column field=\"name\" header=\"Name\" :expander=\"true\"></p-column>\n                    <p-column field=\"size\" header=\"Size\"></p-column>\n                    <p-column field=\"type\" header=\"Type\"></p-column>\n                </p-treetable>\n            </div>\n        </div>                    \n\n        <script type=\"module\">\n        const { createApp, ref, onMounted } = Vue;\n        const { useToast } = primevue.usetoast;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    nodeService.value.getTreeTableNodes().then(data => nodes.value = data);\n                })\n\n                const toast = useToast();\n                const selectedKey1 = ref();\n                const selectedKey2 = ref();\n                const selectedKeys1 = ref();\n                const selectedKeys2 = ref();\n                const selectedKeys3 = ref();\n                const nodes = ref();\n                const nodeService = ref(new NodeService());\n                const onNodeSelect = (node) => {\n                    toast.add({severity:'success', summary: 'Node Selected', detail: node.data.name, life: 3000});\n                }\n                const onNodeUnselect = (node) => {\n                    toast.add({severity:'success', summary: 'Node Unselected', detail: node.data.name, life: 3000});\n                }\n\n                return { selectedKey1, selectedKey2, selectedKeys1, selectedKeys2, selectedKeys3, nodes, onNodeSelect, onNodeUnselect}\n            },\n            components: {\n                \"p-treetable\": primevue.treetable,\n                \"p-column\": primevue.column,\n                \"p-toast\": primevue.toast\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .use(primevue.toastservice)\n            .mount(\"#app\");\n        <\\\\/script>\n`\n                }\n            }\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeTableNodes().then(data => this.nodes = data);\n    },\n    methods: {\n        onNodeSelect(node) {\n            this.$toast.add({severity:'success', summary: 'Node Selected', detail: node.data.name, life: 3000});\n        },\n        onNodeUnselect(node) {\n            this.$toast.add({severity:'success', summary: 'Node Unselected', detail: node.data.name, life: 3000});\n        }\n    }\n}\n</script>"],"sourceRoot":""}]}