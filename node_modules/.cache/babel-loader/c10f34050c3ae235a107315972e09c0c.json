{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treetable/TreeTableSortDemo.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treetable/TreeTableSortDemo.vue","mtime":1634589566292},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treetable/TreeTableSortDemo.vue"],"names":[],"mappings":"AA4CA,OAAO,WAAP,MAAwB,2BAAxB;AAEA,eAAe;AACX,EAAA,IADW,kBACJ;AACH,WAAO;AACH,MAAA,KAAK,EAAE,IADJ;AAEH,MAAA,OAAO,EAAE;AACL,uBAAe;AACX,UAAA,OAAO,EAAE,oBADE;AAEX,UAAA,OAAO;AAFI,SADV;AAuDL,2BAAmB;AACf,UAAA,OAAO,EAAE,wBADM;AAEf,UAAA,OAAO;AAFQ,SAvDd;AA4GL,0BAAkB;AACd,UAAA,OAAO,EAAE,gBADK;AAEd,UAAA,OAAO,sOAFO;AAKd,UAAA,OAAO;AALO;AA5Gb;AAFN,KAAP;AA4KH,GA9KU;AA+KX,EAAA,WAAW,EAAE,IA/KF;AAgLX,EAAA,OAhLW,qBAgLD;AACN,SAAK,WAAL,GAAmB,IAAI,WAAJ,EAAnB;AACH,GAlLU;AAmLX,EAAA,OAnLW,qBAmLD;AAAA;;AACN,SAAK,WAAL,CAAiB,iBAAjB,GAAqC,IAArC,CAA0C,UAAA,IAAG;AAAA,aAAK,KAAI,CAAC,KAAL,GAAa,IAAlB;AAAA,KAA7C;AACJ;AArLW,CAAf","sourcesContent":["<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>TreeTable <span>Sort</span></h1>\n               <p>TreeTable supports both single column and multiple column sorting..</p>\n            </div>\n            <AppDemoActions />\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card\">\n                <h5>Single Column Sorting</h5>\n                <TreeTable :value=\"nodes\" sortMode=\"single\">\n                    <Column field=\"name\" header=\"Name\" :expander=\"true\" :sortable=\"true\"></Column>\n                    <Column field=\"size\" header=\"Size\" :sortable=\"true\"></Column>\n                    <Column field=\"type\" header=\"Type\" :sortable=\"true\"></Column>\n                </TreeTable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Multiple Column Sorting</h5>\n                <TreeTable :value=\"nodes\" sortMode=\"multiple\">\n                    <Column field=\"name\" header=\"Name\" :expander=\"true\" :sortable=\"true\"></Column>\n                    <Column field=\"size\" header=\"Size\" :sortable=\"true\"></Column>\n                    <Column field=\"type\" header=\"Type\" :sortable=\"true\"></Column>\n                </TreeTable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Removable Sort</h5>\n                <TreeTable :value=\"nodes\" sortMode=\"single\" removableSort>\n                    <Column field=\"name\" header=\"Name\" :expander=\"true\" :sortable=\"true\"></Column>\n                    <Column field=\"size\" header=\"Size\" :sortable=\"true\"></Column>\n                    <Column field=\"type\" header=\"Type\" :sortable=\"true\"></Column>\n                </TreeTable>\n            </div>\n        </div>\n        \n        <AppDoc name=\"TreeTableSortDemo\" :sources=\"sources\" :service=\"['NodeService']\" :data=\"['treetablenodes']\" github=\"treetable/TreeTableSortDemo.vue\" />\n    </div>\n</template>\n\n<script>\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            nodes: null,\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div>\n        <div class=\"card\">\n            <h5>Single Column Sorting</h5>\n            <TreeTable :value=\"nodes\" sortMode=\"single\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\" :sortable=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\" :sortable=\"true\"></Column>\n                <Column field=\"type\" header=\"Type\" :sortable=\"true\"></Column>\n            </TreeTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Multiple Column Sorting</h5>\n            <TreeTable :value=\"nodes\" sortMode=\"multiple\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\" :sortable=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\" :sortable=\"true\"></Column>\n                <Column field=\"type\" header=\"Type\" :sortable=\"true\"></Column>\n            </TreeTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Removable Sort</h5>\n            <TreeTable :value=\"nodes\" sortMode=\"single\" removableSort>\n                <Column field=\"name\" header=\"Name\" :expander=\"true\" :sortable=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\" :sortable=\"true\"></Column>\n                <Column field=\"type\" header=\"Type\" :sortable=\"true\"></Column>\n            </TreeTable>\n        </div>\n    </div>                    \n</template>\n\n<script>\nimport NodeService from './service/NodeService';\n\nexport default {\n    data() {\n        return {\n            nodes: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeTableNodes().then(data => this.nodes = data);\n    }\n}\n<\\\\/script>\n`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div>\n        <div class=\"card\">\n            <h5>Single Column Sorting</h5>\n            <TreeTable :value=\"nodes\" sortMode=\"single\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\" :sortable=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\" :sortable=\"true\"></Column>\n                <Column field=\"type\" header=\"Type\" :sortable=\"true\"></Column>\n            </TreeTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Multiple Column Sorting</h5>\n            <TreeTable :value=\"nodes\" sortMode=\"multiple\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\" :sortable=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\" :sortable=\"true\"></Column>\n                <Column field=\"type\" header=\"Type\" :sortable=\"true\"></Column>\n            </TreeTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Removable Sort</h5>\n            <TreeTable :value=\"nodes\" sortMode=\"single\" removableSort>\n                <Column field=\"name\" header=\"Name\" :expander=\"true\" :sortable=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\" :sortable=\"true\"></Column>\n                <Column field=\"type\" header=\"Type\" :sortable=\"true\"></Column>\n            </TreeTable>\n        </div>\n    </div>                  \n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport NodeService from './service/NodeService';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            nodeService.value.getTreeTableNodes().then(data => nodes.value = data);\n        })\n\n        const nodes = ref();\n        const nodeService = ref(new NodeService());\n\n        return { nodes, nodeService }\n    }\n}\n<\\\\/script>\n`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/treetable/treetable.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/column/column.min.js\"><\\\\/script>\n        <script src=\"./NodeService.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <div class=\"card\">\n                <h5>Single Column Sorting</h5>\n                <p-treetable :value=\"nodes\" sort-mode=\"single\">\n                    <p-column field=\"name\" header=\"Name\" :expander=\"true\" :sortable=\"true\"></p-column>\n                    <p-column field=\"size\" header=\"Size\" :sortable=\"true\"></p-column>\n                    <p-column field=\"type\" header=\"Type\" :sortable=\"true\"></p-column>\n                </p-treetable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Multiple Column Sorting</h5>\n                <p-treetable :value=\"nodes\" sort-mode=\"multiple\">\n                    <p-column field=\"name\" header=\"Name\" :expander=\"true\" :sortable=\"true\"></p-column>\n                    <p-column field=\"size\" header=\"Size\" :sortable=\"true\"></p-column>\n                    <p-column field=\"type\" header=\"Type\" :sortable=\"true\"></p-column>\n                </p-treetable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Removable Sort</h5>\n                <p-treetable :value=\"nodes\" sort-mode=\"single\" removable-sort>\n                    <p-column field=\"name\" header=\"Name\" :expander=\"true\" :sortable=\"true\"></p-column>\n                    <p-column field=\"size\" header=\"Size\" :sortable=\"true\"></p-column>\n                    <p-column field=\"type\" header=\"Type\" :sortable=\"true\"></p-column>\n                </p-treetable>\n            </div>\n        </div>                  \n\n        <script type=\"module\">\n        const { createApp, ref, onMounted } = Vue;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    nodeService.value.getTreeTableNodes().then(data => nodes.value = data);\n                })\n\n                const nodes = ref();\n                const nodeService = ref(new NodeService());\n\n                return { nodes, nodeService }\n            },\n            components: {\n                \"p-treetable\": primevue.treetable,\n                \"p-column\": primevue.column\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\\\/script>\n`\n                }\n            }\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeTableNodes().then(data => this.nodes = data);\n    }\n}\n</script>"],"sourceRoot":""}]}