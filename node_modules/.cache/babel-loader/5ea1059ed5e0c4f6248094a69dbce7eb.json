{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/listbox/Listbox.vue?vue&type=template&id=25718d4b","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/listbox/Listbox.vue","mtime":1634589566224},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/listbox/Listbox.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"p-listbox p-component\">\n        <slot name=\"header\" :value=\"modelValue\" :options=\"visibleOptions\"></slot>\n        <div class=\"p-listbox-header\" v-if=\"filter\">\n            <div class=\"p-listbox-filter-container\">\n                <input type=\"text\" class=\"p-listbox-filter p-inputtext p-component\" v-model=\"filterValue\" :placeholder=\"filterPlaceholder\" @input=\"onFilterChange\">\n                <span class=\"p-listbox-filter-icon pi pi-search\"></span>\n            </div>\n        </div>\n        <div class=\"p-listbox-list-wrapper\" :style=\"listStyle\">\n            <VirtualScroller :ref=\"virtualScrollerRef\" v-bind=\"virtualScrollerOptions\" :style=\"listStyle\" :items=\"visibleOptions\" :disabled=\"virtualScrollerDisabled\">\n                <template v-slot:content=\"{ styleClass, contentRef, items, getItemOptions }\">\n                    <ul :ref=\"contentRef\" :class=\"['p-listbox-list', styleClass]\" role=\"listbox\" aria-multiselectable=\"multiple\">\n                        <template v-if=\"!optionGroupLabel\">\n                            <li v-for=\"(option, i) of items\" :tabindex=\"isOptionDisabled(option) ? null : '0'\" :class=\"['p-listbox-item', {'p-highlight': isSelected(option), 'p-disabled': isOptionDisabled(option)}]\" v-ripple\n                                :key=\"getOptionRenderKey(option)\" @click=\"onOptionSelect($event, option)\" @touchend=\"onOptionTouchEnd()\" @keydown=\"onOptionKeyDown($event, option)\" role=\"option\" :aria-label=\"getOptionLabel(option)\" :aria-selected=\"isSelected(option)\" >\n                                <slot name=\"option\" :option=\"option\" :index=\"getOptionIndex(i, getItemOptions)\">{{getOptionLabel(option)}} </slot>\n                            </li>\n                        </template>\n                        <template v-else>\n                            <template v-for=\"(optionGroup, i) of items\" :key=\"getOptionGroupRenderKey(optionGroup)\">\n                                <li  class=\"p-listbox-item-group\">\n                                    <slot name=\"optiongroup\" :option=\"optionGroup\" :index=\"getOptionIndex(i, getItemOptions)\">{{getOptionGroupLabel(optionGroup)}}</slot>\n                                </li>\n                                <li v-for=\"(option, i) of getOptionGroupChildren(optionGroup)\" :tabindex=\"isOptionDisabled(option) ? null : '0'\" :class=\"['p-listbox-item', {'p-highlight': isSelected(option), 'p-disabled': isOptionDisabled(option)}]\" v-ripple\n                                    :key=\"getOptionRenderKey(option)\" @click=\"onOptionSelect($event, option)\" @touchend=\"onOptionTouchEnd()\" @keydown=\"onOptionKeyDown($event, option)\" role=\"option\" :aria-label=\"getOptionLabel(option)\" :aria-selected=\"isSelected(option)\" >\n                                    <slot name=\"option\" :option=\"option\" :index=\"getOptionIndex(i, getItemOptions)\">{{getOptionLabel(option)}}</slot>\n                                </li>\n                            </template>\n                        </template>\n                        <li v-if=\"filterValue && (!items || (items && items.length === 0))\" class=\"p-listbox-empty-message\">\n                            <slot name=\"emptyfilter\">{{emptyFilterMessageText}}</slot>\n                        </li>\n                        <li v-else-if=\"(!options || (options && options.length === 0))\" class=\"p-listbox-empty-message\">\n                            <slot name=\"empty\">{{emptyMessageText}}</slot>\n                        </li>\n                    </ul>\n                </template>\n                <template v-slot:loader=\"{ options }\" v-if=\"$slots.loader\">\n                    <slot name=\"loader\" :options=\"options\"></slot>\n                </template>\n            </VirtualScroller>\n        </div>\n        <slot name=\"footer\" :value=\"modelValue\" :options=\"visibleOptions\"></slot>\n    </div>\n</template>\n\n<script>\nimport {ObjectUtils} from 'primevue/utils';\nimport {DomHandler} from 'primevue/utils';\nimport {FilterService} from 'primevue/api';\nimport Ripple from 'primevue/ripple';\nimport VirtualScroller from 'primevue/virtualscroller';\n\nexport default {\n    name: 'Listbox',\n    emits: ['update:modelValue', 'change', 'filter'],\n    props: {\n        modelValue: null,\n        options: Array,\n        optionLabel: null,\n        optionValue: null,\n        optionDisabled: null,\n        optionGroupLabel: null,\n        optionGroupChildren: null,\n\t\tlistStyle: null,\n        disabled: Boolean,\n        dataKey: null,\n        multiple: Boolean,\n        metaKeySelection: Boolean,\n        filter: Boolean,\n        filterPlaceholder: String,\n        filterLocale: String,\n        filterMatchMode: {\n            type: String,\n            default: 'contains'\n        },\n        filterFields: {\n            type: Array,\n            default: null\n        },\n        emptyFilterMessage: {\n            type: String,\n            default: null\n        },\n        emptyMessage: {\n            type: String,\n            default: null\n        },\n        virtualScrollerOptions: {\n            type: Object,\n            default: null\n        }\n    },\n    optionTouched: false,\n    virtualScroller: null,\n    data() {\n        return {\n            filterValue: null\n        };\n    },\n    methods: {\n        getOptionIndex(index, fn) {\n            return this.virtualScrollerDisabled ? index : (fn && fn(index)['index']);\n        },\n        getOptionLabel(option) {\n            return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option;\n        },\n        getOptionValue(option) {\n            return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : option;\n        },\n        getOptionRenderKey(option) {\n            return this.dataKey ? ObjectUtils.resolveFieldData(option, this.dataKey) : this.getOptionLabel(option);\n        },\n        isOptionDisabled(option) {\n            return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : false;\n        },\n        getOptionGroupRenderKey(optionGroup) {\n            return ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel);\n        },\n        getOptionGroupLabel(optionGroup) {\n            return ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel);\n        },\n        getOptionGroupChildren(optionGroup) {\n            return ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren);\n        },\n        onOptionSelect(event, option) {\n            if (this.disabled || this.isOptionDisabled(option)) {\n                return;\n            }\n\n            if(this.multiple)\n                this.onOptionSelectMultiple(event, option);\n            else\n                this.onOptionSelectSingle(event, option);\n\n            this.optionTouched = false;\n        },\n        onOptionTouchEnd() {\n            if (this.disabled) {\n                return;\n            }\n\n            this.optionTouched = true;\n        },\n        onOptionSelectSingle(event, option) {\n            let selected = this.isSelected(option);\n            let valueChanged = false;\n            let value = null;\n            let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n\n            if (metaSelection) {\n                let metaKey = (event.metaKey || event.ctrlKey);\n\n                if (selected) {\n                    if (metaKey) {\n                        value = null;\n                        valueChanged = true;\n                    }\n                }\n                else {\n                    value = this.getOptionValue(option);\n                    valueChanged = true;\n                }\n            }\n            else {\n                value = selected ? null : this.getOptionValue(option);\n                valueChanged = true;\n            }\n\n            if (valueChanged) {\n                this.updateModel(event, value);\n            }\n        },\n        onOptionSelectMultiple(event, option) {\n            let selected = this.isSelected(option);\n            let valueChanged = false;\n            let value = null;\n            let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n\n            if (metaSelection) {\n                let metaKey = (event.metaKey || event.ctrlKey);\n\n                if (selected) {\n                    if(metaKey)\n                        value = this.removeOption(option);\n                    else\n                        value = [this.getOptionValue(option)];\n\n                    valueChanged = true;\n                }\n                else {\n                    value = (metaKey) ? this.modelValue || [] : [];\n                    value = [...value, this.getOptionValue(option)];\n                    valueChanged = true;\n                }\n            }\n            else {\n                if (selected)\n                    value = this.removeOption(option);\n                else\n                    value = [...this.modelValue || [], this.getOptionValue(option)];\n\n                valueChanged = true;\n            }\n\n            if(valueChanged) {\n                this.updateModel(event, value);\n            }\n        },\n        isSelected(option) {\n            let selected = false;\n            let optionValue = this.getOptionValue(option);\n\n            if (this.multiple) {\n                if (this.modelValue) {\n                    for (let val of this.modelValue) {\n                        if (ObjectUtils.equals(val, optionValue, this.equalityKey)) {\n                            selected = true;\n                            break;\n                        }\n                    }\n                }\n            }\n            else {\n                selected = ObjectUtils.equals(this.modelValue, optionValue, this.equalityKey);\n            }\n\n            return selected;\n        },\n        removeOption(option) {\n            return this.modelValue.filter(val => !ObjectUtils.equals(val, this.getOptionValue(option), this.equalityKey));\n        },\n        updateModel(event, value) {\n            this.$emit('update:modelValue', value);\n            this.$emit('change', {originalEvent: event, value: value});\n        },\n        onOptionKeyDown(event, option) {\n            let item = event.currentTarget;\n\n            switch (event.which) {\n                //down\n                case 40:\n                    var nextItem = this.findNextItem(item);\n                    if(nextItem) {\n                        nextItem.focus();\n                    }\n\n                    event.preventDefault();\n                break;\n\n                //up\n                case 38:\n                    var prevItem = this.findPrevItem(item);\n                    if(prevItem) {\n                        prevItem.focus();\n                    }\n\n                    event.preventDefault();\n                break;\n\n                //enter\n                case 13:\n                    this.onOptionSelect(event, option);\n                    event.preventDefault();\n                break;\n            }\n        },\n        findNextItem(item) {\n            let nextItem = item.nextElementSibling;\n\n            if (nextItem)\n                return DomHandler.hasClass(nextItem, 'p-disabled') || DomHandler.hasClass(nextItem, 'p-listbox-item-group') ? this.findNextItem(nextItem) : nextItem;\n            else\n                return null;\n        },\n        findPrevItem(item) {\n            let prevItem = item.previousElementSibling;\n\n            if (prevItem)\n                return DomHandler.hasClass(prevItem, 'p-disabled') || DomHandler.hasClass(prevItem, 'p-listbox-item-group') ? this.findPrevItem(prevItem) : prevItem;\n            else\n                return null;\n        },\n        onFilterChange(event) {\n            this.$emit('filter', {originalEvent: event, value: event.target.value});\n        },\n        virtualScrollerRef(el) {\n            this.virtualScroller = el;\n        }\n    },\n    computed: {\n        visibleOptions() {\n            if (this.filterValue) {\n                if (this.optionGroupLabel) {\n                    let filteredGroups = [];\n                    for (let optgroup of this.options) {\n                        let filteredSubOptions = FilterService.filter(this.getOptionGroupChildren(optgroup), this.searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n                        if (filteredSubOptions && filteredSubOptions.length) {\n                            filteredGroups.push({...optgroup, ...{items: filteredSubOptions}});\n                        }\n                    }\n                    return filteredGroups\n                }\n                else {\n                    return FilterService.filter(this.options, this.searchFields, this.filterValue, 'contains', this.filterLocale);\n                }\n            }\n            else {\n                return this.options;\n            }\n        },\n        equalityKey() {\n            return this.optionValue ? null : this.dataKey;\n        },\n        searchFields() {\n            return this.filterFields || [this.optionLabel];\n        },\n        emptyFilterMessageText() {\n            return this.emptyFilterMessage || this.$primevue.config.locale.emptyFilterMessage;\n        },\n        emptyMessageText() {\n            return this.emptyMessage || this.$primevue.config.locale.emptyMessage;\n        },\n        virtualScrollerDisabled() {\n            return !this.virtualScrollerOptions;\n        }\n    },\n    directives: {\n        'ripple': Ripple\n    },\n    components: {\n        'VirtualScroller': VirtualScroller\n    }\n}\n</script>\n\n<style>\n.p-listbox-list-wrapper {\n    overflow: auto;\n}\n\n.p-listbox-list {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n}\n\n.p-listbox-item {\n    cursor: pointer;\n    position: relative;\n    overflow: hidden;\n}\n\n.p-listbox-item-group {\n    cursor: auto;\n}\n\n.p-listbox-filter-container {\n    position: relative;\n}\n\n.p-listbox-filter-icon {\n    position: absolute;\n    top: 50%;\n    margin-top: -.5rem;\n}\n\n.p-listbox-filter {\n    width: 100%;\n}\n</style>\n"],"sourceRoot":""}]}