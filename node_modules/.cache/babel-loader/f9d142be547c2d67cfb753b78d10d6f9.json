{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTableColToggleDemo.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTableColToggleDemo.vue","mtime":1634589566258},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTableColToggleDemo.vue"],"names":[],"mappings":";;;AA8BA,OAAO,cAAP,MAA2B,8BAA3B;AAEA,eAAe;AACX,EAAA,IADW,kBACJ;AACH,WAAO;AACH,MAAA,eAAe,EAAE,IADd;AAEH,MAAA,OAAO,EAAE,IAFN;AAGH,MAAA,QAAQ,EAAE,IAHP;AAIH,MAAA,OAAO,EAAE;AACL,uBAAe;AACX,UAAA,OAAO,EAAE,oBADE;AAEX,UAAA,OAAO;AAFI,SADV;AAqDL,2BAAmB;AACf,UAAA,OAAO,EAAE,wBADM;AAEf,UAAA,OAAO;AAFQ,SArDd;AAmGL,0BAAkB;AACd,UAAA,OAAO,EAAE,gBADK;AAEd,UAAA,OAAO,2UAFO;AAMd,UAAA,OAAO;AANO;AAnGb;AAJN,KAAP;AAgKH,GAlKU;AAmKX,EAAA,cAAc,EAAE,IAnKL;AAoKX,EAAA,OApKW,qBAoKD;AACN,SAAK,cAAL,GAAsB,IAAI,cAAJ,EAAtB;AAEA,SAAK,OAAL,GAAe,CACX;AAAC,MAAA,KAAK,EAAE,MAAR;AAAgB,MAAA,MAAM,EAAE;AAAxB,KADW,EAEX;AAAC,MAAA,KAAK,EAAE,UAAR;AAAoB,MAAA,MAAM,EAAE;AAA5B,KAFW,EAGX;AAAC,MAAA,KAAK,EAAE,UAAR;AAAoB,MAAA,MAAM,EAAE;AAA5B,KAHW,CAAf;AAKA,SAAK,eAAL,GAAuB,KAAK,OAA5B;AACH,GA7KU;AA8KX,EAAA,OA9KW,qBA8KD;AAAA;;AACN,SAAK,cAAL,CAAoB,gBAApB,GAAuC,IAAvC,CAA4C,UAAA,IAAG;AAAA,aAAK,KAAI,CAAC,QAAL,GAAgB,IAArB;AAAA,KAA/C;AACH,GAhLU;AAiLX,EAAA,OAAO,EAAE;AACL,IAAA,QADK,oBACI,KADJ,EACW;AACZ,WAAK,eAAL,GAAuB,KAAK,OAAL,CAAa,MAAb,CAAoB,UAAA,GAAE;AAAA,eAAK,KAAK,CAAC,QAAN,CAAe,GAAf,CAAL;AAAA,OAAtB,CAAvB;AACJ;AAHK;AAjLE,CAAf","sourcesContent":["<template>\n\t<div>\n\t\t<div class=\"content-section introduction\">\n\t\t\t<div class=\"feature-intro\">\n\t\t\t\t<h1>DataTable <span>Column Toggle</span></h1>\n\t\t\t\t<p>MultiSelect component can be used to implement column toggle functionality.</p>\n\t\t\t</div>\n            <AppDemoActions />\n\t\t</div>\n\n\t\t<div class=\"content-section implementation\">\n            <div class=\"card\">\n                <DataTable :value=\"products\" responsiveLayout=\"scroll\">\n                    <template #header>\n                        <div style=\"text-align:left\">\n                            <MultiSelect :modelValue=\"selectedColumns\" :options=\"columns\" optionLabel=\"header\" @update:modelValue=\"onToggle\"\n                                placeholder=\"Select Columns\" style=\"width: 20em\"/>\n                        </div>\n                    </template>\n                    <Column field=\"code\" header=\"Code\" />\n                    <Column v-for=\"(col, index) of selectedColumns\" :field=\"col.field\" :header=\"col.header\" :key=\"col.field + '_' + index\"></Column>\n                </DataTable>\n            </div>\n\t\t</div>\n\n        <AppDoc name=\"DataTableColToggleDemo\" :sources=\"sources\" :service=\"['ProductService']\" :data=\"['products-small']\" github=\"datatable/DataTableColToggleDemo.vue\" />\n\t</div>\n</template>\n\n<script>\nimport ProductService from '../../service/ProductService';\n\nexport default {\n    data() {\n        return {\n            selectedColumns: null,\n            columns: null,\n            products: null,\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div>\n        <DataTable :value=\"products\" responsiveLayout=\"scroll\">\n            <template #header>\n                <div style=\"text-align:left\">\n                    <MultiSelect :modelValue=\"selectedColumns\" :options=\"columns\" optionLabel=\"header\" @update:modelValue=\"onToggle\"\n                        placeholder=\"Select Columns\" style=\"width: 20em\"/>\n                </div>\n            </template>\n            <Column field=\"code\" header=\"Code\" />\n            <Column v-for=\"(col, index) of selectedColumns\" :field=\"col.field\" :header=\"col.header\" :key=\"col.field + '_' + index\"></Column>\n        </DataTable>\n    </div>\n</template>\n\n<script>\nimport ProductService from './service/ProductService';\n\nexport default {\n    data() {\n        return {\n            selectedColumns: null,\n            columns: null,\n            products: null\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n\n        this.columns = [\n            {field: 'name', header: 'Name'},\n            {field: 'category', header: 'Category'},\n            {field: 'quantity', header: 'Quantity'}\n        ];\n        this.selectedColumns = this.columns;\n    },\n    mounted() {\n        this.productService.getProductsSmall().then(data => this.products = data);\n    },\n    methods: {\n        onToggle(value) {\n            this.selectedColumns = this.columns.filter(col => value.includes(col));\n        }\n    }\n}\n<\\\\/script>\n`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div>\n        <DataTable :value=\"products\" responsiveLayout=\"scroll\">\n            <template #header>\n                <div style=\"text-align:left\">\n                    <MultiSelect :modelValue=\"selectedColumns\" :options=\"columns\" optionLabel=\"header\" @update:modelValue=\"onToggle\"\n                        placeholder=\"Select Columns\" style=\"width: 20em\"/>\n                </div>\n            </template>\n            <Column field=\"code\" header=\"Code\" />\n            <Column v-for=\"(col, index) of selectedColumns\" :field=\"col.field\" :header=\"col.header\" :key=\"col.field + '_' + index\"></Column>\n        </DataTable>\n    </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport ProductService from './service/ProductService';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            productService.value.getProductsSmall().then(data => products.value = data);\n        })\n\n        const columns = ref([\n            {field: 'name', header: 'Name'},\n            {field: 'category', header: 'Category'},\n            {field: 'quantity', header: 'Quantity'}\n        ]);\n        const selectedColumns = ref(columns.value);\n        const products = ref();\n        const productService = ref(new ProductService());\n        const onToggle = (val) => {\n            selectedColumns.value = columns.value.filter(col => val.includes(col));\n        };\n\n        return { columns, selectedColumns, products, productService, onToggle }\n    }\n}\n<\\\\/script>\n`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/datatable/datatable.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/column/column.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/multiselect/multiselect.min.js\"><\\\\/script>\n        <script src=\"./ProductService.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <p-datatable :value=\"products\" responsive-layout=\"scroll\">\n                <template #header>\n                    <div style=\"text-align:left\">\n                        <p-multiselect :model-value=\"selectedColumns\" :options=\"columns\" option-label=\"header\" @update:model-value=\"onToggle\"\n                            placeholder=\"Select Columns\" style=\"width: 20em\"></p-multiselect>\n                    </div>\n                </template>\n                <p-column field=\"code\" header=\"Code\"></p-column>\n                <p-column v-for=\"(col, index) of selectedColumns\" :field=\"col.field\" :header=\"col.header\" :key=\"col.field + '_' + index\"></p-column>\n            </p-datatable>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref, onMounted } = Vue;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    productService.value.getProductsSmall().then(data => products.value = data);\n                })\n\n                const columns = ref([\n                    {field: 'name', header: 'Name'},\n                    {field: 'category', header: 'Category'},\n                    {field: 'quantity', header: 'Quantity'}\n                ]);\n                const selectedColumns = ref(columns.value);\n                const products = ref();\n                const productService = ref(new ProductService());\n                const onToggle = (val) => {\n                    selectedColumns.value = columns.value.filter(col => val.includes(col));\n                };\n\n                return { columns, selectedColumns, products, productService, onToggle }\n            },\n            components: {\n                \"p-datatable\": primevue.datatable,\n                \"p-column\": primevue.column,\n                \"p-multiselect\": primevue.multiselect\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\\\/script>\n`\n                }\n            }\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n\n        this.columns = [\n            {field: 'name', header: 'Name'},\n            {field: 'category', header: 'Category'},\n            {field: 'quantity', header: 'Quantity'}\n        ];\n        this.selectedColumns = this.columns;\n    },\n    mounted() {\n        this.productService.getProductsSmall().then(data => this.products = data);\n    },\n    methods: {\n        onToggle(value) {\n            this.selectedColumns = this.columns.filter(col => value.includes(col));\n        }\n    }\n}\n</script>"],"sourceRoot":""}]}