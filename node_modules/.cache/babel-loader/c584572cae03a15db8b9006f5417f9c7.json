{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/autocomplete/AutoCompleteDemo.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/autocomplete/AutoCompleteDemo.vue","mtime":1634589566246},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2Nyb2NzbHV0L0Rlc2t0b3AvR2l0L21haW4tY2xlYW5hd2F5LXB3YS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciBmcm9tICIvVXNlcnMvY3JvY3NsdXQvRGVza3RvcC9HaXQvbWFpbi1jbGVhbmF3YXktcHdhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvY3JvY3NsdXQvRGVza3RvcC9HaXQvbWFpbi1jbGVhbmF3YXktcHdhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZyb20uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcudHJpbS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zdGFydHMtd2l0aC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgQ291bnRyeVNlcnZpY2UgZnJvbSAnLi4vLi4vc2VydmljZS9Db3VudHJ5U2VydmljZSc7CmltcG9ydCBBdXRvQ29tcGxldGVEb2MgZnJvbSAnLi9BdXRvQ29tcGxldGVEb2MnOwppbXBvcnQgeyBGaWx0ZXJTZXJ2aWNlLCBGaWx0ZXJNYXRjaE1vZGUgfSBmcm9tICdwcmltZXZ1ZS9hcGknOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvdW50cmllczogbnVsbCwKICAgICAgc2VsZWN0ZWRDb3VudHJ5MTogbnVsbCwKICAgICAgc2VsZWN0ZWRDb3VudHJ5MjogbnVsbCwKICAgICAgc2VsZWN0ZWRDaXR5OiBudWxsLAogICAgICBmaWx0ZXJlZENpdGllczogbnVsbCwKICAgICAgZmlsdGVyZWRDb3VudHJpZXM6IG51bGwsCiAgICAgIHNlbGVjdGVkQ291bnRyaWVzOiBbXSwKICAgICAgc2VsZWN0ZWRJdGVtOiBudWxsLAogICAgICBmaWx0ZXJlZEl0ZW1zOiBudWxsLAogICAgICBncm91cGVkQ2l0aWVzOiBbewogICAgICAgIGxhYmVsOiAnR2VybWFueScsCiAgICAgICAgY29kZTogJ0RFJywKICAgICAgICBpdGVtczogW3sKICAgICAgICAgIGxhYmVsOiAnQmVybGluJywKICAgICAgICAgIHZhbHVlOiAnQmVybGluJwogICAgICAgIH0sIHsKICAgICAgICAgIGxhYmVsOiAnRnJhbmtmdXJ0JywKICAgICAgICAgIHZhbHVlOiAnRnJhbmtmdXJ0JwogICAgICAgIH0sIHsKICAgICAgICAgIGxhYmVsOiAnSGFtYnVyZycsCiAgICAgICAgICB2YWx1ZTogJ0hhbWJ1cmcnCiAgICAgICAgfSwgewogICAgICAgICAgbGFiZWw6ICdNdW5pY2gnLAogICAgICAgICAgdmFsdWU6ICdNdW5pY2gnCiAgICAgICAgfV0KICAgICAgfSwgewogICAgICAgIGxhYmVsOiAnVVNBJywKICAgICAgICBjb2RlOiAnVVMnLAogICAgICAgIGl0ZW1zOiBbewogICAgICAgICAgbGFiZWw6ICdDaGljYWdvJywKICAgICAgICAgIHZhbHVlOiAnQ2hpY2FnbycKICAgICAgICB9LCB7CiAgICAgICAgICBsYWJlbDogJ0xvcyBBbmdlbGVzJywKICAgICAgICAgIHZhbHVlOiAnTG9zIEFuZ2VsZXMnCiAgICAgICAgfSwgewogICAgICAgICAgbGFiZWw6ICdOZXcgWW9yaycsCiAgICAgICAgICB2YWx1ZTogJ05ldyBZb3JrJwogICAgICAgIH0sIHsKICAgICAgICAgIGxhYmVsOiAnU2FuIEZyYW5jaXNjbycsCiAgICAgICAgICB2YWx1ZTogJ1NhbiBGcmFuY2lzY28nCiAgICAgICAgfV0KICAgICAgfSwgewogICAgICAgIGxhYmVsOiAnSmFwYW4nLAogICAgICAgIGNvZGU6ICdKUCcsCiAgICAgICAgaXRlbXM6IFt7CiAgICAgICAgICBsYWJlbDogJ0t5b3RvJywKICAgICAgICAgIHZhbHVlOiAnS3lvdG8nCiAgICAgICAgfSwgewogICAgICAgICAgbGFiZWw6ICdPc2FrYScsCiAgICAgICAgICB2YWx1ZTogJ09zYWthJwogICAgICAgIH0sIHsKICAgICAgICAgIGxhYmVsOiAnVG9reW8nLAogICAgICAgICAgdmFsdWU6ICdUb2t5bycKICAgICAgICB9LCB7CiAgICAgICAgICBsYWJlbDogJ1lva29oYW1hJywKICAgICAgICAgIHZhbHVlOiAnWW9rb2hhbWEnCiAgICAgICAgfV0KICAgICAgfV0sCiAgICAgIGl0ZW1zOiBBcnJheS5mcm9tKHsKICAgICAgICBsZW5ndGg6IDEwMDAKICAgICAgfSwgZnVuY3Rpb24gKF8sIGkpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgbGFiZWw6ICJJdGVtICMiLmNvbmNhdChpKSwKICAgICAgICAgIHZhbHVlOiBpCiAgICAgICAgfTsKICAgICAgfSkKICAgIH07CiAgfSwKICBjb3VudHJ5U2VydmljZTogbnVsbCwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5jb3VudHJ5U2VydmljZSA9IG5ldyBDb3VudHJ5U2VydmljZSgpOwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgdGhpcy5jb3VudHJ5U2VydmljZS5nZXRDb3VudHJpZXMoKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgIHJldHVybiBfdGhpcy5jb3VudHJpZXMgPSBkYXRhOwogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBzZWFyY2hDb3VudHJ5OiBmdW5jdGlvbiBzZWFyY2hDb3VudHJ5KGV2ZW50KSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgaWYgKCFldmVudC5xdWVyeS50cmltKCkubGVuZ3RoKSB7CiAgICAgICAgICBfdGhpczIuZmlsdGVyZWRDb3VudHJpZXMgPSBfdG9Db25zdW1hYmxlQXJyYXkoX3RoaXMyLmNvdW50cmllcyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF90aGlzMi5maWx0ZXJlZENvdW50cmllcyA9IF90aGlzMi5jb3VudHJpZXMuZmlsdGVyKGZ1bmN0aW9uIChjb3VudHJ5KSB7CiAgICAgICAgICAgIHJldHVybiBjb3VudHJ5Lm5hbWUudG9Mb3dlckNhc2UoKS5zdGFydHNXaXRoKGV2ZW50LnF1ZXJ5LnRvTG93ZXJDYXNlKCkpOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9LCAyNTApOwogICAgfSwKICAgIHNlYXJjaENpdHk6IGZ1bmN0aW9uIHNlYXJjaENpdHkoZXZlbnQpIHsKICAgICAgdmFyIHF1ZXJ5ID0gZXZlbnQucXVlcnk7CiAgICAgIHZhciBmaWx0ZXJlZENpdGllcyA9IFtdOwoKICAgICAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHRoaXMuZ3JvdXBlZENpdGllcyksCiAgICAgICAgICBfc3RlcDsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciBjb3VudHJ5ID0gX3N0ZXAudmFsdWU7CiAgICAgICAgICB2YXIgZmlsdGVyZWRJdGVtcyA9IEZpbHRlclNlcnZpY2UuZmlsdGVyKGNvdW50cnkuaXRlbXMsIFsnbGFiZWwnXSwgcXVlcnksIEZpbHRlck1hdGNoTW9kZS5DT05UQUlOUyk7CgogICAgICAgICAgaWYgKGZpbHRlcmVkSXRlbXMgJiYgZmlsdGVyZWRJdGVtcy5sZW5ndGgpIHsKICAgICAgICAgICAgZmlsdGVyZWRDaXRpZXMucHVzaChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGNvdW50cnkpLCB7CiAgICAgICAgICAgICAgaXRlbXM6IGZpbHRlcmVkSXRlbXMKICAgICAgICAgICAgfSkpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBfaXRlcmF0b3IuZigpOwogICAgICB9CgogICAgICB0aGlzLmZpbHRlcmVkQ2l0aWVzID0gZmlsdGVyZWRDaXRpZXM7CiAgICB9LAogICAgc2VhcmNoSXRlbXM6IGZ1bmN0aW9uIHNlYXJjaEl0ZW1zKGV2ZW50KSB7CiAgICAgIC8vaW4gYSByZWFsIGFwcGxpY2F0aW9uLCBtYWtlIGEgcmVxdWVzdCB0byBhIHJlbW90ZSB1cmwgd2l0aCB0aGUgcXVlcnkgYW5kIHJldHVybiBmaWx0ZXJlZCByZXN1bHRzLCBmb3IgZGVtbyB3ZSBmaWx0ZXIgYXQgY2xpZW50IHNpZGUKICAgICAgdmFyIHF1ZXJ5ID0gZXZlbnQucXVlcnk7CiAgICAgIHZhciBmaWx0ZXJlZEl0ZW1zID0gW107CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuaXRlbXMubGVuZ3RoOyBpKyspIHsKICAgICAgICB2YXIgaXRlbSA9IHRoaXMuaXRlbXNbaV07CgogICAgICAgIGlmIChpdGVtLmxhYmVsLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihxdWVyeS50b0xvd2VyQ2FzZSgpKSA9PT0gMCkgewogICAgICAgICAgZmlsdGVyZWRJdGVtcy5wdXNoKGl0ZW0pOwogICAgICAgIH0KICAgICAgfQoKICAgICAgdGhpcy5maWx0ZXJlZEl0ZW1zID0gZmlsdGVyZWRJdGVtczsKICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgICdBdXRvQ29tcGxldGVEb2MnOiBBdXRvQ29tcGxldGVEb2MKICB9Cn07"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/autocomplete/AutoCompleteDemo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>AutoComplete</h1>\n                <p>AutoComplete is an input component that provides real-time suggestions when being typed.</p>\n            </div>\n            <AppDemoActions />\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card\">\n                <h5>Basic</h5>\n                <AutoComplete v-model=\"selectedCountry1\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\" />\n\n                <h5>Grouped</h5>\n                <AutoComplete v-model=\"selectedCity\" :suggestions=\"filteredCities\" @complete=\"searchCity($event)\" field=\"label\" optionGroupLabel=\"label\" optionGroupChildren=\"items\">\n                    <template #optiongroup=\"slotProps\">\n                        <div class=\"p-d-flex p-ai-center country-item\">\n                            <img src=\"../../assets/images/flag_placeholder.png\" :class=\"'flag flag-' + slotProps.item.code.toLowerCase()\" width=\"18\" />\n                            <div>{{slotProps.item.label}}</div>\n                        </div>\n                    </template>\n                </AutoComplete>\n\n                <h5>Dropdown, Templating and Force Selection</h5>\n                <AutoComplete v-model=\"selectedCountry2\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" :dropdown=\"true\" field=\"name\" forceSelection>\n                    <template #item=\"slotProps\">\n                        <div class=\"country-item\">\n                            <img src=\"../../assets/images/flag_placeholder.png\" :class=\"'flag flag-' + slotProps.item.code.toLowerCase()\" />\n                            <div>{{slotProps.item.name}}</div>\n                        </div>\n                    </template>\n                </AutoComplete>\n\n                <h5>Virtual Scroll (1000 Items)</h5>\n                <AutoComplete v-model=\"selectedItem\" :suggestions=\"filteredItems\" @complete=\"searchItems\" :virtualScrollerOptions=\"{ itemSize: 31 }\" field=\"label\" dropdown />\n\n                <h5>Multiple</h5>\n                <span class=\"p-fluid\">\n                    <AutoComplete :multiple=\"true\" v-model=\"selectedCountries\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\" />\n                </span>\n            </div>\n        </div>\n\n        <AutoCompleteDoc />\n    </div>\n</template>\n\n<script>\nimport CountryService from '../../service/CountryService';\nimport AutoCompleteDoc from './AutoCompleteDoc';\nimport {FilterService,FilterMatchMode} from 'primevue/api';\n\nexport default {\n    data() {\n        return {\n            countries: null,\n            selectedCountry1: null,\n            selectedCountry2: null,\n            selectedCity: null,\n            filteredCities: null,\n            filteredCountries: null,\n            selectedCountries: [],\n            selectedItem: null,\n            filteredItems: null,\n            groupedCities: [{\n                label: 'Germany', code: 'DE',\n                items: [\n                    {label: 'Berlin', value: 'Berlin'},\n                    {label: 'Frankfurt', value: 'Frankfurt'},\n                    {label: 'Hamburg', value: 'Hamburg'},\n                    {label: 'Munich', value: 'Munich'}\n                ]\n            },\n            {\n                label: 'USA', code: 'US',\n                items: [\n                    {label: 'Chicago', value: 'Chicago'},\n                    {label: 'Los Angeles', value: 'Los Angeles'},\n                    {label: 'New York', value: 'New York'},\n                    {label: 'San Francisco', value: 'San Francisco'}\n                ]\n            },\n            {\n                label: 'Japan', code: 'JP',\n                items: [\n                    {label: 'Kyoto', value: 'Kyoto'},\n                    {label: 'Osaka', value: 'Osaka'},\n                    {label: 'Tokyo', value: 'Tokyo'},\n                    {label: 'Yokohama', value: 'Yokohama'}\n                ]\n            }],\n            items: Array.from({ length: 1000 }, (_, i) => ({ label: `Item #${i}`, value: i }))\n        }\n    },\n    countryService: null,\n    created() {\n        this.countryService = new CountryService();\n    },\n    mounted() {\n        this.countryService.getCountries().then(data => this.countries = data);\n    },\n    methods: {\n        searchCountry(event) {\n            setTimeout(() => {\n                if (!event.query.trim().length) {\n                    this.filteredCountries = [...this.countries];\n                }\n                else {\n                    this.filteredCountries = this.countries.filter((country) => {\n                        return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n                    });\n                }\n            }, 250);\n        },\n        searchCity(event) {\n            let query = event.query;\n            let filteredCities = [];\n\n            for (let country of this.groupedCities) {\n                let filteredItems = FilterService.filter(country.items, ['label'], query, FilterMatchMode.CONTAINS);\n                if (filteredItems && filteredItems.length) {\n                    filteredCities.push({...country, ...{items: filteredItems}});\n                }\n            }\n\n            this.filteredCities = filteredCities;\n        },\n        searchItems(event) {\n            //in a real application, make a request to a remote url with the query and return filtered results, for demo we filter at client side\n            let query = event.query;\n            let filteredItems = [];\n\n            for(let i = 0; i < this.items.length; i++) {\n                let item = this.items[i];\n                if (item.label.toLowerCase().indexOf(query.toLowerCase()) === 0) {\n                    filteredItems.push(item);\n                }\n            }\n\n            this.filteredItems = filteredItems;\n        }\n    },\n    components: {\n\t\t'AutoCompleteDoc': AutoCompleteDoc\n    }\n}\n</script>\n"],"sourceRoot":""}]}