{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treetable/TreeTableTemplatingDemo.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treetable/TreeTableTemplatingDemo.vue","mtime":1634589566292},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treetable/TreeTableTemplatingDemo.vue"],"names":[],"mappings":"AA2CA,OAAO,WAAP,MAAwB,2BAAxB;AAEA,eAAe;AACX,EAAA,IADW,kBACJ;AACH,WAAO;AACH,MAAA,KAAK,EAAE,IADJ;AAEH,MAAA,OAAO,EAAE;AACL,uBAAe;AACX,UAAA,OAAO,EAAE,oBADE;AAEX,UAAA,OAAO;AAFI,SADV;AAmDL,2BAAmB;AACf,UAAA,OAAO,EAAE,wBADM;AAEf,UAAA,OAAO;AAFQ,SAnDd;AAoGL,0BAAkB;AACd,UAAA,OAAO,EAAE,gBADK;AAEd,UAAA,OAAO,sOAFO;AAKd,UAAA,OAAO;AALO;AApGb;AAFN,KAAP;AAiKH,GAnKU;AAoKX,EAAA,WAAW,EAAE,IApKF;AAqKX,EAAA,OArKW,qBAqKD;AACN,SAAK,WAAL,GAAmB,IAAI,WAAJ,EAAnB;AACH,GAvKU;AAwKX,EAAA,OAxKW,qBAwKD;AAAA;;AACN,SAAK,WAAL,CAAiB,iBAAjB,GAAqC,IAArC,CAA0C,UAAA,IAAG;AAAA,aAAK,KAAI,CAAC,KAAL,GAAa,IAAlB;AAAA,KAA7C;AACJ;AA1KW,CAAf","sourcesContent":["<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>TreeTable <span>Templating</span></h1>\n                <p>Custom content at header, body and footer sections are supported via templating.</p>\n            </div>\n            <AppDemoActions />\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card\">\n                <TreeTable :value=\"nodes\">\n                    <template #header>\n                        FileSystem\n                    </template>\n                    <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                    <Column field=\"size\" header=\"Size\"></Column>\n                    <Column field=\"type\" header=\"Type\"></Column>\n                    <Column headerStyle=\"width: 8em\" headerClass=\"p-text-center\" bodyClass=\"p-text-center\">\n                        <template #header>\n                            <Button type=\"button\" icon=\"pi pi-cog\"></Button>\n                        </template>\n                        <template #body>\n                            <Button type=\"button\" icon=\"pi pi-search\" class=\"p-button-success\" style=\"margin-right: .5em\"></Button>\n                            <Button type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-warning\"></Button>\n                        </template>\n                    </Column>\n                    <template #footer>\n                        <div style=\"text-align:left\">\n                            <Button icon=\"pi pi-refresh\" />\n                        </div>\n                    </template>\n                </TreeTable>\n            </div>\n        </div>\n\n        <AppDoc name=\"TreeTableTemplatingDemo\" :sources=\"sources\" :service=\"['NodeService']\" :data=\"['treetablenodes']\" github=\"treetable/TreeTableTemplatingDemo.vue\" />\n            \n    </div>\n</template>\n\n<script>\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            nodes: null,\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div>\n        <TreeTable :value=\"nodes\">\n            <template #header>\n                FileSystem\n            </template>\n            <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n            <Column field=\"size\" header=\"Size\"></Column>\n            <Column field=\"type\" header=\"Type\"></Column>\n            <Column headerStyle=\"width: 8em\" headerClass=\"p-text-center\" bodyClass=\"p-text-center\">\n                <template #header>\n                    <Button type=\"button\" icon=\"pi pi-cog\"></Button>\n                </template>\n                <template #body>\n                    <Button type=\"button\" icon=\"pi pi-search\" class=\"p-button-success\" style=\"margin-right: .5em\"></Button>\n                    <Button type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-warning\"></Button>\n                </template>\n            </Column>\n            <template #footer>\n                <div style=\"text-align:left\">\n                    <Button icon=\"pi pi-refresh\" />\n                </div>\n            </template>\n        </TreeTable>\n    </div>                  \n</template>\n\n<script>\nimport NodeService from './service/NodeService';\n\nexport default {\n    data() {\n        return {\n            nodes: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeTableNodes().then(data => this.nodes = data);\n    }\n}\n<\\\\/script>\n`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div>\n        <TreeTable :value=\"nodes\">\n            <template #header>\n                FileSystem\n            </template>\n            <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n            <Column field=\"size\" header=\"Size\"></Column>\n            <Column field=\"type\" header=\"Type\"></Column>\n            <Column headerStyle=\"width: 8em\" headerClass=\"p-text-center\" bodyClass=\"p-text-center\">\n                <template #header>\n                    <Button type=\"button\" icon=\"pi pi-cog\"></Button>\n                </template>\n                <template #body>\n                    <Button type=\"button\" icon=\"pi pi-search\" class=\"p-button-success\" style=\"margin-right: .5em\"></Button>\n                    <Button type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-warning\"></Button>\n                </template>\n            </Column>\n            <template #footer>\n                <div style=\"text-align:left\">\n                    <Button icon=\"pi pi-refresh\" />\n                </div>\n            </template>\n        </TreeTable>\n    </div>                  \n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport NodeService from './service/NodeService';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            nodeService.value.getTreeTableNodes().then(data => nodes.value = data);\n        })\n\n        const nodes = ref();\n        const nodeService = ref(new NodeService());\n\n        return { nodes, nodeService }\n    }\n}\n<\\\\/script>\n`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/treetable/treetable.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/column/column.min.js\"><\\\\/script>\n        <script src=\"./NodeService.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <p-treetable :value=\"nodes\">\n                <template #header>\n                    FileSystem\n                </template>\n                <p-column field=\"name\" header=\"Name\" :expander=\"true\"></p-column>\n                <p-column field=\"size\" header=\"Size\"></p-column>\n                <p-column field=\"type\" header=\"Type\"></p-column>\n                <p-column header-style=\"width: 8em\" header-class=\"p-text-center\" body-class=\"p-text-center\">\n                    <template #header>\n                        <p-button type=\"button\" icon=\"pi pi-cog\"></p-button>\n                    </template>\n                    <template #body>\n                        <p-button type=\"button\" icon=\"pi pi-search\" class=\"p-button-success\" style=\"margin-right: .5em\"></p-button>\n                        <p-button type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-warning\"></p-button>\n                    </template>\n                </p-column>\n                <template #footer>\n                    <div style=\"text-align:left\">\n                        <p-button icon=\"pi pi-refresh\"></p-button>\n                    </div>\n                </template>\n            </p-treetable>\n        </div>                  \n\n        <script type=\"module\">\n        const { createApp, ref, onMounted } = Vue;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    nodeService.value.getTreeTableNodes().then(data => nodes.value = data);\n                })\n\n                const nodes = ref();\n                const nodeService = ref(new NodeService());\n\n                return { nodes, nodeService }\n            },\n            components: {\n                \"p-treetable\": primevue.treetable,\n                \"p-column\": primevue.column,\n                \"p-button\": primevue.button\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\\\/script>\n`\n                }\n            }\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeTableNodes().then(data => this.nodes = data);\n    }\n}\n</script>"],"sourceRoot":""}]}