{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/togglebutton/ToggleButtonDoc.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/togglebutton/ToggleButtonDoc.vue","mtime":1634589566289},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzb3VyY2VzOiB7CiAgICAgICAgJ29wdGlvbnMtYXBpJzogewogICAgICAgICAgdGFiTmFtZTogJ09wdGlvbnMgQVBJIFNvdXJjZScsCiAgICAgICAgICBjb250ZW50OiAiXG48dGVtcGxhdGU+XG4gICAgPGRpdj5cbiAgICAgICAgPGg1PkJhc2ljPC9oNT5cbiAgICAgICAgPFRvZ2dsZUJ1dHRvbiB2LW1vZGVsPVwiY2hlY2tlZDFcIiBvbkljb249XCJwaSBwaS1jaGVja1wiIG9mZkljb249XCJwaSBwaS10aW1lc1wiIC8+XG5cbiAgICAgICAgPGg1PkN1c3RvbWl6ZWQ8L2g1PlxuICAgICAgICA8VG9nZ2xlQnV0dG9uIHYtbW9kZWw9XCJjaGVja2VkMlwiIG9uTGFiZWw9XCJJIGNvbmZpcm1cIiBvZmZMYWJlbD1cIkkgcmVqZWN0XCIgb25JY29uPVwicGkgcGktY2hlY2tcIiBvZmZJY29uPVwicGkgcGktdGltZXNcIiBzdHlsZT1cIndpZHRoOiAxMGVtXCIgLz5cbiAgICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5leHBvcnQgZGVmYXVsdCB7XG4gICAgZGF0YSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGNoZWNrZWQxOiBmYWxzZSxcbiAgICAgICAgICAgIGNoZWNrZWQyOiB0cnVlXG4gICAgICAgIH1cbiAgICB9XG59XG48XFwvc2NyaXB0PlxuIgogICAgICAgIH0sCiAgICAgICAgJ2NvbXBvc2l0aW9uLWFwaSc6IHsKICAgICAgICAgIHRhYk5hbWU6ICdDb21wb3NpdGlvbiBBUEkgU291cmNlJywKICAgICAgICAgIGNvbnRlbnQ6ICJcbjx0ZW1wbGF0ZT5cbiAgICA8ZGl2PlxuICAgICAgICA8aDU+QmFzaWM8L2g1PlxuICAgICAgICA8VG9nZ2xlQnV0dG9uIHYtbW9kZWw9XCJjaGVja2VkMVwiIG9uSWNvbj1cInBpIHBpLWNoZWNrXCIgb2ZmSWNvbj1cInBpIHBpLXRpbWVzXCIgLz5cblxuICAgICAgICA8aDU+Q3VzdG9taXplZDwvaDU+XG4gICAgICAgIDxUb2dnbGVCdXR0b24gdi1tb2RlbD1cImNoZWNrZWQyXCIgb25MYWJlbD1cIkkgY29uZmlybVwiIG9mZkxhYmVsPVwiSSByZWplY3RcIiBvbkljb249XCJwaSBwaS1jaGVja1wiIG9mZkljb249XCJwaSBwaS10aW1lc1wiIHN0eWxlPVwid2lkdGg6IDEwZW1cIiAvPlxuICAgIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCB7IHJlZiB9IGZyb20gJ3Z1ZSc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBzZXR1cCgpIHtcbiAgICAgICAgY29uc3QgY2hlY2tlZDEgPSByZWYoZmFsc2UpO1xuICAgICAgICBjb25zdCBjaGVja2VkMiA9IHJlZih0cnVlKTtcblxuICAgICAgICByZXR1cm4geyBjaGVja2VkMSwgY2hlY2tlZDIgfVxuICAgIH1cbn1cbjxcXC9zY3JpcHQ+XG4iCiAgICAgICAgfSwKICAgICAgICAnYnJvd3Nlci1zb3VyY2UnOiB7CiAgICAgICAgICB0YWJOYW1lOiAnQnJvd3NlciBTb3VyY2UnLAogICAgICAgICAgaW1wb3J0czogIjxzY3JpcHQgc3JjPVwiaHR0cHM6Ly91bnBrZy5jb20vcHJpbWV2dWVAXjMvdG9nZ2xlYnV0dG9uL3RvZ2dsZWJ1dHRvbi5taW4uanNcIj48XFwvc2NyaXB0PiIsCiAgICAgICAgICBjb250ZW50OiAiPGRpdiBpZD1cImFwcFwiPlxuICAgICAgICAgICAgPGg1PkJhc2ljPC9oNT5cbiAgICAgICAgICAgIDxwLXRvZ2dsZWJ1dHRvbiB2LW1vZGVsPVwiY2hlY2tlZDFcIiBvbi1pY29uPVwicGkgcGktY2hlY2tcIiBvZmYtaWNvbj1cInBpIHBpLXRpbWVzXCI+PC9wLXRvZ2dsZWJ1dHRvbj5cblxuICAgICAgICAgICAgPGg1PkN1c3RvbWl6ZWQ8L2g1PlxuICAgICAgICAgICAgPHAtdG9nZ2xlYnV0dG9uIHYtbW9kZWw9XCJjaGVja2VkMlwiIG9uLWxhYmVsPVwiSSBjb25maXJtXCIgb2ZmLWxhYmVsPVwiSSByZWplY3RcIiBvbi1pY29uPVwicGkgcGktY2hlY2tcIiBvZmYtaWNvbj1cInBpIHBpLXRpbWVzXCIgc3R5bGU9XCJ3aWR0aDogMTBlbVwiPjwvcC10b2dnbGVidXR0b24+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxzY3JpcHQgdHlwZT1cIm1vZHVsZVwiPlxuICAgICAgICBjb25zdCB7IGNyZWF0ZUFwcCwgcmVmIH0gPSBWdWU7XG5cbiAgICAgICAgY29uc3QgQXBwID0ge1xuICAgICAgICAgICAgc2V0dXAoKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2hlY2tlZDEgPSByZWYoZmFsc2UpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGNoZWNrZWQyID0gcmVmKHRydWUpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgY2hlY2tlZDEsIGNoZWNrZWQyIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjb21wb25lbnRzOiB7XG4gICAgICAgICAgICAgICAgXCJwLXRvZ2dsZWJ1dHRvblwiOiBwcmltZXZ1ZS50b2dnbGVidXR0b25cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICBjcmVhdGVBcHAoQXBwKVxuICAgICAgICAgICAgLnVzZShwcmltZXZ1ZS5jb25maWcuZGVmYXVsdClcbiAgICAgICAgICAgIC5tb3VudChcIiNhcHBcIik7XG4gICAgICAgIDxcXC9zY3JpcHQ+XG4iCiAgICAgICAgfQogICAgICB9CiAgICB9OwogIH0KfTs="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/togglebutton/ToggleButtonDoc.vue"],"names":[],"mappings":"AAmJA,eAAe;AACX,EAAA,IADW,kBACJ;AACH,WAAO;AACH,MAAA,OAAO,EAAE;AACL,uBAAe;AACX,UAAA,OAAO,EAAE,oBADE;AAEX,UAAA,OAAO;AAFI,SADV;AA0BL,2BAAmB;AACf,UAAA,OAAO,EAAE,wBADM;AAEf,UAAA,OAAO;AAFQ,SA1Bd;AAqDL,0BAAkB;AACd,UAAA,OAAO,EAAE,gBADK;AAEd,UAAA,OAAO,8FAFO;AAGd,UAAA,OAAO;AAHO;AArDb;AADN,KAAP;AAwFJ;AA1FW,CAAf","sourcesContent":["<template>\n    <AppDoc name=\"ToggleButtonDemo\" :sources=\"sources\" github=\"togglebutton/ToggleButtonDemo.vue\" >\n        <h5>Import</h5>\n<pre v-code.script><code>\nimport ToggleButton from 'primevue/togglebutton';\n\n</code></pre>\n\n        <h5>Import via CDN</h5>\n<pre v-code><code>\n&lt;script src=\"https://unpkg.com/primevue@^3/core/core.js\"&gt;&lt;/script&gt;\n&lt;script src=\"https://unpkg.com/primevue@^3/togglebutton/togglebutton.min.js\"&gt;&lt;/script&gt;\n\n</code></pre>\n\n\t\t<h5>Getting Started</h5>\n\t\t<p>Two-way binding to a boolean property is defined using the standard v-model directive.</p>\n<pre v-code><code>\n&lt;ToggleButton v-model=\"checked\" /&gt;\n\n</code></pre>\n\n\t\t<p>As model is two-way binding enabled, setting the bound value as true displays the state as checked.</p>\n<pre v-code.script><code>\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tchecked: true\n\t\t}\n\t}\n}\n\n</code></pre>\n\n\t\t<h5>Labels and Icons</h5>\n\t\t<p>Icons and Labels can be customized using <i>onLabel</i>, <i>offLabel</i>, <i>onIcon</i> and <i>offIcon</i> properties.</p>\n<pre v-code><code>\n&lt;ToggleButton v-model=\"checked\" onLabel=\"I confirm\" offLabel=\"I reject\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\" /&gt;\n\n</code></pre>\n\n\t\t<h5>Properties</h5>\n        <p>Any property as style and class are passed to the main container element. Following are the additional properties to configure the component.</p>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Default</th>\n                        <th>Description</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>modelValue</td>\n                        <td>any</td>\n                        <td>null</td>\n                        <td>Value of the component.</td>\n                    </tr>\n                    <tr>\n                        <td>onIcon</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Icon for the on state.</td>\n                    </tr>\n                    <tr>\n                        <td>offIcon</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Icon for the off state.</td>\n                    </tr>\n                    <tr>\n                        <td>onLabel</td>\n                        <td>string</td>\n                        <td>yes</td>\n                        <td>Label for the on state.</td>\n                    </tr>\n                    <tr>\n                        <td>offLabel</td>\n                        <td>string</td>\n                        <td>no</td>\n                        <td>Label for the off state.</td>\n                    </tr>\n                    <tr>\n                        <td>iconPos</td>\n                        <td>string</td>\n                        <td>left</td>\n                        <td>Position of the icon, valid values are \"left\" and \"right\".</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Events</h5>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Parameters</th>\n                        <th>Description</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>change</td>\n                        <td>event: Browser event</td>\n                        <td>Callback to invoke on value change.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Styling</h5>\n\t\t<p>Following is the list of structural style classes, for theming classes visit <router-link to=\"/theming\">theming</router-link> page.</p>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Element</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>p-togglebutton</td>\n                        <td>Container element</td>\n                    </tr>\n                    <tr>\n                        <td>p-button-icon</td>\n                        <td>Icon element.</td>\n                    </tr>\n                    <tr>\n                        <td>p-button-text</td>\n                        <td>Label element.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Dependencies</h5>\n\t\t<p>None.</p>\n    </AppDoc>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div>\n        <h5>Basic</h5>\n        <ToggleButton v-model=\"checked1\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\" />\n\n        <h5>Customized</h5>\n        <ToggleButton v-model=\"checked2\" onLabel=\"I confirm\" offLabel=\"I reject\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\" style=\"width: 10em\" />\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            checked1: false,\n            checked2: true\n        }\n    }\n}\n<\\\\/script>\n`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div>\n        <h5>Basic</h5>\n        <ToggleButton v-model=\"checked1\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\" />\n\n        <h5>Customized</h5>\n        <ToggleButton v-model=\"checked2\" onLabel=\"I confirm\" offLabel=\"I reject\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\" style=\"width: 10em\" />\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n    setup() {\n        const checked1 = ref(false);\n        const checked2 = ref(true);\n\n        return { checked1, checked2 }\n    }\n}\n<\\\\/script>\n`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/togglebutton/togglebutton.min.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <h5>Basic</h5>\n            <p-togglebutton v-model=\"checked1\" on-icon=\"pi pi-check\" off-icon=\"pi pi-times\"></p-togglebutton>\n\n            <h5>Customized</h5>\n            <p-togglebutton v-model=\"checked2\" on-label=\"I confirm\" off-label=\"I reject\" on-icon=\"pi pi-check\" off-icon=\"pi pi-times\" style=\"width: 10em\"></p-togglebutton>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref } = Vue;\n\n        const App = {\n            setup() {\n                const checked1 = ref(false);\n                const checked2 = ref(true);\n\n                return { checked1, checked2 }\n            },\n            components: {\n                \"p-togglebutton\": primevue.togglebutton\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\\\/script>\n`\n                }\n            }\n        }\n    }\n}\n</script>"],"sourceRoot":""}]}