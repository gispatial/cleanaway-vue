{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/chips/ChipsDoc.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/chips/ChipsDoc.vue","mtime":1634589566256},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzb3VyY2VzOiB7CiAgICAgICAgJ29wdGlvbnMtYXBpJzogewogICAgICAgICAgdGFiTmFtZTogJ09wdGlvbnMgQVBJIFNvdXJjZScsCiAgICAgICAgICBjb250ZW50OiAiXG48dGVtcGxhdGU+XG4gICAgPGRpdiBjbGFzcz1cInAtZmx1aWRcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNhcmRcIj5cbiAgICAgICAgICAgIDxoNT5CYXNpYzwvaDU+XG4gICAgICAgICAgICA8Q2hpcHMgdi1tb2RlbD1cInZhbHVlMVwiIC8+XG5cbiAgICAgICAgICAgIDxoNT5Db21tYSBTZXBhcmF0b3I8L2g1PlxuICAgICAgICAgICAgPENoaXBzIHYtbW9kZWw9XCJ2YWx1ZTJcIiBzZXBhcmF0b3I9XCIsXCIgLz5cblxuICAgICAgICAgICAgPGg1PlRlbXBsYXRlPC9oNT5cbiAgICAgICAgICAgIDxDaGlwcyB2LW1vZGVsPVwidmFsdWUzXCI+XG4gICAgICAgICAgICAgICAgPHRlbXBsYXRlICNjaGlwPVwic2xvdFByb3BzXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj57e3Nsb3RQcm9wcy52YWx1ZX19IC0gKGFjdGl2ZSkgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJwaSBwaS11c2VyLXBsdXNcIiBzdHlsZT1cImZvbnQtc2l6ZTogMTRweFwiPjwvaT5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICAgIDwvQ2hpcHM+XG4gICAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBkYXRhKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdmFsdWUxOiBudWxsLFxuICAgICAgICAgICAgdmFsdWUyOiBudWxsLFxuICAgICAgICAgICAgdmFsdWUzOiBudWxsXG4gICAgICAgIH1cbiAgICB9XG59XG48XFwvc2NyaXB0PlxuIgogICAgICAgIH0sCiAgICAgICAgJ2NvbXBvc2l0aW9uLWFwaSc6IHsKICAgICAgICAgIHRhYk5hbWU6ICdDb21wb3NpdGlvbiBBUEkgU291cmNlJywKICAgICAgICAgIGNvbnRlbnQ6ICJcbjx0ZW1wbGF0ZT5cbiAgICA8ZGl2IGNsYXNzPVwicC1mbHVpZFwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZFwiPlxuICAgICAgICAgICAgPGg1PkJhc2ljPC9oNT5cbiAgICAgICAgICAgIDxDaGlwcyB2LW1vZGVsPVwidmFsdWUxXCIgLz5cblxuICAgICAgICAgICAgPGg1PkNvbW1hIFNlcGFyYXRvcjwvaDU+XG4gICAgICAgICAgICA8Q2hpcHMgdi1tb2RlbD1cInZhbHVlMlwiIHNlcGFyYXRvcj1cIixcIiAvPlxuXG4gICAgICAgICAgICA8aDU+VGVtcGxhdGU8L2g1PlxuICAgICAgICAgICAgPENoaXBzIHYtbW9kZWw9XCJ2YWx1ZTNcIj5cbiAgICAgICAgICAgICAgICA8dGVtcGxhdGUgI2NoaXA9XCJzbG90UHJvcHNcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPnt7c2xvdFByb3BzLnZhbHVlfX0gLSAoYWN0aXZlKSA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cInBpIHBpLXVzZXItcGx1c1wiIHN0eWxlPVwiZm9udC1zaXplOiAxNHB4XCI+PC9pPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgICAgICAgICAgPC9DaGlwcz5cbiAgICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IHsgcmVmIH0gZnJvbSAndnVlJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICAgIHNldHVwKCkge1xuICAgICAgICBjb25zdCB2YWx1ZTEgPSByZWYoKTtcbiAgICAgICAgY29uc3QgdmFsdWUyID0gcmVmKCk7XG4gICAgICAgIGNvbnN0IHZhbHVlMyA9IHJlZigpO1xuXG4gICAgICAgIHJldHVybiB7IHZhbHVlMSwgdmFsdWUyLCB2YWx1ZTMgfVxuICAgIH1cbn1cbjxcXC9zY3JpcHQ+XG5cbiIKICAgICAgICB9LAogICAgICAgICdicm93c2VyLXNvdXJjZSc6IHsKICAgICAgICAgIHRhYk5hbWU6ICdCcm93c2VyIFNvdXJjZScsCiAgICAgICAgICBpbXBvcnRzOiAiPHNjcmlwdCBzcmM9XCJodHRwczovL3VucGtnLmNvbS9wcmltZXZ1ZUBeMy9jaGlwcy9jaGlwcy5taW4uanNcIj48XFwvc2NyaXB0PiIsCiAgICAgICAgICBjb250ZW50OiAiPGRpdiBpZD1cImFwcFwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtZmx1aWRcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZFwiPlxuICAgICAgICAgICAgICAgICAgICA8aDU+QmFzaWM8L2g1PlxuICAgICAgICAgICAgICAgICAgICA8cC1jaGlwcyB2LW1vZGVsPVwidmFsdWUxXCI+PC9wLWNoaXBzPlxuXG4gICAgICAgICAgICAgICAgICAgIDxoNT5Db21tYSBTZXBhcmF0b3I8L2g1PlxuICAgICAgICAgICAgICAgICAgICA8cC1jaGlwcyB2LW1vZGVsPVwidmFsdWUyXCIgc2VwYXJhdG9yPVwiLFwiPjwvcC1jaGlwcz5cblxuICAgICAgICAgICAgICAgICAgICA8aDU+VGVtcGxhdGU8L2g1PlxuICAgICAgICAgICAgICAgICAgICA8cC1jaGlwcyB2LW1vZGVsPVwidmFsdWUzXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgI2NoaXA9XCJzbG90UHJvcHNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj57e3Nsb3RQcm9wcy52YWx1ZX19IC0gKGFjdGl2ZSkgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cInBpIHBpLXVzZXItcGx1c1wiIHN0eWxlPVwiZm9udC1zaXplOiAxNHB4XCI+PC9pPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICAgICAgICAgICAgPC9wLWNoaXBzPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxzY3JpcHQgdHlwZT1cIm1vZHVsZVwiPlxuICAgICAgICBjb25zdCB7IGNyZWF0ZUFwcCwgcmVmIH0gPSBWdWU7XG5cbiAgICAgICAgY29uc3QgQXBwID0ge1xuICAgICAgICAgICAgc2V0dXAoKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWUxID0gcmVmKCk7XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWUyID0gcmVmKCk7XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWUzID0gcmVmKCk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm4geyB2YWx1ZTEsIHZhbHVlMiwgdmFsdWUzIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjb21wb25lbnRzOiB7XG4gICAgICAgICAgICAgICAgXCJwLWNoaXBzXCI6IHByaW1ldnVlLmNoaXBzXG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgY3JlYXRlQXBwKEFwcClcbiAgICAgICAgICAgIC51c2UocHJpbWV2dWUuY29uZmlnLmRlZmF1bHQpXG4gICAgICAgICAgICAubW91bnQoXCIjYXBwXCIpO1xuICAgICAgICA8XFwvc2NyaXB0PlxuXG4iCiAgICAgICAgfQogICAgICB9CiAgICB9OwogIH0KfTs="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/chips/ChipsDoc.vue"],"names":[],"mappings":"AAsLA,eAAe;AACX,EAAA,IADW,kBACJ;AACH,WAAO;AACH,MAAA,OAAO,EAAE;AACL,uBAAe;AACX,UAAA,OAAO,EAAE,oBADE;AAEX,UAAA,OAAO;AAFI,SADV;AAuCL,2BAAmB;AACf,UAAA,OAAO,EAAE,wBADM;AAEf,UAAA,OAAO;AAFQ,SAvCd;AAgFL,0BAAkB;AACd,UAAA,OAAO,EAAE,gBADK;AAEd,UAAA,OAAO,gFAFO;AAGd,UAAA,OAAO;AAHO;AAhFb;AADN,KAAP;AAmIJ;AArIW,CAAf","sourcesContent":["<template>\n\t<AppDoc name=\"ChipsDemo\" :sources=\"sources\" github=\"chips/ChipsDemo.vue\">\n        <h5>Import</h5>\n<pre v-code.script><code>\nimport Chips from 'primevue/chips';\n\n</code></pre>\n\n        <h5>Import via CDN</h5>\n<pre v-code><code>\n&lt;script src=\"https://unpkg.com/primevue@^3/core/core.js\"&gt;&lt;/script&gt;\n&lt;script src=\"https://unpkg.com/primevue@^3/chips/chips.min.js\"&gt;&lt;/script&gt;\n\n</code></pre>\n\n\t\t<h5>Getting Started</h5>\n\t\t<p>An array as the value can be bound using the standard v-model directive.</p>\n<pre v-code><code>\n&lt;Chips v-model=\"value\" /&gt;\n\n</code></pre>\n\n\t\t<h5>Custom Content</h5>\n\t\t<p>A chip is customized using the <i>chip</i> template where the chip value is passed to the slotProps with the value property.</p>\n<pre v-code><code><template v-pre>\n&lt;Chips v-model=\"value\"&gt;\n\t&lt;template #chip=\"slotProps\"&gt;\n\t\t&lt;div&gt;\n\t\t\t&lt;span&gt;{{slotProps.value}} - (active) &lt;/span&gt;\n\t\t\t&lt;i class=\"pi pi-user-plus\" style=\"font-size: 14px\"&gt;&lt;/i&gt;\n\t\t&lt;/div&gt;\n\t&lt;/template&gt;\n&lt;/Chips&gt;\n</template>\n</code></pre>\n\n\t\t<h5>Properties</h5>\n        <p>Any property such as name and placeholder are passed to the underlying input element. Following are the additional properties to configure the component.</p>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Default</th>\n                        <th>Description</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>modelValue</td>\n                        <td>array</td>\n                        <td>null</td>\n                        <td>Value of the component.</td>\n                    </tr>\n                    <tr>\n                        <td>max</td>\n                        <td>number</td>\n                        <td>null</td>\n                        <td>Maximum number of entries allowed.</td>\n                    </tr>\n                    <tr>\n                        <td>separator</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Separator char to add an item when pressed in addition to the enter key. Currently only possible value is \",\"</td>\n                    </tr>\n                    <tr>\n                        <td>addOnBlur</td>\n                        <td>boolean</td>\n                        <td>false</td>\n                        <td>Whether to add an item when the input loses focus.</td>\n                    </tr>\n                    <tr>\n                        <td>allowDuplicate</td>\n                        <td>boolean</td>\n                        <td>true</td>\n                        <td>Whether to allow duplicate values or not.</td>\n                    </tr>\n                    <tr>\n                        <td>style</td>\n                        <td>any</td>\n                        <td>null</td>\n                        <td>Style class of the component input field.</td>\n                    </tr>\n                    <tr>\n                        <td>class</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Inline style of the component.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Events</h5>\n        <p>Any valid event such as focus, blur and input are passed to the underlying input element. Following are the additional events to configure the component.</p>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Parameters</th>\n                        <th>Description</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>add</td>\n                        <td>originalEvent: Browser event <br/>\n                            value: Added item value</td>\n                        <td>Callback to invoke when a chip is added.</td>\n                    </tr>\n                    <tr>\n                        <td>remove</td>\n                        <td>originalEvent: Browser event <br/>\n                            value: Removed item value</td>\n                        <td>Callback to invoke when a chip is removed.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n        <h5>Slots</h5>\n\t\t<div class=\"doc-tablewrapper\">\n            <table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Parameters</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>chip</td>\n                        <td>value: Value of the component</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n        </div>\n\n\t\t<h5>Styling</h5>\n\t\t<p>Following is the list of structural style classes, for theming classes visit <router-link to=\"/theming\">theming</router-link> page.</p>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Element</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>p-chips</td>\n                        <td>Container element</td>\n                    </tr>\n                    <tr>\n                        <td>p-chips-token</td>\n                        <td>Chip element container.</td>\n                    </tr>\n                    <tr>\n                        <td>p-chips-token-icon</td>\n                        <td>Icon of a chip.</td>\n                    </tr>\n                    <tr>\n                        <td>p-chips-token-label</td>\n                        <td>label of a chip.</td>\n                    </tr>\n                    <tr>\n                        <td>p-chips-input-token</td>\n                        <td>Container of input element.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Dependencies</h5>\n\t\t<p>None.</p>\n    </AppDoc>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div class=\"p-fluid\">\n        <div class=\"card\">\n            <h5>Basic</h5>\n            <Chips v-model=\"value1\" />\n\n            <h5>Comma Separator</h5>\n            <Chips v-model=\"value2\" separator=\",\" />\n\n            <h5>Template</h5>\n            <Chips v-model=\"value3\">\n                <template #chip=\"slotProps\">\n                    <div>\n                        <span>{{slotProps.value}} - (active) </span>\n                        <i class=\"pi pi-user-plus\" style=\"font-size: 14px\"></i>\n                    </div>\n                </template>\n            </Chips>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            value1: null,\n            value2: null,\n            value3: null\n        }\n    }\n}\n<\\\\/script>\n`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div class=\"p-fluid\">\n        <div class=\"card\">\n            <h5>Basic</h5>\n            <Chips v-model=\"value1\" />\n\n            <h5>Comma Separator</h5>\n            <Chips v-model=\"value2\" separator=\",\" />\n\n            <h5>Template</h5>\n            <Chips v-model=\"value3\">\n                <template #chip=\"slotProps\">\n                    <div>\n                        <span>{{slotProps.value}} - (active) </span>\n                        <i class=\"pi pi-user-plus\" style=\"font-size: 14px\"></i>\n                    </div>\n                </template>\n            </Chips>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n    setup() {\n        const value1 = ref();\n        const value2 = ref();\n        const value3 = ref();\n\n        return { value1, value2, value3 }\n    }\n}\n<\\\\/script>\n\n`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/chips/chips.min.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <div class=\"p-fluid\">\n                <div class=\"card\">\n                    <h5>Basic</h5>\n                    <p-chips v-model=\"value1\"></p-chips>\n\n                    <h5>Comma Separator</h5>\n                    <p-chips v-model=\"value2\" separator=\",\"></p-chips>\n\n                    <h5>Template</h5>\n                    <p-chips v-model=\"value3\">\n                        <template #chip=\"slotProps\">\n                            <div>\n                                <span>{{slotProps.value}} - (active) </span>\n                                <i class=\"pi pi-user-plus\" style=\"font-size: 14px\"></i>\n                            </div>\n                        </template>\n                    </p-chips>\n                </div>\n            </div>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref } = Vue;\n\n        const App = {\n            setup() {\n                const value1 = ref();\n                const value2 = ref();\n                const value3 = ref();\n\n                return { value1, value2, value3 }\n            },\n            components: {\n                \"p-chips\": primevue.chips\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\\\/script>\n\n`\n                }\n            }\n        }\n    }\n}\n</script>"],"sourceRoot":""}]}