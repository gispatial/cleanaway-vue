{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/overlaypanel/OverlayPanelDemo.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/overlaypanel/OverlayPanelDemo.vue","mtime":1634589566276},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCBQcm9kdWN0U2VydmljZSBmcm9tICcuLi8uLi9zZXJ2aWNlL1Byb2R1Y3RTZXJ2aWNlJzsKaW1wb3J0IE92ZXJsYXlQYW5lbERvYyBmcm9tICcuL092ZXJsYXlQYW5lbERvYyc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcHJvZHVjdHM6IG51bGwsCiAgICAgIHNlbGVjdGVkUHJvZHVjdDogbnVsbAogICAgfTsKICB9LAogIHByb2R1Y3RTZXJ2aWNlOiBudWxsLAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLnByb2R1Y3RTZXJ2aWNlID0gbmV3IFByb2R1Y3RTZXJ2aWNlKCk7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB0aGlzLnByb2R1Y3RTZXJ2aWNlLmdldFByb2R1Y3RzU21hbGwoKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgIHJldHVybiBfdGhpcy5wcm9kdWN0cyA9IGRhdGE7CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHRvZ2dsZTogZnVuY3Rpb24gdG9nZ2xlKGV2ZW50KSB7CiAgICAgIHRoaXMuJHJlZnMub3AudG9nZ2xlKGV2ZW50KTsKICAgIH0sCiAgICBmb3JtYXRDdXJyZW5jeTogZnVuY3Rpb24gZm9ybWF0Q3VycmVuY3kodmFsdWUpIHsKICAgICAgcmV0dXJuIHZhbHVlLnRvTG9jYWxlU3RyaW5nKCdlbi1VUycsIHsKICAgICAgICBzdHlsZTogJ2N1cnJlbmN5JywKICAgICAgICBjdXJyZW5jeTogJ1VTRCcKICAgICAgfSk7CiAgICB9LAogICAgb25Qcm9kdWN0U2VsZWN0OiBmdW5jdGlvbiBvblByb2R1Y3RTZWxlY3QoZXZlbnQpIHsKICAgICAgdGhpcy4kcmVmcy5vcC5oaWRlKCk7CiAgICAgIHRoaXMuJHRvYXN0LmFkZCh7CiAgICAgICAgc2V2ZXJpdHk6ICdpbmZvJywKICAgICAgICBzdW1tYXJ5OiAnUHJvZHVjdCBTZWxlY3RlZCcsCiAgICAgICAgZGV0YWlsOiBldmVudC5kYXRhLm5hbWUsCiAgICAgICAgbGlmZTogMzAwMAogICAgICB9KTsKICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgICdPdmVybGF5UGFuZWxEb2MnOiBPdmVybGF5UGFuZWxEb2MKICB9Cn07"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/overlaypanel/OverlayPanelDemo.vue"],"names":[],"mappings":";AAqCA,OAAO,cAAP,MAA2B,8BAA3B;AACA,OAAO,eAAP,MAA4B,mBAA5B;AAEA,eAAe;AACX,EAAA,IADW,kBACJ;AACH,WAAO;AACH,MAAA,QAAQ,EAAE,IADP;AAEH,MAAA,eAAe,EAAE;AAFd,KAAP;AAIH,GANU;AAOX,EAAA,cAAc,EAAE,IAPL;AAQX,EAAA,OARW,qBAQD;AACN,SAAK,cAAL,GAAsB,IAAI,cAAJ,EAAtB;AACH,GAVU;AAWX,EAAA,OAXW,qBAWD;AAAA;;AACN,SAAK,cAAL,CAAoB,gBAApB,GAAuC,IAAvC,CAA4C,UAAA,IAAG;AAAA,aAAK,KAAI,CAAC,QAAL,GAAgB,IAArB;AAAA,KAA/C;AACH,GAbU;AAcX,EAAA,OAAO,EAAE;AACL,IAAA,MADK,kBACE,KADF,EACS;AACV,WAAK,KAAL,CAAW,EAAX,CAAc,MAAd,CAAqB,KAArB;AACH,KAHI;AAIL,IAAA,cAJK,0BAIU,KAJV,EAIiB;AAClB,aAAO,KAAK,CAAC,cAAN,CAAqB,OAArB,EAA8B;AAAC,QAAA,KAAK,EAAE,UAAR;AAAoB,QAAA,QAAQ,EAAE;AAA9B,OAA9B,CAAP;AACH,KANI;AAOL,IAAA,eAPK,2BAOW,KAPX,EAOkB;AACnB,WAAK,KAAL,CAAW,EAAX,CAAc,IAAd;AACA,WAAK,MAAL,CAAY,GAAZ,CAAgB;AAAC,QAAA,QAAQ,EAAC,MAAV;AAAkB,QAAA,OAAO,EAAE,kBAA3B;AAA+C,QAAA,MAAM,EAAE,KAAK,CAAC,IAAN,CAAW,IAAlE;AAAwE,QAAA,IAAI,EAAE;AAA9E,OAAhB;AACJ;AAVK,GAdE;AA0BX,EAAA,UAAU,EAAE;AACR,uBAAmB;AADX;AA1BD,CAAf","sourcesContent":["<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>OverlayPanel</h1>\n                <p>OverlayPanel is a container component positioned as connected to its target.</p>\n            </div>\n            <AppDemoActions />\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card\">\n                <Button type=\"button\" icon=\"pi pi-search\" :label=\"selectedProduct ? selectedProduct.name : 'Select a Product'\" @click=\"toggle\" aria:haspopup=\"true\" aria-controls=\"overlay_panel\" />\n\n                <OverlayPanel ref=\"op\" appendTo=\"body\" :showCloseIcon=\"true\" id=\"overlay_panel\" style=\"width:450px\" :breakpoints=\"{'960px': '75vw'}\">\n                    <DataTable :value=\"products\" v-model:selection=\"selectedProduct\" selectionMode=\"single\" :paginator=\"true\" :rows=\"5\" @row-select=\"onProductSelect\">\n                        <Column field=\"name\" header=\"Name\" sortable style=\"width: 50%\"></Column>\n                        <Column header=\"Image\" style=\"width: 20%\">\n                            <template #body=\"slotProps\">\n                                <img :src=\"'demo/images/product/' + slotProps.data.image\" :alt=\"slotProps.data.image\" class=\"product-image\" />\n                            </template>\n                        </Column>\n                        <Column field=\"price\" header=\"Price\" sortable style=\"width: 30%\">\n                            <template #body=\"slotProps\">\n                                {{formatCurrency(slotProps.data.price)}}\n                            </template>\n                        </Column>\n                    </DataTable>\n                </OverlayPanel>\n            </div>\n        </div>\n\n        <OverlayPanelDoc/>\n    </div>\n</template>\n\n<script>\nimport ProductService from '../../service/ProductService';\nimport OverlayPanelDoc from './OverlayPanelDoc';\n\nexport default {\n    data() {\n        return {\n            products: null,\n            selectedProduct: null\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n    },\n    mounted() {\n        this.productService.getProductsSmall().then(data => this.products = data);\n    },\n    methods: {\n        toggle(event) {\n            this.$refs.op.toggle(event);\n        },\n        formatCurrency(value) {\n            return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\n        },\n        onProductSelect(event) {\n            this.$refs.op.hide();\n            this.$toast.add({severity:'info', summary: 'Product Selected', detail: event.data.name, life: 3000});\n        }\n    },\n    components: {\n        'OverlayPanelDoc': OverlayPanelDoc\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\nbutton {\n    min-width: 15rem;\n}\n\n.product-image {\n    width: 50px;\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23)\n}\n</style>"],"sourceRoot":""}]}