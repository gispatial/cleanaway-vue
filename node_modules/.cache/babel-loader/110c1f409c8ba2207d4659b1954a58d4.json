{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treetable/TreeTableFilterDemo.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treetable/TreeTableFilterDemo.vue","mtime":1634589566292},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treetable/TreeTableFilterDemo.vue"],"names":[],"mappings":"AA2EA,OAAO,WAAP,MAAwB,2BAAxB;AAEA,eAAe;AACX,EAAA,IADW,kBACJ;AACH,WAAO;AACH,MAAA,QAAQ,EAAE,EADP;AAEH,MAAA,QAAQ,EAAE,EAFP;AAGH,MAAA,KAAK,EAAE,IAHJ;AAIH,MAAA,OAAO,EAAE;AACL,uBAAe;AACX,UAAA,OAAO,EAAE,oBADE;AAEX,UAAA,OAAO;AAFI,SADV;AA+FL,2BAAmB;AACf,UAAA,OAAO,EAAE,wBADM;AAEf,UAAA,OAAO;AAFQ,SA/Fd;AA4LL,0BAAkB;AACd,UAAA,OAAO,EAAE,gBADK;AAEd,UAAA,OAAO,sOAFO;AAKd,UAAA,OAAO;AALO;AA5Lb;AAJN,KAAP;AAuSH,GAzSU;AA0SX,EAAA,WAAW,EAAE,IA1SF;AA2SX,EAAA,OA3SW,qBA2SD;AACN,SAAK,WAAL,GAAmB,IAAI,WAAJ,EAAnB;AACH,GA7SU;AA8SX,EAAA,OA9SW,qBA8SD;AAAA;;AACN,SAAK,WAAL,CAAiB,iBAAjB,GAAqC,IAArC,CAA0C,UAAA,IAAG;AAAA,aAAK,KAAI,CAAC,KAAL,GAAa,IAAlB;AAAA,KAA7C;AACJ;AAhTW,CAAf","sourcesContent":["<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>TreeTable <span>Filter</span></h1>\n                <p>Filtering is enabled by defining a filter template per column to populate the filters property of the TreTable.</p>\n            </div>\n            <AppDemoActions />\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card\">\n                <h5>Lenient Filter</h5>\n                <TreeTable :value=\"nodes\" :filters=\"filters1\" filterMode=\"lenient\">\n                    <template #header>\n                        <div class=\"p-text-right\">\n                            <div class=\"p-input-icon-left\">\n                                <i class=\"pi pi-search\"></i>\n                                <InputText v-model=\"filters1['global']\" placeholder=\"Global Search\" size=\"50\" />\n                            </div>\n                        </div>\n                    </template>\n                    <Column field=\"name\" header=\"Name\" :expander=\"true\">\n                        <template #filter>\n                            <InputText type=\"text\" v-model=\"filters1['name']\" class=\"p-column-filter\" placeholder=\"Filter by name\" />\n                        </template>\n                    </Column>\n                    <Column field=\"size\" header=\"Size\">\n                        <template #filter>\n                            <InputText type=\"text\" v-model=\"filters1['size']\" class=\"p-column-filter\" placeholder=\"Filter by size\"/>\n                        </template>\n                    </Column>\n                    <Column field=\"type\" header=\"Type\">\n                        <template #filter>\n                            <InputText type=\"text\" v-model=\"filters1['type']\" class=\"p-column-filter\" placeholder=\"Filter by type\"/>\n                        </template>\n                    </Column>\n                </TreeTable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Strict Filter</h5>\n                <TreeTable :value=\"nodes\" :filters=\"filters2\" filterMode=\"strict\">\n                    <template #header>\n                        <div class=\"p-text-right\">\n                            <div class=\"p-input-icon-left\">\n                                <i class=\"pi pi-search\"></i>\n                                <InputText v-model=\"filters2['global']\" placeholder=\"Global Search\" size=\"50\" />\n                            </div>\n                        </div>\n                    </template>\n                    <Column field=\"name\" header=\"Name\" :expander=\"true\">\n                        <template #filter>\n                            <InputText type=\"text\" v-model=\"filters2['name']\" class=\"p-column-filter\" placeholder=\"Filter by name\" />\n                        </template>\n                    </Column>\n                    <Column field=\"size\" header=\"Size\">\n                        <template #filter>\n                            <InputText type=\"text\" v-model=\"filters2['size']\" class=\"p-column-filter\" placeholder=\"Filter by size\" />\n                        </template>\n                    </Column>\n                    <Column field=\"type\" header=\"Type\">\n                        <template #filter>\n                            <InputText type=\"text\" v-model=\"filters2['type']\" class=\"p-column-filter\" placeholder=\"Filter by type\" />\n                        </template>\n                    </Column>\n                </TreeTable>\n            </div>\n        </div>\n\n        <AppDoc name=\"TreeTableFilterDemo\" :sources=\"sources\" :service=\"['NodeService']\" :data=\"['treetablenodes']\" github=\"treetable/TreeTableFilterDemo.vue\" />\n    </div>\n</template>\n\n<script>\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            filters1: {},\n            filters2: {},\n            nodes: null,\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div>\n        <div class=\"card\">\n            <h5>Lenient Filter</h5>\n            <TreeTable :value=\"nodes\" :filters=\"filters1\" filterMode=\"lenient\">\n                <template #header>\n                    <div class=\"p-text-right\">\n                        <div class=\"p-input-icon-left\">\n                            <i class=\"pi pi-search\"></i>\n                            <InputText v-model=\"filters1['global']\" placeholder=\"Global Search\" size=\"50\" />\n                        </div>\n                    </div>\n                </template>\n                <Column field=\"name\" header=\"Name\" :expander=\"true\">\n                    <template #filter>\n                        <InputText type=\"text\" v-model=\"filters1['name']\" class=\"p-column-filter\" placeholder=\"Filter by name\" />\n                    </template>\n                </Column>\n                <Column field=\"size\" header=\"Size\">\n                    <template #filter>\n                        <InputText type=\"text\" v-model=\"filters1['size']\" class=\"p-column-filter\" placeholder=\"Filter by size\"/>\n                    </template>\n                </Column>\n                <Column field=\"type\" header=\"Type\">\n                    <template #filter>\n                        <InputText type=\"text\" v-model=\"filters1['type']\" class=\"p-column-filter\" placeholder=\"Filter by type\"/>\n                    </template>\n                </Column>\n            </TreeTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Strict Filter</h5>\n            <TreeTable :value=\"nodes\" :filters=\"filters2\" filterMode=\"strict\">\n                <template #header>\n                    <div class=\"p-text-right\">\n                        <div class=\"p-input-icon-left\">\n                            <i class=\"pi pi-search\"></i>\n                            <InputText v-model=\"filters2['global']\" placeholder=\"Global Search\" size=\"50\" />\n                        </div>\n                    </div>\n                </template>\n                <Column field=\"name\" header=\"Name\" :expander=\"true\">\n                    <template #filter>\n                        <InputText type=\"text\" v-model=\"filters2['name']\" class=\"p-column-filter\" placeholder=\"Filter by name\" />\n                    </template>\n                </Column>\n                <Column field=\"size\" header=\"Size\">\n                    <template #filter>\n                        <InputText type=\"text\" v-model=\"filters2['size']\" class=\"p-column-filter\" placeholder=\"Filter by size\" />\n                    </template>\n                </Column>\n                <Column field=\"type\" header=\"Type\">\n                    <template #filter>\n                        <InputText type=\"text\" v-model=\"filters2['type']\" class=\"p-column-filter\" placeholder=\"Filter by type\" />\n                    </template>\n                </Column>\n            </TreeTable>\n        </div>\n    </div>                    \n</template>\n\n<script>\nimport NodeService from './service/NodeService';\n\nexport default {\n    data() {\n        return {\n            filters1: {},\n            filters2: {},\n            nodes: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeTableNodes().then(data => this.nodes = data);\n    }\n}\n<\\\\/script>\n\n<style scoped lang=\"scss\">\n.p-filter-column {\n    .p-multiselect, .p-dropdown, .p-inputtext {\n        width: 100%;\n    }\n}\n</style>`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div>\n        <div class=\"card\">\n            <h5>Lenient Filter</h5>\n            <TreeTable :value=\"nodes\" :filters=\"filters1\" filterMode=\"lenient\">\n                <template #header>\n                    <div class=\"p-text-right\">\n                        <div class=\"p-input-icon-left\">\n                            <i class=\"pi pi-search\"></i>\n                            <InputText v-model=\"filters1['global']\" placeholder=\"Global Search\" size=\"50\" />\n                        </div>\n                    </div>\n                </template>\n                <Column field=\"name\" header=\"Name\" :expander=\"true\">\n                    <template #filter>\n                        <InputText type=\"text\" v-model=\"filters1['name']\" class=\"p-column-filter\" placeholder=\"Filter by name\" />\n                    </template>\n                </Column>\n                <Column field=\"size\" header=\"Size\">\n                    <template #filter>\n                        <InputText type=\"text\" v-model=\"filters1['size']\" class=\"p-column-filter\" placeholder=\"Filter by size\"/>\n                    </template>\n                </Column>\n                <Column field=\"type\" header=\"Type\">\n                    <template #filter>\n                        <InputText type=\"text\" v-model=\"filters1['type']\" class=\"p-column-filter\" placeholder=\"Filter by type\"/>\n                    </template>\n                </Column>\n            </TreeTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Strict Filter</h5>\n            <TreeTable :value=\"nodes\" :filters=\"filters2\" filterMode=\"strict\">\n                <template #header>\n                    <div class=\"p-text-right\">\n                        <div class=\"p-input-icon-left\">\n                            <i class=\"pi pi-search\"></i>\n                            <InputText v-model=\"filters2['global']\" placeholder=\"Global Search\" size=\"50\" />\n                        </div>\n                    </div>\n                </template>\n                <Column field=\"name\" header=\"Name\" :expander=\"true\">\n                    <template #filter>\n                        <InputText type=\"text\" v-model=\"filters2['name']\" class=\"p-column-filter\" placeholder=\"Filter by name\" />\n                    </template>\n                </Column>\n                <Column field=\"size\" header=\"Size\">\n                    <template #filter>\n                        <InputText type=\"text\" v-model=\"filters2['size']\" class=\"p-column-filter\" placeholder=\"Filter by size\" />\n                    </template>\n                </Column>\n                <Column field=\"type\" header=\"Type\">\n                    <template #filter>\n                        <InputText type=\"text\" v-model=\"filters2['type']\" class=\"p-column-filter\" placeholder=\"Filter by type\" />\n                    </template>\n                </Column>\n            </TreeTable>\n        </div>\n    </div>                    \n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport NodeService from './service/NodeService';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            nodeService.value.getTreeTableNodes().then(data => nodes.value = data)\n        })\n\n        const filters1 = ref({});\n        const filters2 = ref({});\n        const nodes = ref();\n        const nodeService = ref(new NodeService());\n\n        return { filters1, filters2, nodes, nodeService }\n    }\n}\n<\\\\/script>\n\n<style scoped lang=\"scss\">\n.p-filter-column {\n    .p-multiselect, .p-dropdown, .p-inputtext {\n        width: 100%;\n    }\n}\n</style>`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/treetable/treetable.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/column/column.min.js\"><\\\\/script>\n        <script src=\"./NodeService.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <div class=\"card\">\n                <h5>Lenient Filter</h5>\n                <p-treetable :value=\"nodes\" :filters=\"filters1\" filter-mode=\"lenient\">\n                    <template #header>\n                        <div class=\"p-text-right\">\n                            <div class=\"p-input-icon-left\">\n                                <i class=\"pi pi-search\"></i>\n                                <p-inputtext v-model=\"filters1['global']\" placeholder=\"Global Search\" size=\"50\"></p-inputtext>\n                            </div>\n                        </div>\n                    </template>\n                    <p-column field=\"name\" header=\"Name\" :expander=\"true\">\n                        <template #filter>\n                            <p-inputtext type=\"text\" v-model=\"filters1['name']\" class=\"p-column-filter\" placeholder=\"Filter by name\"></p-inputtext>\n                        </template>\n                    </p-column>\n                    <p-column field=\"size\" header=\"Size\">\n                        <template #filter>\n                            <p-inputtext type=\"text\" v-model=\"filters1['size']\" class=\"p-column-filter\" placeholder=\"Filter by size\"></p-inputtext>\n                        </template>\n                    </p-column>\n                    <p-column field=\"type\" header=\"Type\">\n                        <template #filter>\n                            <p-inputtext type=\"text\" v-model=\"filters1['type']\" class=\"p-column-filter\" placeholder=\"Filter by type\"></p-inputtext>\n                        </template>\n                    </p-column>\n                </p-treetable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Strict Filter</h5>\n                <p-treetable :value=\"nodes\" :filters=\"filters2\" filter-mode=\"strict\">\n                    <template #header>\n                        <div class=\"p-text-right\">\n                            <div class=\"p-input-icon-left\">\n                                <i class=\"pi pi-search\"></i>\n                                <p-inputtext v-model=\"filters2['global']\" placeholder=\"Global Search\" size=\"50\"></p-inputtext>\n                            </div>\n                        </div>\n                    </template>\n                    <p-column field=\"name\" header=\"Name\" :expander=\"true\">\n                        <template #filter>\n                            <p-inputtext type=\"text\" v-model=\"filters2['name']\" class=\"p-column-filter\" placeholder=\"Filter by name\"></p-inputtext>\n                        </template>\n                    </p-column>\n                    <p-column field=\"size\" header=\"Size\">\n                        <template #filter>\n                            <p-inputtext type=\"text\" v-model=\"filters2['size']\" class=\"p-column-filter\" placeholder=\"Filter by size\"></p-inputtext>\n                        </template>\n                    </p-column>\n                    <p-column field=\"type\" header=\"Type\">\n                        <template #filter>\n                            <p-inputtext type=\"text\" v-model=\"filters2['type']\" class=\"p-column-filter\" placeholder=\"Filter by type\"></p-inputtext>\n                        </template>\n                    </p-column>\n                </p-treetable>\n            </div>\n        </div>                    \n\n        <script type=\"module\">\n        const { createApp, ref, onMounted } = Vue;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    nodeService.value.getTreeTableNodes().then(data => nodes.value = data)\n                })\n\n                const filters1 = ref({});\n                const filters2 = ref({});\n                const nodes = ref();\n                const nodeService = ref(new NodeService());\n\n                return { filters1, filters2, nodes, nodeService }\n            },\n            components: {\n                \"p-treetable\": primevue.treetable,\n                \"p-column\": primevue.column,\n                \"p-inputtext\": primevue.inputtext\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\\\/script>\n\n        <style>\n            .p-filter-column .p-multiselect, \n            .p-filter-column .p-dropdown, \n            .p-filter-column .p-inputtext {\n                width: 100%;\n            }\n        </style>`\n                }\n            }\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeTableNodes().then(data => this.nodes = data);\n    }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.p-filter-column {\n    .p-multiselect, .p-dropdown, .p-inputtext {\n        width: 100%;\n    }\n}\n</style>"],"sourceRoot":""}]}