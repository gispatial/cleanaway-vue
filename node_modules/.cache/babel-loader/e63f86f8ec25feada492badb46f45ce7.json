{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/progressbar/ProgressBarDemo.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/progressbar/ProgressBarDemo.vue","mtime":1634589566280},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFByb2dyZXNzQmFyRG9jIGZyb20gJy4vUHJvZ3Jlc3NCYXJEb2MnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHZhbHVlMTogMCwKICAgICAgdmFsdWUyOiA1MAogICAgfTsKICB9LAogIGludGVydmFsOiBudWxsLAogIG1ldGhvZHM6IHsKICAgIHN0YXJ0UHJvZ3Jlc3M6IGZ1bmN0aW9uIHN0YXJ0UHJvZ3Jlc3MoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLmludGVydmFsID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBuZXdWYWx1ZSA9IF90aGlzLnZhbHVlMSArIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKSArIDE7CgogICAgICAgIGlmIChuZXdWYWx1ZSA+PSAxMDApIHsKICAgICAgICAgIG5ld1ZhbHVlID0gMTAwOwogICAgICAgIH0KCiAgICAgICAgX3RoaXMudmFsdWUxID0gbmV3VmFsdWU7CiAgICAgIH0sIDIwMDApOwogICAgfSwKICAgIGVuZFByb2dyZXNzOiBmdW5jdGlvbiBlbmRQcm9ncmVzcygpIHsKICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKTsKICAgICAgdGhpcy5pbnRlcnZhbCA9IG51bGw7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5zdGFydFByb2dyZXNzKCk7CiAgfSwKICBiZWZvcmVVbm1vdW50OiBmdW5jdGlvbiBiZWZvcmVVbm1vdW50KCkgewogICAgdGhpcy5lbmRQcm9ncmVzcygpOwogIH0sCiAgY29tcG9uZW50czogewogICAgJ1Byb2dyZXNzQmFyRG9jJzogUHJvZ3Jlc3NCYXJEb2MKICB9Cn07"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/progressbar/ProgressBarDemo.vue"],"names":[],"mappings":"AA4BA,OAAO,cAAP,MAA2B,kBAA3B;AAEA,eAAe;AACX,EAAA,IADW,kBACJ;AACH,WAAO;AACH,MAAA,MAAM,EAAE,CADL;AAEH,MAAA,MAAM,EAAE;AAFL,KAAP;AAIH,GANU;AAOX,EAAA,QAAQ,EAAE,IAPC;AAQX,EAAA,OAAO,EAAE;AACL,IAAA,aADK,2BACW;AAAA;;AACZ,WAAK,QAAL,GAAgB,WAAW,CAAC,YAAM;AAC9B,YAAI,QAAO,GAAI,KAAI,CAAC,MAAL,GAAc,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAgB,EAA3B,CAAd,GAA+C,CAA9D;;AACA,YAAI,QAAO,IAAK,GAAhB,EAAqB;AACjB,UAAA,QAAO,GAAI,GAAX;AACJ;;AACA,QAAA,KAAI,CAAC,MAAL,GAAc,QAAd;AACH,OAN0B,EAMxB,IANwB,CAA3B;AAOH,KATI;AAUL,IAAA,WAVK,yBAUS;AACV,MAAA,aAAa,CAAC,KAAK,QAAN,CAAb;AACA,WAAK,QAAL,GAAgB,IAAhB;AACJ;AAbK,GARE;AAuBX,EAAA,OAvBW,qBAuBD;AACN,SAAK,aAAL;AACH,GAzBU;AA0BX,EAAA,aA1BW,2BA0BK;AACZ,SAAK,WAAL;AACH,GA5BU;AA6BX,EAAA,UAAU,EAAE;AACR,sBAAkB;AADV;AA7BD,CAAf","sourcesContent":["<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>ProgressBar</h1>\n                <p>ProgressBar is a process status indicator.</p>\n            </div>\n            <AppDemoActions />\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card\">\n                <h5>Dynamic</h5>\n                <ProgressBar :value=\"value1\" />\n\n                <h5>Static</h5>\n                <ProgressBar :value=\"value2\" :showValue=\"false\" />\n\n                <h5>Indeterminate</h5>\n                <ProgressBar mode=\"indeterminate\" style=\"height: .5em\" />\n            </div>\n        </div>\n\n        <ProgressBarDoc/>\n    </div>\n</template>\n\n<script>\nimport ProgressBarDoc from './ProgressBarDoc';\n\nexport default {\n    data() {\n        return {\n            value1: 0,\n            value2: 50\n        }\n    },\n    interval: null,\n    methods: {\n        startProgress() {\n            this.interval = setInterval(() => {\n                let newValue = this.value1 + Math.floor(Math.random() * 10) + 1;\n                if (newValue >= 100) {\n                    newValue = 100;\n                }\n                this.value1 = newValue;\n            }, 2000);\n        },\n        endProgress() {\n            clearInterval(this.interval);\n            this.interval = null;\n        }\n    },\n    mounted() {\n        this.startProgress();\n    },\n    beforeUnmount() {\n        this.endProgress();\n    },\n    components: {\n        'ProgressBarDoc': ProgressBarDoc\n    }\n}\n</script>"],"sourceRoot":""}]}