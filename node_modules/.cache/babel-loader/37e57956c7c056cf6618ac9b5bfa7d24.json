{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTableLazyDemo.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTableLazyDemo.vue","mtime":1634589566260},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTableLazyDemo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\t<div>\n\t\t<div class=\"content-section introduction\">\n\t\t\t<div class=\"feature-intro\">\n\t\t\t\t<h1>DataTable <span>Lazy</span></h1>\n\t\t\t\t<p>Lazy mode is handy to deal with large datasets, instead of loading the entire data, small chunks of data is loaded by invoking corresponding callbacks everytime paging, sorting and filtering happens.\n                    Sample belows imitates lazy paging by using an in memory list. It is also important to assign the logical number of rows to totalRecords by doing a projection query for paginator configuration\n                    so that paginator displays the UI assuming there are actually records of totalRecords size although in reality they aren't as in lazy mode, only the records that are displayed on the current page exist.\n                </p>\n\t\t\t</div>\n            <AppDemoActions />\n\t\t</div>\n\n\t\t<div class=\"content-section implementation\">\n            <div class=\"card\">\n                <DataTable :value=\"customers\" :lazy=\"true\" :paginator=\"true\" :rows=\"10\" v-model:filters=\"filters\" ref=\"dt\"\n                    :totalRecords=\"totalRecords\" :loading=\"loading\" @page=\"onPage($event)\" @sort=\"onSort($event)\" @filter=\"onFilter($event)\" filterDisplay=\"row\"\n                    :globalFilterFields=\"['name','country.name', 'company', 'representative.name']\" responsiveLayout=\"scroll\" >\n                    <Column field=\"name\" header=\"Name\" filterMatchMode=\"startsWith\" ref=\"name\" :sortable=\"true\">  \n                        <template #filter=\"{filterModel,filterCallback}\">\n                            <InputText type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" placeholder=\"Search by name\"/>\n                        </template>                    \n                    </Column>\n                    <Column field=\"country.name\" header=\"Country\" filterField=\"country.name\" filterMatchMode=\"contains\" ref=\"country.name\" :sortable=\"true\">\n                        <template #filter=\"{filterModel,filterCallback}\">\n                            <InputText type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" placeholder=\"Search by country\"/>\n                        </template>\n                    </Column>\n                    <Column field=\"company\" header=\"Company\" filterMatchMode=\"contains\" ref=\"company\" :sortable=\"true\">\n                        <template #filter=\"{filterModel,filterCallback}\">\n                            <InputText type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" placeholder=\"Search by company\"/>\n                        </template>\n                    </Column>\n                    <Column field=\"representative.name\" header=\"Representative\" filterField=\"representative.name\" ref=\"representative.name\" :sortable=\"true\">\n                        <template #filter=\"{filterModel,filterCallback}\">\n                            <InputText type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" placeholder=\"Search by representative\"/>\n                        </template>\n                    </Column>\n                </DataTable>\n            </div>\n\t\t</div>\n \n        <AppDoc name=\"DataTableLazyDemo\" :sources=\"sources\" :service=\"['CustomerService']\" github=\"datatable/DataTableLazyDemo.vue\" />\n\t</div>\n</template>\n\n<script>\nimport CustomerService from '../../service/CustomerService';\n\nexport default {\n    data() {\n        return {\n            loading: false,\n            totalRecords: 0,\n            customers: null,\n            filters: {\n                'name': {value: '', matchMode: 'contains'},\n                'country.name': {value: '', matchMode: 'contains'},\n                'company': {value: '', matchMode: 'contains'},\n                'representative.name': {value: '', matchMode: 'contains'},\n            },\n            lazyParams: {},\n            columns: [\n                {field: 'name', header: 'Name'},\n                {field: 'country.name', header: 'Country'},\n                {field: 'company', header: 'Company'},\n                {field: 'representative.name', header: 'Representative'}\n            ],\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n\t<div>\n        <DataTable :value=\"customers\" :lazy=\"true\" :paginator=\"true\" :rows=\"10\" v-model:filters=\"filters\" ref=\"dt\"\n            :totalRecords=\"totalRecords\" :loading=\"loading\" @page=\"onPage($event)\" @sort=\"onSort($event)\" @filter=\"onFilter($event)\" filterDisplay=\"row\"\n            :globalFilterFields=\"['name','country.name', 'company', 'representative.name']\" responsiveLayout=\"scroll\">\n            <Column field=\"name\" header=\"Name\" filterMatchMode=\"startsWith\" ref=\"name\" :sortable=\"true\">  \n                <template #filter=\"{filterModel,filterCallback}\">\n                    <InputText type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" placeholder=\"Search by name\"/>\n                </template>                    \n            </Column>\n            <Column field=\"country.name\" header=\"Country\" filterField=\"country.name\" filterMatchMode=\"contains\" ref=\"country.name\" :sortable=\"true\">\n                <template #filter=\"{filterModel,filterCallback}\">\n                    <InputText type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" placeholder=\"Search by country\"/>\n                </template>\n            </Column>\n            <Column field=\"company\" header=\"Company\" filterMatchMode=\"contains\" ref=\"company\" :sortable=\"true\">\n                <template #filter=\"{filterModel,filterCallback}\">\n                    <InputText type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" placeholder=\"Search by company\"/>\n                </template>\n            </Column>\n            <Column field=\"representative.name\" header=\"Representative\" filterField=\"representative.name\" ref=\"representative.name\" :sortable=\"true\">\n                <template #filter=\"{filterModel,filterCallback}\">\n                    <InputText type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" placeholder=\"Search by representative\"/>\n                </template>\n            </Column>\n        </DataTable>\n\t</div>\n</template>\n\n<script>\nimport CustomerService from './service/CustomerService';\n\nexport default {\n    data() {\n        return {\n            loading: false,\n            totalRecords: 0,\n            customers: null,\n            filters: {\n                'name': {value: '', matchMode: 'contains'},\n                'country.name': {value: '', matchMode: 'contains'},\n                'company': {value: '', matchMode: 'contains'},\n                'representative.name': {value: '', matchMode: 'contains'},\n            },\n            lazyParams: {},\n            columns: [\n                {field: 'name', header: 'Name'},\n                {field: 'country.name', header: 'Country'},\n                {field: 'company', header: 'Company'},\n                {field: 'representative.name', header: 'Representative'}\n            ]\n        }\n    },\n    customerService: null,\n    created() {\n        this.customerService = new CustomerService();\n    },\n    mounted() {\n        this.loading = true;\n        \n        this.lazyParams = {\n            first: 0,\n            rows: this.$refs.dt.rows,\n            sortField: null,\n            sortOrder: null,\n            filters: this.filters\n        };\n\n        this.loadLazyData();\n    },\n    methods: {\n        loadLazyData() {\n            this.loading = true;\n\n            setTimeout(() => {\n                this.customerService.getCustomers(\n                    {lazyEvent: JSON.stringify( this.lazyParams )})\n                        .then(data => {\n                            this.customers = data.customers;\n                            this.totalRecords = data.totalRecords;\n                            this.loading = false;\n                    }\n                );\n            }, Math.random() * 1000 + 250);\n        },\n        onPage(event) {\n            this.lazyParams = event;\n            this.loadLazyData();\n        },\n        onSort(event) {\n            this.lazyParams = event;\n            this.loadLazyData();\n        },\n        onFilter() {\n            this.lazyParams.filters = this.filters;\n            this.loadLazyData();\n        }\n    }\n}\n<\\\\/script>                  \n`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n\t<div>\n        <DataTable :value=\"customers\" :lazy=\"true\" :paginator=\"true\" :rows=\"10\" v-model:filters=\"filters\" ref=\"dt\"\n            :totalRecords=\"totalRecords\" :loading=\"loading\" @page=\"onPage($event)\" @sort=\"onSort($event)\" @filter=\"onFilter($event)\" filterDisplay=\"row\"\n            :globalFilterFields=\"['name','country.name', 'company', 'representative.name']\" responsiveLayout=\"scroll\">\n            <Column field=\"name\" header=\"Name\" filterMatchMode=\"startsWith\" ref=\"name\" :sortable=\"true\">  \n                <template #filter=\"{filterModel,filterCallback}\">\n                    <InputText type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" placeholder=\"Search by name\"/>\n                </template>                    \n            </Column>\n            <Column field=\"country.name\" header=\"Country\" filterField=\"country.name\" filterMatchMode=\"contains\" ref=\"country.name\" :sortable=\"true\">\n                <template #filter=\"{filterModel,filterCallback}\">\n                    <InputText type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" placeholder=\"Search by country\"/>\n                </template>\n            </Column>\n            <Column field=\"company\" header=\"Company\" filterMatchMode=\"contains\" ref=\"company\" :sortable=\"true\">\n                <template #filter=\"{filterModel,filterCallback}\">\n                    <InputText type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" placeholder=\"Search by company\"/>\n                </template>\n            </Column>\n            <Column field=\"representative.name\" header=\"Representative\" filterField=\"representative.name\" ref=\"representative.name\" :sortable=\"true\">\n                <template #filter=\"{filterModel,filterCallback}\">\n                    <InputText type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" placeholder=\"Search by representative\"/>\n                </template>\n            </Column>\n        </DataTable>\n\t</div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport CustomerService from './service/CustomerService';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            loading.value = true;\n        \n            lazyParams.value = {\n                first: 0,\n                rows: dt.value.rows,\n                sortField: null,\n                sortOrder: null,\n                filters: filters.value\n            };\n\n            loadLazyData();\n        })\n\n        const dt = ref();\n        const loading = ref(false);\n        const totalRecords = ref(0);\n        const customers = ref();\n        const customerService = ref(new CustomerService());\n        const filters = ref({\n            'name': {value: '', matchMode: 'contains'},\n            'country.name': {value: '', matchMode: 'contains'},\n            'company': {value: '', matchMode: 'contains'},\n            'representative.name': {value: '', matchMode: 'contains'},\n        });\n        const lazyParams = ref({});\n        const columns = ref([\n            {field: 'name', header: 'Name'},\n            {field: 'country.name', header: 'Country'},\n            {field: 'company', header: 'Company'},\n            {field: 'representative.name', header: 'Representative'}\n        ]);\n\n        const loadLazyData = () => {\n            loading.value = true;\n\n            setTimeout(() => {\n                customerService.value.getCustomers(\n                    {lazyEvent: JSON.stringify( lazyParams.value )})\n                        .then(data => {\n                            customers.value = data.customers;\n                            totalRecords.value  = data.totalRecords;\n                            loading.value = false;\n                    }\n                );\n            }, Math.random() * 1000 + 250);\n        };\n        const onPage = (event) => {\n            lazyParams.value = event;\n            loadLazyData();\n        };\n        const onSort = (event) => {\n            lazyParams.value = event;\n            loadLazyData();\n        };\n        const onFilter = () => {\n            lazyParams.value.filters = filters.value ;\n            loadLazyData();\n        }\n\n        return { dt, loading, totalRecords, customers, filters, lazyParams, columns, loadLazyData, onPage, onSort, onFilter }\n    }\n}\n<\\\\/script>                  \n`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/datatable/datatable.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/column/column.min.js\"><\\\\/script>\n        <script src=\"./CustomerService.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <p-datatable :value=\"customers\" :lazy=\"true\" :paginator=\"true\" :rows=\"10\" v-model:filters=\"filters\" ref=\"dt\"\n                :total-records=\"totalRecords\" :loading=\"loading\" @page=\"onPage($event)\" @sort=\"onSort($event)\" @filter=\"onFilter($event)\" filter-display=\"row\"\n                :global-filter-fields=\"['name','country.name', 'company', 'representative.name']\" responsive-layout=\"scroll\">\n                <p-column field=\"name\" header=\"Name\" filter-match-mode=\"startsWith\" ref=\"name\" :sortable=\"true\">  \n                    <template #filter=\"{filterModel,filterCallback}\">\n                        <p-inputtext type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" placeholder=\"Search by name\"></p-inputtext>\n                    </template>                    \n                </p-column>\n                <p-column field=\"country.name\" header=\"Country\" filter-field=\"country.name\" filter-match-mode=\"contains\" ref=\"country.name\" :sortable=\"true\">\n                    <template #filter=\"{filterModel,filterCallback}\">\n                        <p-inputtext type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" placeholder=\"Search by country\"></p-inputtext>\n                    </template>\n                </p-column>\n                <p-column field=\"company\" header=\"Company\" filter-match-mode=\"contains\" ref=\"company\" :sortable=\"true\">\n                    <template #filter=\"{filterModel,filterCallback}\">\n                        <p-inputtext type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" placeholder=\"Search by company\"></p-inputtext>\n                    </template>\n                </p-column>\n                <p-column field=\"representative.name\" header=\"Representative\" filter-field=\"representative.name\" ref=\"representative.name\" :sortable=\"true\">\n                    <template #filter=\"{filterModel,filterCallback}\">\n                        <p-inputtext type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" placeholder=\"Search by representative\"></p-inputtext>\n                    </template>\n                </p-column>\n            </p-datatable>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref, onMounted } = Vue;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    loading.value = true;\n                \n                    lazyParams.value = {\n                        first: 0,\n                        rows: dt.value.rows,\n                        sortField: null,\n                        sortOrder: null,\n                        filters: filters.value\n                    };\n\n                    loadLazyData();\n                })\n\n                const dt = ref();\n                const loading = ref(false);\n                const totalRecords = ref(0);\n                const customers = ref();\n                const customerService = ref(new CustomerService());\n                const filters = ref({\n                    'name': {value: '', matchMode: 'contains'},\n                    'country.name': {value: '', matchMode: 'contains'},\n                    'company': {value: '', matchMode: 'contains'},\n                    'representative.name': {value: '', matchMode: 'contains'},\n                });\n                const lazyParams = ref({});\n                const columns = ref([\n                    {field: 'name', header: 'Name'},\n                    {field: 'country.name', header: 'Country'},\n                    {field: 'company', header: 'Company'},\n                    {field: 'representative.name', header: 'Representative'}\n                ]);\n\n                const loadLazyData = () => {\n                    loading.value = true;\n\n                    setTimeout(() => {\n                        customerService.value.getCustomers(\n                            {lazyEvent: JSON.stringify( lazyParams.value )})\n                                .then(data => {\n                                    customers.value = data.customers;\n                                    totalRecords.value  = data.totalRecords;\n                                    loading.value = false;\n                            }\n                        );\n                    }, Math.random() * 1000 + 250);\n                };\n                const onPage = (event) => {\n                    lazyParams.value = event;\n                    loadLazyData();\n                };\n                const onSort = (event) => {\n                    lazyParams.value = event;\n                    loadLazyData();\n                };\n                const onFilter = () => {\n                    lazyParams.value.filters = filters.value ;\n                    loadLazyData();\n                }\n\n                return { dt, loading, totalRecords, customers, filters, lazyParams, columns, loadLazyData, onPage, onSort, onFilter }\n            },\n            components: {\n                \"p-datatable\": primevue.datatable,\n                \"p-column\": primevue.column,\n                \"p-inputtext\": primevue.inputtext\n            }\n        };\n        \n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\\\/script>                  \n`\n                }\n            }\n        }\n    },\n    customerService: null,\n    created() {\n        this.customerService = new CustomerService();\n    },\n    mounted() {\n        this.loading = true;\n        \n        this.lazyParams = {\n            first: 0,\n            rows: this.$refs.dt.rows,\n            sortField: null,\n            sortOrder: null,\n            filters: this.filters\n        };\n\n        this.loadLazyData();\n    },\n    methods: {\n        loadLazyData() {\n            this.loading = true;\n\n            setTimeout(() => {\n                this.customerService.getCustomers({lazyEvent: JSON.stringify( this.lazyParams )}).then(data => {\n                    this.customers = data.customers;\n                    this.totalRecords = data.totalRecords;\n                    this.loading = false;\n                });\n            }, Math.random() * 1000 + 250);\n        },\n        onPage(event) {\n            this.lazyParams = event;\n            this.loadLazyData();\n        },\n        onSort(event) {\n            this.lazyParams = event;\n            this.loadLazyData();\n        },\n        onFilter() {\n            this.lazyParams.filters = this.filters;\n            this.loadLazyData();\n        }\n    }\n}\n</script>"],"sourceRoot":""}]}