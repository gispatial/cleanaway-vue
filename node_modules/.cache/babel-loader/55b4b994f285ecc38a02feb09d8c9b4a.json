{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/filterservice/FilterServiceDoc.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/filterservice/FilterServiceDoc.vue","mtime":1634589566266},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/filterservice/FilterServiceDoc.vue"],"names":[],"mappings":"AA8MA,eAAe;AACd,EAAA,IADc,kBACP;AACN,WAAO;AACN,MAAA,OAAO,EAAE;AACR,uBAAe;AACd,UAAA,OAAO,EAAE,oBADK;AAEd,UAAA,OAAO;AAFO,SADP;AAmFR,2BAAmB;AAClB,UAAA,OAAO,EAAE,wBADS;AAElB,UAAA,OAAO;AAFW,SAnFX;AAoKR,0BAAkB;AACjB,UAAA,OAAO,EAAE,gBADQ;AAEjB,UAAA,OAAO,sOAFU;AAKjB,UAAA,OAAO;AALU;AApKV;AADH,KAAP;AAgQD;AAlQc,CAAf","sourcesContent":["<template>\n\t<AppDoc name=\"FilterServiceDemo\" :sources=\"sources\" :service=\"['CustomerService']\" :data=\"['customers-large']\" github=\"filterservice/FilterServiceDemo.vue\">\n\t\t<h5>Import</h5>\n<pre v-code.script><code>\nimport &#123;FilterService&#125; from 'primevue/api';\n\n</code></pre>\n\n\t\t<h5>Import via CDN</h5>\n<pre v-code><code>\n&lt;script src=\"https://unpkg.com/primevue@^3/core/core.js\"&gt;&lt;/script&gt;\n\n</code></pre>\n\n\t\t<h5>Getting Started</h5>\n\t\t<p>Filters are accessed with <i>FilterService.filters</i>.</p>\n<pre v-code.script><code>\nconst value = 'PrimeVue';\n\nFilterService.filters.equals(value, 'Vue');                            //false\nFilterService.filters.equals(value, 8);                               //false\nFilterService.filters.equals(value, new Date());                      //false\nFilterService.filters.contains(value, 'Vue');                          //true\nFilterService.filters.startsWith(value, 'Vue');                        //false\nFilterService.filters.endsWith(value, 'Vue');                          //true\nFilterService.filters.lt(10, 20);                                     //true\nFilterService.filters.gt(50, 20);                                     //true\nFilterService.filters.in(value, ['PrimeFaces', 'PrimeVue']);           //true   \n\n</code></pre>\n\n\t\t<h5>Custom Constraint</h5>\n\t\t<p>FilterService can be extended by adding new constraints using the <span>register</span> function.</p>\n<pre v-code.script><code>\nFilterService.register('isPrimeNumber', (value, filter): boolean => &#123;\n    if (filter === undefined || filter === null || filter.trim() === '') &#123;\n        return true;\n    &#125;\n\n    if (value === undefined || value === null) &#123;\n        return false;\n    &#125;\n    \n    return value.toString() === filter.toString();\n&#125;);\n\nFilterService.filters['isPrimeNumber'](3);                      //true\nFilterService.filters['isPrimeNumber'](5);                      //true\nFilterService.filters['isPrimeNumber'](568985673);              //false\n\n</code></pre>\n\n\t\t<h5>Built-in Constraints</h5>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t<th>Parameters</th>\n\t\t\t\t\t\t<th>Description</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>startsWith</td>\n\t\t\t\t\t\t<td>value: Value to filter<br />\n\t\t\t\t\t\t\tfilter: Filter value<br />\n\t\t\t\t\t\t\tfilterLocale: Locale to use in filtering</td>\n\t\t\t\t\t\t<td>Whether the value starts with the filter value</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>contains</td>\n\t\t\t\t\t\t<td>value: Value to filter<br />\n\t\t\t\t\t\t\tfilter: Filter value<br />\n\t\t\t\t\t\t\tfilterLocale: Locale to use in filtering</td>\n\t\t\t\t\t\t<td>Whether the value contains the filter value</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>endsWith</td>\n\t\t\t\t\t\t<td>value: Value to filter<br />\n\t\t\t\t\t\t\tfilter: Filter value<br />\n\t\t\t\t\t\t\tfilterLocale: Locale to use in filtering</td>\n\t\t\t\t\t\t<td>Whether the value ends with the filter value</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>equals</td>\n\t\t\t\t\t\t<td>value: Value to filter<br />\n\t\t\t\t\t\t\tfilter: Filter value<br />\n\t\t\t\t\t\t\tfilterLocale: Locale to use in filtering</td>\n\t\t\t\t\t\t<td>Whether the value equals the filter value</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>notEquals</td>\n\t\t\t\t\t\t<td>value: Value to filter<br />\n\t\t\t\t\t\t\tfilter: Filter value<br />\n\t\t\t\t\t\t\tfilterLocale: Locale to use in filtering</td>\n\t\t\t\t\t\t<td>Whether the value does not equal the filter value</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>in</td>\n\t\t\t\t\t\t<td>value: Value to filter<br />\n\t\t\t\t\t\t\tfilter[]: An array of filter values<br />\n\t\t\t\t\t\t\tfilterLocale: Locale to use in filtering</td>\n\t\t\t\t\t\t<td>Whether the value contains the filter value</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>lt</td>\n\t\t\t\t\t\t<td>value: Value to filter<br />\n\t\t\t\t\t\t\tfilter: Filter value<br />\n\t\t\t\t\t\t\tfilterLocale: Locale to use in filtering</td>\n\t\t\t\t\t\t<td>Whether the value is less than the filter value</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>lte</td>\n\t\t\t\t\t\t<td>value: Value to filter<br />\n\t\t\t\t\t\t\tfilter: Filter value<br />\n\t\t\t\t\t\t\tfilterLocale: Locale to use in filtering</td>\n\t\t\t\t\t\t<td>Whether the value is less than or equals to the filter value</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>gt</td>\n\t\t\t\t\t\t<td>value: Value to filter<br />\n\t\t\t\t\t\t\tfilter: Filter value<br />\n\t\t\t\t\t\t\tfilterLocale: Locale to use in filtering</td>\n\t\t\t\t\t\t<td>Whether the value is greater than the filter value</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>gte</td>\n\t\t\t\t\t\t<td>value: Value to filter<br />\n\t\t\t\t\t\t\tfilter: Filter value<br />\n\t\t\t\t\t\t\tfilterLocale: Locale to use in filtering</td>\n\t\t\t\t\t\t<td>Whether the value is greater than or equals to the filter value</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>is</td>\n\t\t\t\t\t\t<td>value: Value to filter<br />\n\t\t\t\t\t\t\tfilter: Filter value<br />\n\t\t\t\t\t\t\tfilterLocale: Locale to use in filtering</td>\n\t\t\t\t\t\t<td>Whether the value equals the filter value, alias to equals</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>isNot</td>\n\t\t\t\t\t\t<td>value: Value to filter<br />\n\t\t\t\t\t\t\tfilter: Filter value<br />\n\t\t\t\t\t\t\tfilterLocale: Locale to use in filtering</td>\n\t\t\t\t\t\t<td>Whether the value does not equal the filter value, alias to notEquals.</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>before</td>\n\t\t\t\t\t\t<td>value: Value to filter<br />\n\t\t\t\t\t\t\tfilter: Filter value<br />\n\t\t\t\t\t\t\tfilterLocale: Locale to use in filtering</td>\n\t\t\t\t\t\t<td>Whether the date value is before the filter date.</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>after</td>\n\t\t\t\t\t\t<td>value: Value to filter<br />\n\t\t\t\t\t\t\tfilter: Filter value<br />\n\t\t\t\t\t\t\tfilterLocale: Locale to use in filtering</td>\n\t\t\t\t\t\t<td>Whether the date value is after the filter date.</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\n\t\t\t<h5>FilterService API</h5>\n\t\t\t<div class=\"doc-tablewrapper\">\n\t\t\t\t<table class=\"doc-table\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t\t<th>Parameters</th>\n\t\t\t\t\t\t\t<th>Description</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>filter</td>\n\t\t\t\t\t\t\t<td>value[]: An array of values to filter<br />\n\t\t\t\t\t\t\t\tfields[]: An array of properties in the value object<br />\n\t\t\t\t\t\t\t\tfilterValue: Filter value<br />\n\t\t\t\t\t\t\t\tfilterMatchMode: Constraint<br />\n\t\t\t\t\t\t\t\tfilterLocale: Locale to use in filtering</td>\n\t\t\t\t\t\t\t<td>Whether the property values of the given value collection matches the filter.</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>filters</td>\n\t\t\t\t\t\t\t<td>-</td>\n\t\t\t\t\t\t\t<td>Property to access constraints collection.</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>register</td>\n\t\t\t\t\t\t\t<td>name: string <br />\n\t\t\t\t\t\t\t\tfn: Filter callback</td>\n\t\t\t\t\t\t\t<td>Registers a new constraint in filters.</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<h5>Dependencies</h5>\n\t\t<p>None.</p>\n\t</AppDoc>\n</template>\n\n<script>\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tsources: {\n\t\t\t\t'options-api': {\n\t\t\t\t\ttabName: 'Options API Source',\n\t\t\t\t\tcontent: `\n<template>\n    <div>\n        <div class=\"card\">\n            <DataTable :value=\"customers\" :paginator=\"true\" :rows=\"10\" responsiveLayout=\"scroll\"\n                dataKey=\"id\" v-model:filters=\"filters\" filterDisplay=\"row\" :loading=\"loading\">\n                <template #empty>\n                    No customers found.\n                </template>\n                <template #loading>\n                    Loading customers data. Please wait.\n                </template>\n                <Column field=\"name\" header=\"Name\" :filterMatchModeOptions=\"matchModeOptions\">\n                    <template #body=\"{data}\">\n                        {{data.name}}\n                    </template>\n                    <template #filter=\"{filterModel,filterCallback}\">\n                        <InputText type=\"text\" v-model=\"filterModel.value\" @input=\"filterCallback()\" class=\"p-column-filter\" :placeholder=\"\\`Search by name - \\${filterModel.matchMode}\\`\"/>\n                    </template>\n                </Column>\n                <Column header=\"Country\" filterField=\"country.name\" :filterMatchModeOptions=\"matchModeOptions\">\n                    <template #body=\"{data}\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"30\" />\n                        <span class=\"image-text\">{{data.country.name}}</span>\n                    </template>\n                    <template #filter=\"{filterModel,filterCallback}\">\n                        <InputText type=\"text\" v-model=\"filterModel.value\" @input=\"filterCallback()\" class=\"p-column-filter\" :placeholder=\"\\`Search by country - \\${filterModel.matchMode}\\`\" />\n                    </template>\n                </Column>\n            </DataTable>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {FilterMatchMode,FilterService} from 'primevue/api';\nimport CustomerService from './service/CustomerService';\n\nconst YOUR_FILTER = 'YOUR FILTER';\n\nexport default {\n    data() {\n        return {\n            customers: null,\n            filters: {\n                'name': {value: null, matchMode: YOUR_FILTER},\n                'country.name': {value: null, matchMode: FilterMatchMode.STARTS_WITH}\n            },\n            matchModeOptions: [\n                {label: 'Your Equals', value: YOUR_FILTER},\n                {label: 'Starts With', value: FilterMatchMode.STARTS_WITH}\n            ],\n            loading: true\n        }\n    },\n    created() {\n        this.customerService = new CustomerService();\n    },\n    mounted() {\n        this.customerService.getCustomersLarge().then(data => {\n            this.customers = data; \n            this.loading = false;\n        });\n\n        FilterService.register(YOUR_FILTER, (value, filter) => {\n            if (filter === undefined || filter === null || filter.trim() === '') {\n                return true;\n            }\n    \n            if (value === undefined || value === null) {\n                return false;\n            }\n            \n            return value.toString() === filter.toString();\n        });\n    }\n}\n<\\\\/script>\n`\n\t\t\t\t},\n\t\t\t\t'composition-api': {\n\t\t\t\t\ttabName: 'Composition API Source',\n\t\t\t\t\tcontent: `\n<template>\n    <div>\n        <div class=\"card\">\n            <DataTable :value=\"customers\" :paginator=\"true\" :rows=\"10\" responsiveLayout=\"scroll\"\n                dataKey=\"id\" v-model:filters=\"filters\" filterDisplay=\"row\" :loading=\"loading\">\n                <template #empty>\n                    No customers found.\n                </template>\n                <template #loading>\n                    Loading customers data. Please wait.\n                </template>\n                <Column field=\"name\" header=\"Name\" :filterMatchModeOptions=\"matchModeOptions\">\n                    <template #body=\"{data}\">\n                        {{data.name}}\n                    </template>\n                    <template #filter=\"{filterModel,filterCallback}\">\n                        <InputText type=\"text\" v-model=\"filterModel.value\" @input=\"filterCallback()\" class=\"p-column-filter\" :placeholder=\"\\`Search by name - \\${filterModel.matchMode}\\`\"/>\n                    </template>\n                </Column>\n                <Column header=\"Country\" filterField=\"country.name\" :filterMatchModeOptions=\"matchModeOptions\">\n                    <template #body=\"{data}\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"30\" />\n                        <span class=\"image-text\">{{data.country.name}}</span>\n                    </template>\n                    <template #filter=\"{filterModel,filterCallback}\">\n                        <InputText type=\"text\" v-model=\"filterModel.value\" @input=\"filterCallback()\" class=\"p-column-filter\" :placeholder=\"\\`Search by country - \\${filterModel.matchMode}\\`\" />\n                    </template>\n                </Column>\n            </DataTable>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport {FilterMatchMode,FilterService} from 'primevue/api';\nimport CustomerService from './service/CustomerService';\n\nexport default {\n    setup() {\n\t\tonMounted(() => {\n\t\t\tcustomerService.value.getCustomersLarge().then(data => {\n        \t    customers.value = data; \n        \t    loading.value = false;\n        \t});\n\n\t\t\tFilterService.register(YOUR_FILTER.value, (value, filter) => {\n        \t    if (filter === undefined || filter === null || filter.trim() === '') {\n        \t        return true;\n        \t    }\n\t\n        \t    if (value === undefined || value === null) {\n        \t        return false;\n        \t    }\n\t\n        \t    return value.toString() === filter.toString();\n        \t});\n\t\t})\n\n\t\tconst YOUR_FILTER = ref('YOUR FILTER');\n        const customers = ref();\n\t\tconst customerService = ref(new CustomerService());\n        const filters = ref({\n            'name': {value: null, matchMode: YOUR_FILTER.value},\n            'country.name': {value: null, matchMode: FilterMatchMode.STARTS_WITH}\n        });\n        const matchModeOptions = ref([\n            {label: 'Your Equals', value: YOUR_FILTER.value},\n            {label: 'Starts With', value: FilterMatchMode.STARTS_WITH}\n        ]);\n        const loading = ref(true);\n\n\t\treturn { customers, customerService, filters, matchModeOptions, loading }\n    }\n}\n<\\\\/script>\n`\n\t\t\t\t},\n\t\t\t\t'browser-source': {\n\t\t\t\t\ttabName: 'Browser Source',\n\t\t\t\t\timports: `<script src=\"https://unpkg.com/primevue@^3/datatable/datatable.min.js\"><\\\\/script>\n\t\t\t<script src=\"https://unpkg.com/primevue@^3/column/column.min.js\"><\\\\/script>\n\t\t\t<script src=\"./CustomerService.js\"><\\\\/script>`,\n\t\t\t\t\tcontent: `<div id=\"app\">\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\t<p-datatable :value=\"customers\" :paginator=\"true\" :rows=\"10\" responsive-layout=\"scroll\"\n\t\t\t\t\t\tdata-key=\"id\" v-model:filters=\"filters\" filter-display=\"row\" :loading=\"loading\">\n\t\t\t\t\t\t<template #empty>\n\t\t\t\t\t\t\tNo customers found.\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<template #loading>\n\t\t\t\t\t\t\tLoading customers data. Please wait.\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<p-column field=\"name\" header=\"Name\" :filter-match-mode-options=\"matchModeOptions\">\n\t\t\t\t\t\t\t<template #body=\"{data}\">\n\t\t\t\t\t\t\t\t{{data.name}}\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<template #filter=\"{filterModel,filterCallback}\">\n\t\t\t\t\t\t\t\t<p-inputtext type=\"text\" v-model=\"filterModel.value\" @input=\"filterCallback()\" class=\"p-column-filter\" :placeholder=\"\\`Search by name - \\${filterModel.matchMode}\\`\"></p-inputtext>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</p-column>\n\t\t\t\t\t\t<p-column header=\"Country\" filter-field=\"country.name\" :filter-match-mode-options=\"matchModeOptions\">\n\t\t\t\t\t\t\t<template #body=\"{data}\">\n\t\t\t\t\t\t\t\t<img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"30\" />\n\t\t\t\t\t\t\t\t<span class=\"image-text\">{{data.country.name}}</span>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<template #filter=\"{filterModel,filterCallback}\">\n\t\t\t\t\t\t\t\t<p-inputtext type=\"text\" v-model=\"filterModel.value\" @input=\"filterCallback()\" class=\"p-column-filter\" :placeholder=\"\\`Search by country - \\${filterModel.matchMode}\\`\"></p-inputtext>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</p-column>\n\t\t\t\t\t</p-datatable>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<script type=\"module\">\n\t\t\tconst { createApp, ref, onMounted } = Vue;\n\t\t\tconst { FilterMatchMode, FilterService } = primevue.api;\n\n\t\t\tconst App = {\n\t\t\t\tsetup() {\n\t\t\t\t\tonMounted(() => {\n\t\t\t\t\t\tcustomerService.value.getCustomersLarge().then(data => {\n\t\t\t\t\t\t\tcustomers.value = data; \n\t\t\t\t\t\t\tloading.value = false;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tFilterService.register(YOUR_FILTER.value, (value, filter) => {\n\t\t\t\t\t\t\tif (filter === undefined || filter === null || filter.trim() === '') {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\tif (value === undefined || value === null) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t\treturn value.toString() === filter.toString();\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\n\t\t\t\t\tconst YOUR_FILTER = ref('YOUR FILTER');\n\t\t\t\t\tconst customers = ref();\n\t\t\t\t\tconst customerService = ref(new CustomerService());\n\t\t\t\t\tconst filters = ref({\n\t\t\t\t\t\t'name': {value: null, matchMode: YOUR_FILTER.value},\n\t\t\t\t\t\t'country.name': {value: null, matchMode: FilterMatchMode.STARTS_WITH}\n\t\t\t\t\t});\n\t\t\t\t\tconst matchModeOptions = ref([\n\t\t\t\t\t\t{label: 'Your Equals', value: YOUR_FILTER.value},\n\t\t\t\t\t\t{label: 'Starts With', value: FilterMatchMode.STARTS_WITH}\n\t\t\t\t\t]);\n\t\t\t\t\tconst loading = ref(true);\n\n\t\t\t\t\treturn { customers, customerService, filters, matchModeOptions, loading }\n\t\t\t\t},\n\t\t\t\tcomponents: {\n\t\t\t\t\t\"p-datatable\": primevue.datatable,\n\t\t\t\t\t\"p-column\": primevue.column,\n\t\t\t\t\t\"p-inputtext\": primevue.inputtext\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tcreateApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n\t\t\t<\\\\/script>\n`\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n</script>"],"sourceRoot":""}]}