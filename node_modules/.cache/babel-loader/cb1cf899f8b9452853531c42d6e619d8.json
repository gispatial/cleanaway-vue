{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/validation/VuelidateFormDemo.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/validation/VuelidateFormDemo.vue","mtime":1634589566293},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/validation/VuelidateFormDemo.vue"],"names":[],"mappings":";AAqGA,SAAS,KAAT,EAAgB,QAAhB,QAAgC,uBAAhC;AACA,SAAS,YAAT,QAA6B,iBAA7B;AACA,OAAO,cAAP,MAA2B,8BAA3B;AAEA,eAAe;AACX,EAAA,KAAK,EAAE;AAAA,WAAO;AAAE,MAAA,EAAE,EAAE,YAAY;AAAlB,KAAP;AAAA,GADI;AAEX,EAAA,IAFW,kBAEJ;AACH,WAAO;AACH,MAAA,IAAI,EAAE,EADH;AAEH,MAAA,KAAK,EAAE,EAFJ;AAGH,MAAA,QAAQ,EAAE,EAHP;AAIH,MAAA,IAAI,EAAE,IAJH;AAKH,MAAA,OAAO,EAAE,IALN;AAMH,MAAA,MAAM,EAAE,IANL;AAOH,MAAA,SAAS,EAAE,KAPR;AAQH,MAAA,SAAS,EAAE,IARR;AASH,MAAA,WAAW,EAAE,KATV;AAUH,MAAA,OAAO,EAAE;AACL,uBAAe;AACX,UAAA,OAAO,EAAE,oBADE;AAEX,UAAA,OAAO;AAFI,SADV;AA4LL,2BAAmB;AACf,UAAA,OAAO,EAAE,wBADM;AAEf,UAAA,OAAO;AAFQ;AA5Ld;AAVN,KAAP;AA2XH,GA9XU;AA+XX,EAAA,cAAc,EAAE,IA/XL;AAgYX,EAAA,WAhYW,yBAgYG;AACV,WAAO;AACH,MAAA,IAAI,EAAE;AACF,QAAA,QAAO,EAAP;AADE,OADH;AAIH,MAAA,KAAK,EAAE;AACH,QAAA,QAAQ,EAAR,QADG;AAEH,QAAA,KAAI,EAAJ;AAFG,OAJJ;AAQH,MAAA,QAAQ,EAAE;AACN,QAAA,QAAO,EAAP;AADM,OARP;AAWH,MAAA,MAAM,EAAE;AACJ,QAAA,QAAO,EAAP;AADI;AAXL,KAAP;AAeH,GAhZU;AAiZX,EAAA,OAjZW,qBAiZD;AACN,SAAK,cAAL,GAAsB,IAAI,cAAJ,EAAtB;AACH,GAnZU;AAoZX,EAAA,OApZW,qBAoZD;AAAA;;AACN,SAAK,cAAL,CAAoB,YAApB,GAAmC,IAAnC,CAAwC,UAAA,IAAG;AAAA,aAAK,KAAI,CAAC,SAAL,GAAiB,IAAtB;AAAA,KAA3C;AACH,GAtZU;AAuZX,EAAA,OAAO,EAAE;AACL,IAAA,YADK,wBACQ,WADR,EACqB;AACtB,WAAK,SAAL,GAAiB,IAAjB;;AAEA,UAAI,CAAC,WAAL,EAAkB;AACd;AACJ;;AAEA,WAAK,YAAL;AACH,KATI;AAUL,IAAA,YAVK,0BAUU;AACX,WAAK,WAAL,GAAmB,CAAC,KAAK,WAAzB;;AAEA,UAAG,CAAC,KAAK,WAAT,EAAsB;AAClB,aAAK,SAAL;AACJ;AACH,KAhBI;AAiBL,IAAA,SAjBK,uBAiBO;AACR,WAAK,IAAL,GAAY,EAAZ;AACA,WAAK,KAAL,GAAa,EAAb;AACA,WAAK,QAAL,GAAgB,EAAhB;AACA,WAAK,IAAL,GAAY,IAAZ;AACA,WAAK,OAAL,GAAe,IAAf;AACA,WAAK,MAAL,GAAc,IAAd;AACA,WAAK,SAAL,GAAiB,KAAjB;AACJ;AAzBK;AAvZE,CAAf","sourcesContent":["<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>Vuelidate</h1>\n                <p>PrimeVue components can be easily used/integrated with <a href=\"https://vuelidate.js.org/\">Vuelidate</a>. In this example, a register panel is simulated using Vuelidate.</p>\n            </div>\n            <AppDemoActions />\n        </div>\n\n        <div class=\"content-section implementation form-demo\">\n            <Dialog v-model:visible=\"showMessage\" :breakpoints=\"{ '960px': '80vw' }\" :style=\"{ width: '30vw' }\" position=\"top\">\n                <div class=\"p-d-flex p-ai-center p-dir-col p-pt-6 p-px-3\">\n                    <i class=\"pi pi-check-circle\" :style=\"{fontSize: '5rem', color: 'var(--green-500)' }\"></i>\n                    <h5>Registration Successful!</h5>\n                    <p :style=\"{lineHeight: 1.5, textIndent: '1rem'}\">\n                        Your account is registered under name <b>{{name}}</b> ; it'll be valid next 30 days without activation. Please check <b>{{email}}</b> for activation instructions.\n                    </p>\n                </div>\n                <template #footer>\n                    <div class=\"p-d-flex p-jc-center\">\n                        <Button label=\"OK\" @click=\"toggleDialog\" class=\"p-button-text\" />\n                    </div>\n                </template>\n            </Dialog>\n\n            <div class=\"p-d-flex p-jc-center\">\n                <div class=\"card\">\n                    <h5 class=\"p-text-center\">Register</h5>\n                    <form @submit.prevent=\"handleSubmit(!v$.$invalid)\" class=\"p-fluid\">\n                        <div class=\"p-field\">\n                            <div class=\"p-float-label\">\n                                <InputText id=\"name\" v-model=\"v$.name.$model\" :class=\"{'p-invalid':v$.name.$invalid && submitted}\" />\n                                <label for=\"name\" :class=\"{'p-error':v$.name.$invalid && submitted}\">Name*</label>\n                            </div>\n                            <small v-if=\"(v$.name.$invalid && submitted) || v$.name.$pending.$response\" class=\"p-error\">{{v$.name.required.$message.replace('Value', 'Name')}}</small>\n                        </div>\n                        <div class=\"p-field\">\n                            <div class=\"p-float-label p-input-icon-right\">\n                                <i class=\"pi pi-envelope\" />\n                                <InputText id=\"email\" v-model=\"v$.email.$model\" :class=\"{'p-invalid':v$.email.$invalid && submitted}\" aria-describedby=\"email-error\"/>\n                                <label for=\"email\" :class=\"{'p-error':v$.email.$invalid && submitted}\">Email*</label>\n                            </div>\n                            <span v-if=\"v$.email.$error && submitted\">\n                                <span id=\"email-error\" v-for=\"(error, index) of v$.email.$errors\" :key=\"index\">\n                                <small class=\"p-error\">{{error.$message}}</small>\n                                </span>\n                            </span>\n                            <small v-else-if=\"(v$.email.$invalid && submitted) || v$.email.$pending.$response\" class=\"p-error\">{{v$.email.required.$message.replace('Value', 'Email')}}</small>\n                        </div>\n                        <div class=\"p-field\">\n                            <div class=\"p-float-label\">\n                                <Password id=\"password\" v-model=\"v$.password.$model\" :class=\"{'p-invalid':v$.password.$invalid && submitted}\" toggleMask>\n                                    <template #header>\n                                        <h6>Pick a password</h6>\n                                    </template>\n                                    <template #footer=\"sp\">\n                                        {{sp.level}}\n                                        <Divider />\n                                        <p class=\"p-mt-2\">Suggestions</p>\n                                        <ul class=\"p-pl-2 p-ml-2 p-mt-0\" style=\"line-height: 1.5\">\n                                            <li>At least one lowercase</li>\n                                            <li>At least one uppercase</li>\n                                            <li>At least one numeric</li>\n                                            <li>Minimum 8 characters</li>\n                                        </ul>\n                                    </template>\n                                </Password>\n                                <label for=\"password\" :class=\"{'p-error':v$.password.$invalid && submitted}\">Password*</label>\n                            </div>\n                            <small v-if=\"(v$.password.$invalid && submitted) || v$.password.$pending.$response\" class=\"p-error\">{{v$.password.required.$message.replace('Value', 'Password')}}</small>\n                        </div>\n                        <div class=\"p-field\">\n                            <div class=\"p-float-label\">\n                                <Calendar id=\"date\" v-model=\"date\" :showIcon=\"true\" />\n                                <label for=\"date\">Birthday</label>\n                            </div>\n                        </div>\n                        <div class=\"p-field\">\n                            <div class=\"p-float-label\">\n                                <Dropdown id=\"country\" v-model=\"country\" :options=\"countries\" optionLabel=\"name\" />\n                                <label for=\"country\">Country</label>\n                            </div>\n                        </div>\n                        <div class=\"p-field-checkbox\">\n                            <Checkbox id=\"accept\" name=\"accept\" value=\"Accept\" v-model=\"v$.accept.$model\" :class=\"{'p-invalid':v$.accept.$invalid && submitted}\" />\n                            <label for=\"accept\" :class=\"{'p-error': v$.accept.$invalid && submitted}\">I agree to the terms and conditions*</label>\n                        </div>\n                        <Button type=\"submit\" label=\"Submit\" class=\"p-mt-2\" />\n                    </form>\n                </div>\n            </div>\n        </div>\n\n        <AppDoc name=\"VuelidateFormDemo\" :sources=\"sources\" :service=\"['CountryService']\" :data=\"['countries']\" github=\"validation/VuelidateFormDemo.vue\"\n            :dependencies=\"{'@vuelidate/core': '^2.0.0-alpha.14', '@vuelidate/validators': '^2.0.0-alpha.12'}\"/>\n\n    </div>\n</template>\n\n<script>\nimport { email, required } from \"@vuelidate/validators\";\nimport { useVuelidate } from \"@vuelidate/core\";\nimport CountryService from '../../service/CountryService';\n\nexport default {\n    setup: () => ({ v$: useVuelidate() }),\n    data() {\n        return {\n            name: '',\n            email: '',\n            password: '',\n            date: null,\n            country: null,\n            accept: null,\n            submitted: false,\n            countries: null,\n            showMessage: false,\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div class=\"form-demo\">\n        <Dialog v-model:visible=\"showMessage\" :breakpoints=\"{ '960px': '80vw' }\" :style=\"{ width: '30vw' }\" position=\"top\">\n            <div class=\"p-d-flex p-ai-center p-dir-col p-pt-6 p-px-3\">\n                <i class=\"pi pi-check-circle\" :style=\"{fontSize: '5rem', color: 'var(--green-500)' }\"></i>\n                <h5>Registration Successful!</h5>\n                <p :style=\"{lineHeight: 1.5, textIndent: '1rem'}\">\n                    Your account is registered under name <b>{{name}}</b> ; it'll be valid next 30 days without activation. Please check <b>{{email}}</b> for activation instructions.\n                </p>\n            </div>\n            <template #footer>\n                <div class=\"p-d-flex p-jc-center\">\n                    <Button label=\"OK\" @click=\"toggleDialog\" class=\"p-button-text\" />\n                </div>\n            </template>\n        </Dialog>\n\n        <div class=\"p-d-flex p-jc-center\">\n            <div class=\"card\">\n                <h5 class=\"p-text-center\">Register</h5>\n                <form @submit.prevent=\"handleSubmit(!v$.$invalid)\" class=\"p-fluid\">\n                    <div class=\"p-field\">\n                        <div class=\"p-float-label\">\n                            <InputText id=\"name\" v-model=\"v$.name.$model\" :class=\"{'p-invalid':v$.name.$invalid && submitted}\" />\n                            <label for=\"name\" :class=\"{'p-error':v$.name.$invalid && submitted}\">Name*</label>\n                        </div>\n                        <small v-if=\"(v$.name.$invalid && submitted) || v$.name.$pending.$response\" class=\"p-error\">{{v$.name.required.$message.replace('Value', 'Name')}}</small>\n                    </div>\n                    <div class=\"p-field\">\n                        <div class=\"p-float-label p-input-icon-right\">\n                            <i class=\"pi pi-envelope\" />\n                            <InputText id=\"email\" v-model=\"v$.email.$model\" :class=\"{'p-invalid':v$.email.$invalid && submitted}\" aria-describedby=\"email-error\"/>\n                            <label for=\"email\" :class=\"{'p-error':v$.email.$invalid && submitted}\">Email*</label>\n                        </div>\n                        <span v-if=\"v$.email.$error && submitted\">\n                            <span id=\"email-error\" v-for=\"(error, index) of v$.email.$errors\" :key=\"index\">\n                            <small class=\"p-error\">{{error.$message}}</small>\n                            </span>\n                        </span>\n                        <small v-else-if=\"(v$.email.$invalid && submitted) || v$.email.$pending.$response\" class=\"p-error\">{{v$.email.required.$message.replace('Value', 'Email')}}</small>\n                    </div>\n                    <div class=\"p-field\">\n                        <div class=\"p-float-label\">\n                            <Password id=\"password\" v-model=\"v$.password.$model\" :class=\"{'p-invalid':v$.password.$invalid && submitted}\" toggleMask>\n                                <template #header>\n                                    <h6>Pick a password</h6>\n                                </template>\n                                <template #footer=\"sp\">\n                                    {{sp.level}}\n                                    <Divider />\n                                    <p class=\"p-mt-2\">Suggestions</p>\n                                    <ul class=\"p-pl-2 p-ml-2 p-mt-0\" style=\"line-height: 1.5\">\n                                        <li>At least one lowercase</li>\n                                        <li>At least one uppercase</li>\n                                        <li>At least one numeric</li>\n                                        <li>Minimum 8 characters</li>\n                                    </ul>\n                                </template>\n                            </Password>\n                            <label for=\"password\" :class=\"{'p-error':v$.password.$invalid && submitted}\">Password*</label>\n                        </div>\n                        <small v-if=\"(v$.password.$invalid && submitted) || v$.password.$pending.$response\" class=\"p-error\">{{v$.password.required.$message.replace('Value', 'Password')}}</small>\n                    </div>\n                    <div class=\"p-field\">\n                        <div class=\"p-float-label\">\n                            <Calendar id=\"date\" v-model=\"date\" :showIcon=\"true\" />\n                            <label for=\"date\">Birthday</label>\n                        </div>\n                    </div>\n                    <div class=\"p-field\">\n                        <div class=\"p-float-label\">\n                            <Dropdown id=\"country\" v-model=\"country\" :options=\"countries\" optionLabel=\"name\" />\n                            <label for=\"country\">Country</label>\n                        </div>\n                    </div>\n                    <div class=\"p-field-checkbox\">\n                        <Checkbox id=\"accept\" name=\"accept\" value=\"Accept\" v-model=\"v$.accept.$model\" :class=\"{'p-invalid':v$.accept.$invalid && submitted}\" />\n                        <label for=\"accept\" :class=\"{'p-error': v$.accept.$invalid && submitted}\">I agree to the terms and conditions*</label>\n                    </div>\n                    <Button type=\"submit\" label=\"Submit\" class=\"p-mt-2\" />\n                </form>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { email, required } from \"@vuelidate/validators\";\nimport { useVuelidate } from \"@vuelidate/core\";\nimport CountryService from './service/CountryService';\n\nexport default {\n    setup: () => ({ v$: useVuelidate() }),\n    data() {\n        return {\n            name: '',\n            email: '',\n            password: '',\n            date: null,\n            country: null,\n            accept: null,\n            submitted: false,\n            countries: null,\n            showMessage: false\n        }\n    },\n    countryService: null,\n    validations() {\n        return {\n            name: {\n                required\n            },\n            email: {\n                required,\n                email\n            },\n            password: {\n                required\n            },\n            accept: {\n                required\n            }\n        }\n    },\n    created() {\n        this.countryService = new CountryService();\n    },\n    mounted() {\n        this.countryService.getCountries().then(data => this.countries = data);\n    },\n    methods: {\n        handleSubmit(isFormValid) {\n            this.submitted = true;\n\n            if (!isFormValid) {\n                return;\n            }\n\n            this.toggleDialog();\n        },\n        toggleDialog() {\n            this.showMessage = !this.showMessage;\n        \n            if(!this.showMessage) {\n                this.resetForm();\n            }\n        },\n        resetForm() {\n            this.name = '';\n            this.email = '';\n            this.password = '';\n            this.date = null;\n            this.country = null;\n            this.accept = null;\n            this.submitted = false;\n        }\n    }\n}\n<\\\\/script>\n\n<style lang=\"scss\" scoped>\n.form-demo {\n    .card {\n        min-width: 450px;\n\n        form {\n            margin-top: 2rem;\n        }\n\n        .p-field {\n            margin-bottom: 1.5rem;\n        }\n    }\n\n    @media screen and (max-width: 960px) {\n        .card {\n            width: 80%;\n        }\n    }\n}\n\n</style>\n`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div class=\"form-demo\">\n        <Dialog v-model:visible=\"showMessage\" :breakpoints=\"{ '960px': '80vw' }\" :style=\"{ width: '30vw' }\" position=\"top\">\n            <div class=\"p-d-flex p-ai-center p-dir-col p-pt-6 p-px-3\">\n                <i class=\"pi pi-check-circle\" :style=\"{fontSize: '5rem', color: 'var(--green-500)' }\"></i>\n                <h5>Registration Successful!</h5>\n                <p :style=\"{lineHeight: 1.5, textIndent: '1rem'}\">\n                    Your account is registered under name <b>{{state.name}}</b> ; it'll be valid next 30 days without activation. Please check <b>{{state.email}}</b> for activation instructions.\n                </p>\n            </div>\n            <template #footer>\n                <div class=\"p-d-flex p-jc-center\">\n                    <Button label=\"OK\" @click=\"toggleDialog\" class=\"p-button-text\" />\n                </div>\n            </template>\n        </Dialog>\n\n        <div class=\"p-d-flex p-jc-center\">\n            <div class=\"card\">\n                <h5 class=\"p-text-center\">Register</h5>\n                <form @submit.prevent=\"handleSubmit(!v$.$invalid)\" class=\"p-fluid\">\n                    <div class=\"p-field\">\n                        <div class=\"p-float-label\">\n                            <InputText id=\"name\" v-model=\"v$.name.$model\" :class=\"{'p-invalid':v$.name.$invalid && submitted}\" />\n                            <label for=\"name\" :class=\"{'p-error':v$.name.$invalid && submitted}\">Name*</label>\n                        </div>\n                        <small v-if=\"(v$.name.$invalid && submitted) || v$.name.$pending.$response\" class=\"p-error\">{{v$.name.required.$message.replace('Value', 'Name')}}</small>\n                    </div>\n                    <div class=\"p-field\">\n                        <div class=\"p-float-label p-input-icon-right\">\n                            <i class=\"pi pi-envelope\" />\n                            <InputText id=\"email\" v-model=\"v$.email.$model\" :class=\"{'p-invalid':v$.email.$invalid && submitted}\" aria-describedby=\"email-error\"/>\n                            <label for=\"email\" :class=\"{'p-error':v$.email.$invalid && submitted}\">Email*</label>\n                        </div>\n                        <span v-if=\"v$.email.$error && submitted\">\n                            <span id=\"email-error\" v-for=\"(error, index) of v$.email.$errors\" :key=\"index\">\n                            <small class=\"p-error\">{{error.$message}}</small>\n                            </span>\n                        </span>\n                        <small v-else-if=\"(v$.email.$invalid && submitted) || v$.email.$pending.$response\" class=\"p-error\">{{v$.email.required.$message.replace('Value', 'Email')}}</small>\n                    </div>\n                    <div class=\"p-field\">\n                        <div class=\"p-float-label\">\n                            <Password id=\"password\" v-model=\"v$.password.$model\" :class=\"{'p-invalid':v$.password.$invalid && submitted}\" toggleMask>\n                                <template #header>\n                                    <h6>Pick a password</h6>\n                                </template>\n                                <template #footer=\"sp\">\n                                    {{sp.level}}\n                                    <Divider />\n                                    <p class=\"p-mt-2\">Suggestions</p>\n                                    <ul class=\"p-pl-2 p-ml-2 p-mt-0\" style=\"line-height: 1.5\">\n                                        <li>At least one lowercase</li>\n                                        <li>At least one uppercase</li>\n                                        <li>At least one numeric</li>\n                                        <li>Minimum 8 characters</li>\n                                    </ul>\n                                </template>\n                            </Password>\n                            <label for=\"password\" :class=\"{'p-error':v$.password.$invalid && submitted}\">Password*</label>\n                        </div>\n                        <small v-if=\"(v$.password.$invalid && submitted) || v$.password.$pending.$response\" class=\"p-error\">{{v$.password.required.$message.replace('Value', 'Password')}}</small>\n                    </div>\n                    <div class=\"p-field\">\n                        <div class=\"p-float-label\">\n                            <Calendar id=\"date\" v-model=\"date\" :showIcon=\"true\" />\n                            <label for=\"date\">Birthday</label>\n                        </div>\n                    </div>\n                    <div class=\"p-field\">\n                        <div class=\"p-float-label\">\n                            <Dropdown id=\"country\" v-model=\"country\" :options=\"countries\" optionLabel=\"name\" />\n                            <label for=\"country\">Country</label>\n                        </div>\n                    </div>\n                    <div class=\"p-field-checkbox\">\n                        <Checkbox id=\"accept\" name=\"accept\" value=\"Accept\" v-model=\"v$.accept.$model\" :class=\"{'p-invalid':v$.accept.$invalid && submitted}\" />\n                        <label for=\"accept\" :class=\"{'p-error': v$.accept.$invalid && submitted}\">I agree to the terms and conditions*</label>\n                    </div>\n                    <Button type=\"submit\" label=\"Submit\" class=\"p-mt-2\" />\n                </form>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { reactive, ref, onMounted } from 'vue';\nimport { email, required } from \"@vuelidate/validators\";\nimport { useVuelidate } from \"@vuelidate/core\";\nimport CountryService from './service/CountryService';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            countryService.value.getCountries().then(data => countries.value = data);\n        })\n\n        const state = reactive({\n            name: '',\n            email: '',\n            password: '',\n            accept: null\n        });\n\n        const rules = {\n            name: { required },\n            email: { required, email },\n            password: { required },\n            accept: { required }\n        };\n\n        const countryService = ref(new CountryService());\n        const submitted = ref(false);\n        const countries = ref();\n        const showMessage = ref(false);\n        const date = ref();\n        const country = ref();\n\n        const v$ = useVuelidate(rules, state);\n\n        const handleSubmit = (isFormValid) => {\n            submitted.value = true;\n\n            if (!isFormValid) {\n                return;\n            }\n\n            toggleDialog();\n        }\n        const toggleDialog = () => {\n            showMessage.value = !showMessage.value;\n        \n            if(!showMessage.value) {\n                resetForm();\n            }\n        }\n        const resetForm = () => {\n            state.name = '';\n            state.email = '';\n            state.password = '';\n            state.date = null;\n            state.country = null;\n            state.accept = null;\n            submitted.value = false;\n        }\n\n        return { state, v$, handleSubmit, toggleDialog, submitted, countries, showMessage, date, country }\n    }\n}\n<\\\\/script>\n\n<style lang=\"scss\" scoped>\n.form-demo {\n    .card {\n        min-width: 450px;\n\n        form {\n            margin-top: 2rem;\n        }\n\n        .p-field {\n            margin-bottom: 1.5rem;\n        }\n    }\n\n    @media screen and (max-width: 960px) {\n        .card {\n            width: 80%;\n        }\n    }\n}\n\n</style>\n`\n                }\n            }\n        }\n    },\n    countryService: null,\n    validations() {\n        return {\n            name: {\n                required\n            },\n            email: {\n                required,\n                email\n            },\n            password: {\n                required\n            },\n            accept: {\n                required\n            }\n        }\n    },\n    created() {\n        this.countryService = new CountryService();\n    },\n    mounted() {\n        this.countryService.getCountries().then(data => this.countries = data);\n    },\n    methods: {\n        handleSubmit(isFormValid) {\n            this.submitted = true;\n\n            if (!isFormValid) {\n                return;\n            }\n\n            this.toggleDialog();\n        },\n        toggleDialog() {\n            this.showMessage = !this.showMessage;\n\n            if(!this.showMessage) {\n                this.resetForm();\n            }\n        },\n        resetForm() {\n            this.name = '';\n            this.email = '';\n            this.password = '';\n            this.date = null;\n            this.country = null;\n            this.accept = null;\n            this.submitted = false;\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.form-demo {\n    .card {\n        min-width: 450px;\n\n        form {\n            margin-top: 2rem;\n        }\n\n        .p-field {\n            margin-bottom: 1.5rem;\n        }\n    }\n\n    @media screen and (max-width: 960px) {\n        .card {\n            width: 80%;\n        }\n    }\n}\n\n</style>"],"sourceRoot":""}]}