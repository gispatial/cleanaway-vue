{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/tieredmenu/TieredMenu.vue?vue&type=template&id=3383e24f","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/tieredmenu/TieredMenu.vue","mtime":1634589566237},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBtZXJnZVByb3BzIGFzIF9tZXJnZVByb3BzLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSwgVHJhbnNpdGlvbiBhcyBfVHJhbnNpdGlvbiwgd2l0aEN0eCBhcyBfd2l0aEN0eCwgVGVsZXBvcnQgYXMgX1RlbGVwb3J0IH0gZnJvbSAidnVlIjsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9UaWVyZWRNZW51U3ViID0gX3Jlc29sdmVDb21wb25lbnQoIlRpZXJlZE1lbnVTdWIiKTsKCiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9UZWxlcG9ydCwgewogICAgdG86ICRwcm9wcy5hcHBlbmRUbywKICAgIGRpc2FibGVkOiAhJHByb3BzLnBvcHVwCiAgfSwgW19jcmVhdGVWTm9kZShfVHJhbnNpdGlvbiwgewogICAgbmFtZTogInAtY29ubmVjdGVkLW92ZXJsYXkiLAogICAgb25FbnRlcjogJG9wdGlvbnMub25FbnRlciwKICAgIG9uTGVhdmU6ICRvcHRpb25zLm9uTGVhdmUsCiAgICBvbkFmdGVyTGVhdmU6ICRvcHRpb25zLm9uQWZ0ZXJMZWF2ZQogIH0sIHsKICAgIGRlZmF1bHQ6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFsoJHByb3BzLnBvcHVwID8gJGRhdGEudmlzaWJsZSA6IHRydWUpID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJkaXYiLCBfbWVyZ2VQcm9wcyh7CiAgICAgICAga2V5OiAwLAogICAgICAgIHJlZjogJG9wdGlvbnMuY29udGFpbmVyUmVmLAogICAgICAgIGNsYXNzOiAkb3B0aW9ucy5jb250YWluZXJDbGFzcwogICAgICB9LCBfY3R4LiRhdHRycywgewogICAgICAgIG9uQ2xpY2s6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgcmV0dXJuICRvcHRpb25zLm9uT3ZlcmxheUNsaWNrICYmICRvcHRpb25zLm9uT3ZlcmxheUNsaWNrLmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgICAgIH0pCiAgICAgIH0pLCBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfVGllcmVkTWVudVN1YiwgewogICAgICAgIG1vZGVsOiAkcHJvcHMubW9kZWwsCiAgICAgICAgcm9vdDogdHJ1ZSwKICAgICAgICBwb3B1cDogJHByb3BzLnBvcHVwLAogICAgICAgIG9uTGVhZkNsaWNrOiAkb3B0aW9ucy5vbkxlYWZDbGljaywKICAgICAgICB0ZW1wbGF0ZTogX2N0eC4kc2xvdHMuaXRlbSwKICAgICAgICBleGFjdDogJHByb3BzLmV4YWN0CiAgICAgIH0sIG51bGwsIDgKICAgICAgLyogUFJPUFMgKi8KICAgICAgLCBbIm1vZGVsIiwgInBvcHVwIiwgIm9uTGVhZkNsaWNrIiwgInRlbXBsYXRlIiwgImV4YWN0Il0pXSwgMTYKICAgICAgLyogRlVMTF9QUk9QUyAqLwogICAgICApKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKV07CiAgICB9KSwKICAgIF86IDEKICAgIC8qIFNUQUJMRSAqLwoKICB9LCA4CiAgLyogUFJPUFMgKi8KICAsIFsib25FbnRlciIsICJvbkxlYXZlIiwgIm9uQWZ0ZXJMZWF2ZSJdKV0sIDgKICAvKiBQUk9QUyAqLwogICwgWyJ0byIsICJkaXNhYmxlZCJdKTsKfQ=="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/tieredmenu/TieredMenu.vue"],"names":[],"mappings":";;;;uBACI,YAAA,CAMW,SANX,EAMW;AANA,IAAA,EAAE,EAAE,MAAA,CAAA,QAMJ;AANe,IAAA,QAAQ,EAAA,CAAG,MAAA,CAAA;AAM1B,GANX,E,CACI,YAAA,CAIa,WAJb,EAIa;AAJD,IAAA,IAAI,EAAC,qBAIJ;AAJ2B,IAAA,OAAK,EAAE,QAAA,CAAA,OAIlC;AAJ4C,IAAA,OAAK,EAAE,QAAA,CAAA,OAInD;AAJ6D,IAAA,YAAW,EAAE,QAAA,CAAA;AAI1E,GAJb,E;sBACI;AAAA,aAEM,C,CAFiD,MAAA,CAAA,KAAA,GAAQ,KAAA,CAAA,OAAR,GAAe,I,mBAAtE,YAAA,CAEM,KAFN,EAAA,WAAA,CAEM;cAAA;AAFA,QAAA,GAAG,EAAE,QAAA,CAAA,YAEL;AAFoB,QAAA,KAAK,EAAE,QAAA,CAAA;AAE3B,OAFN,EAAuF,IAAA,CAAA,MAAvF,EAA6F;AAAG,QAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,iBAAE,QAAA,CAAA,cAAA,IAAA,QAAA,CAAA,cAAA,OAAA,QAAA,YAAF;AAAA,SAAA;AAAR,OAA7F,CAAA,E,CACI,YAAA,CAA6H,wBAA7H,EAA6H;AAA7G,QAAA,KAAK,EAAE,MAAA,CAAA,KAAsG;AAA9F,QAAA,IAAI,EAAE,IAAwF;AAAjF,QAAA,KAAK,EAAE,MAAA,CAAA,KAA0E;AAAlE,QAAA,WAAU,EAAE,QAAA,CAAA,WAAsD;AAAxC,QAAA,QAAQ,EAAE,IAAA,CAAA,MAAA,CAAO,IAAuB;AAAhB,QAAA,KAAK,EAAE,MAAA,CAAA;AAAS,OAA7H,E,IAAA,E;;AAAA,Q,sDAAA,C,CADJ,E;;AAAA,O,qCAEM,CAFN;AAAA,K;;;;GADJ,E;;AAAA,I,sCAAA,C,CADJ,E;;AAAA,I,kBAAA,C","sourcesContent":["<template>\n    <Teleport :to=\"appendTo\" :disabled=\"!popup\">\n        <transition name=\"p-connected-overlay\" @enter=\"onEnter\" @leave=\"onLeave\" @after-leave=\"onAfterLeave\">\n            <div :ref=\"containerRef\" :class=\"containerClass\" v-if=\"popup ? visible : true\" v-bind=\"$attrs\" @click=\"onOverlayClick\">\n                <TieredMenuSub :model=\"model\" :root=\"true\" :popup=\"popup\" @leaf-click=\"onLeafClick\" :template=\"$slots.item\" :exact=\"exact\" />\n            </div>\n        </transition>\n    </Teleport>\n</template>\n\n<script>\nimport {ConnectedOverlayScrollHandler,DomHandler,ZIndexUtils} from 'primevue/utils';\nimport OverlayEventBus from 'primevue/overlayeventbus';\nimport TieredMenuSub from './TieredMenuSub.vue';\n\nexport default {\n    name: 'TieredMenu',\n    inheritAttrs: false,\n    props: {\n        popup: {\n            type: Boolean,\n            default: false\n        },\n\t\tmodel: {\n            type: Array,\n            default: null\n        },\n        appendTo: {\n            type: String,\n            default: 'body'\n        },\n        autoZIndex: {\n            type: Boolean,\n            default: true\n        },\n        baseZIndex: {\n            type: Number,\n            default: 0\n        },\n        exact: {\n            type: Boolean,\n            default: true\n        }\n    },\n    target: null,\n    container: null,\n    outsideClickListener: null,\n    scrollHandler: null,\n    resizeListener: null,\n    data() {\n        return {\n            visible: false\n        };\n    },\n    beforeUnmount() {\n        this.unbindResizeListener();\n        this.unbindOutsideClickListener();\n\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n        this.target = null;\n        if (this.container && this.autoZIndex) {\n            ZIndexUtils.clear(this.container);\n        }\n        this.container = null;\n    },\n    methods: {\n        itemClick(event) {\n            const item = event.item;\n            if (item.command) {\n                item.command(event);\n                event.originalEvent.preventDefault();\n            }\n            this.hide();\n        },\n        toggle(event) {\n            if (this.visible)\n                this.hide();\n            else\n                this.show(event);\n        },\n        show(event) {\n            this.visible = true;\n            this.target = event.currentTarget;\n        },\n        hide() {\n            this.visible = false;\n        },\n        onEnter(el) {\n            this.alignOverlay();\n            this.bindOutsideClickListener();\n            this.bindResizeListener();\n            this.bindScrollListener();\n\n            if (this.autoZIndex) {\n                ZIndexUtils.set('menu', el, this.baseZIndex + this.$primevue.config.zIndex.menu);\n            }\n        },\n        onLeave() {\n            this.unbindOutsideClickListener();\n            this.unbindResizeListener();\n            this.unbindScrollListener();\n        },\n        onAfterLeave(el) {\n            if (this.autoZIndex) {\n                ZIndexUtils.clear(el);\n            }\n        },\n        alignOverlay() {\n            DomHandler.absolutePosition(this.container, this.target);\n            this.container.style.minWidth = DomHandler.getOuterWidth(this.target) + 'px';\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    if (this.visible && this.container && !this.container.contains(event.target) && !this.isTargetClicked(event)) {\n                        this.hide();\n                    }\n                };\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindScrollListener() {\n            if (!this.scrollHandler) {\n                this.scrollHandler = new ConnectedOverlayScrollHandler(this.target, () => {\n                    if (this.visible) {\n                        this.hide();\n                    }\n                });\n            }\n\n            this.scrollHandler.bindScrollListener();\n        },\n        unbindScrollListener() {\n            if (this.scrollHandler) {\n                this.scrollHandler.unbindScrollListener();\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = () => {\n                    if (this.visible) {\n                        this.hide();\n                    }\n                };\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        isTargetClicked() {\n            return this.target && (this.target === event.target || this.target.contains(event.target));\n        },\n        onLeafClick() {\n            if (this.popup) {\n                this.hide();\n            }\n        },\n        containerRef(el) {\n            this.container = el;\n        },\n        onOverlayClick(event) {\n            OverlayEventBus.emit('overlay-click', {\n                originalEvent: event,\n                target: this.target\n            });\n        }\n    },\n    computed: {\n        containerClass() {\n            return ['p-tieredmenu p-component', {\n                'p-tieredmenu-overlay': this.popup,\n                'p-input-filled': this.$primevue.config.inputStyle === 'filled',\n                'p-ripple-disabled': this.$primevue.config.ripple === false\n            }];\n        }\n    },\n    components: {\n        'TieredMenuSub': TieredMenuSub\n    }\n}\n</script>\n\n<style>\n.p-tieredmenu-overlay {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n\n.p-tieredmenu ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n}\n\n.p-tieredmenu .p-submenu-list {\n    position: absolute;\n    min-width: 100%;\n    z-index: 1;\n    display: none;\n}\n\n.p-tieredmenu .p-menuitem-link {\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    overflow: hidden;\n    position: relative;\n}\n\n.p-tieredmenu .p-menuitem-text {\n    line-height: 1;\n}\n\n.p-tieredmenu .p-menuitem {\n    position: relative;\n}\n\n.p-tieredmenu .p-menuitem-link .p-submenu-icon {\n    margin-left: auto;\n}\n\n.p-tieredmenu .p-menuitem-active > .p-submenu-list {\n    display: block;\n    left: 100%;\n    top: 0;\n}\n</style>\n"],"sourceRoot":""}]}