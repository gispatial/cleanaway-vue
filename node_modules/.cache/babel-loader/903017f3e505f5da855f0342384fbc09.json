{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/chart/RadarChartDoc.vue?vue&type=template&id=50283936","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/chart/RadarChartDoc.vue","mtime":1634589566255},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jayB9IGZyb20gInZ1ZSI7CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF9jb21wb25lbnRfQXBwRG9jID0gX3Jlc29sdmVDb21wb25lbnQoIkFwcERvYyIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9BcHBEb2MsIHsKICAgIG5hbWU6ICJDaGFydERlbW8iLAogICAgc291cmNlczogJGRhdGEuc291cmNlcywKICAgIGRlcGVuZGVuY2llczogewogICAgICAnY2hhcnQuanMnOiAnMy4zLjInCiAgICB9LAogICAgY29tcG9uZW50OiAiQ2hhcnQiLAogICAgZ2l0aHViOiAiY2hhcnQvUmFkYXJDaGFydERlbW8udnVlIgogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJzb3VyY2VzIiwgImRlcGVuZGVuY2llcyJdKTsKfQ=="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/chart/RadarChartDoc.vue"],"names":[],"mappings":";;;;uBACA,YAAA,CAAwI,iBAAxI,EAAwI;AAAhI,IAAA,IAAI,EAAC,WAA2H;AAA9G,IAAA,OAAO,EAAE,KAAA,CAAA,OAAqG;AAA3F,IAAA,YAAY,EAAE;AAAA,kBAAA;AAAA,KAA6E;AAAtD,IAAA,SAAS,EAAC,OAA4C;AAApC,IAAA,MAAM,EAAC;AAA6B,GAAxI,E,IAAA,E;;AAAA,I,2BAAA,C","sourcesContent":["<template>\n\t<AppDoc name=\"ChartDemo\" :sources=\"sources\" :dependencies=\"{'chart.js': '3.3.2'}\" component=\"Chart\" github=\"chart/RadarChartDemo.vue\" />\n</template>\n\n<script>\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tsources: {\n\t\t\t\t'options-api': {\n\t\t\t\t\ttabName: 'Options API Source',\n\t\t\t\t\tcontent: `\n<template>\n    <div>\n        <Chart type=\"radar\" :data=\"chartData\" :options=\"chartOptions\" />\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            chartData: {\n                labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n                datasets: [\n                    {\n                        label: 'My First dataset',\n                        backgroundColor: 'rgba(179,181,198,0.2)',\n                        borderColor: 'rgba(179,181,198,1)',\n                        pointBackgroundColor: 'rgba(179,181,198,1)',\n                        pointBorderColor: '#fff',\n                        pointHoverBackgroundColor: '#fff',\n                        pointHoverBorderColor: 'rgba(179,181,198,1)',\n                        data: [65, 59, 90, 81, 56, 55, 40]\n                    },\n                    {\n                        label: 'My Second dataset',\n                        backgroundColor: 'rgba(255,99,132,0.2)',\n                        borderColor: 'rgba(255,99,132,1)',\n                        pointBackgroundColor: 'rgba(255,99,132,1)',\n                        pointBorderColor: '#fff',\n                        pointHoverBackgroundColor: '#fff',\n                        pointHoverBorderColor: 'rgba(255,99,132,1)',\n                        data: [28, 48, 40, 19, 96, 27, 100]\n                    }\n                ]\n            },\n            chartOption: {\n                plugins: {\n                    legend: {\n                        labels: {\n                            color: '#495057'\n                        }\n                    }\n                },\n                scales: {\n                    r: {\n                        pointLabels: {\n                            color: '#495057',\n                        },\n                        grid: {\n                            color: '#ebedef',\n                        },\n                        angleLines: {\n                            color: '#ebedef'\n                        }\n                    }\n                }\n            }\n        }\n    }    \n}\n<\\\\/script>\n`\n\t\t\t\t},\n\t\t\t\t'composition-api': {\n\t\t\t\t\ttabName: 'Composition API Source',\n\t\t\t\t\tcontent: `\n<template>\n    <div>\n        <Chart type=\"radar\" :data=\"chartData\" :options=\"chartOptions\" />\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n    setup() {\n        const chartData = ref({\n            labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n            datasets: [\n                {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(179,181,198,0.2)',\n                    borderColor: 'rgba(179,181,198,1)',\n                    pointBackgroundColor: 'rgba(179,181,198,1)',\n                    pointBorderColor: '#fff',\n                    pointHoverBackgroundColor: '#fff',\n                    pointHoverBorderColor: 'rgba(179,181,198,1)',\n                    data: [65, 59, 90, 81, 56, 55, 40]\n                },\n                {\n                    label: 'My Second dataset',\n                    backgroundColor: 'rgba(255,99,132,0.2)',\n                    borderColor: 'rgba(255,99,132,1)',\n                    pointBackgroundColor: 'rgba(255,99,132,1)',\n                    pointBorderColor: '#fff',\n                    pointHoverBackgroundColor: '#fff',\n                    pointHoverBorderColor: 'rgba(255,99,132,1)',\n                    data: [28, 48, 40, 19, 96, 27, 100]\n                }\n            ]\n        });\n\n        const chartOptions = ref({\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#495057'\n                    }\n                }\n            },\n            scales: {\n                r: {\n                    pointLabels: {\n                        color: '#495057',\n                    },\n                    grid: {\n                        color: '#ebedef',\n                    },\n                    angleLines: {\n                        color: '#ebedef'\n                    }\n                }\n            }\n        });\n\n\t\treturn { chartData, chartOptions }\n    }    \n}\n<\\\\/script>\n`\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n</script>"],"sourceRoot":""}]}