{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/chart/Chart.vue?vue&type=template&id=b99d8426","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/chart/Chart.vue","mtime":1634589566210},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrIH0gZnJvbSAidnVlIjsKdmFyIF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJwLWNoYXJ0Igp9OwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMSwgW19jcmVhdGVWTm9kZSgiY2FudmFzIiwgewogICAgcmVmOiAiY2FudmFzIiwKICAgIHdpZHRoOiAkcHJvcHMud2lkdGgsCiAgICBoZWlnaHQ6ICRwcm9wcy5oZWlnaHQsCiAgICBvbkNsaWNrOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLm9uQ2FudmFzQ2xpY2soJGV2ZW50KTsKICAgIH0pCiAgfSwgbnVsbCwgOAogIC8qIFBST1BTICovCiAgLCBbIndpZHRoIiwgImhlaWdodCJdKV0pOwp9"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/chart/Chart.vue"],"names":[],"mappings":";;AACS,EAAA,KAAK,EAAC;;;uBAAX,YAAA,CAEM,KAFN,EAAA,UAAA,EAEM,CADF,YAAA,CAA6F,QAA7F,EAA6F;AAArF,IAAA,GAAG,EAAC,QAAiF;AAAvE,IAAA,KAAK,EAAE,MAAA,CAAA,KAAgE;AAAxD,IAAA,MAAM,EAAE,MAAA,CAAA,MAAgD;AAAvC,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,QAAA,CAAA,aAAA,CAAc,MAAd,CAAF;AAAA,KAAA;AAAkC,GAA7F,E,IAAA,E;;AAAA,I,mBAAA,CACE,CAFN,C","sourcesContent":["<template>\n    <div class=\"p-chart\">\n        <canvas ref=\"canvas\" :width=\"width\" :height=\"height\" @click=\"onCanvasClick($event)\"></canvas>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'Chart',\n    emits: ['select'],\n    props: {\n        type: String,\n        data: null,\n        options: null,\n        width: {\n            type: Number,\n            default: 300\n        },\n        height: {\n            type: Number,\n            default: 150\n        },\n    },\n    chart: null,\n    mounted() {\n        this.initChart();\n    },\n    beforeUnmount() {\n        if (this.chart) {\n            this.chart.destroy();\n            this.chart = null;\n        }\n    },\n    watch: {\n        data() {\n            this.reinit();\n        },\n        type() {\n            this.reinit();\n        },\n        options() {\n            this.reinit();\n        }\n    },\n    methods: {\n        initChart() {\n            import('chart.js/auto').then((module) => {\n                if (this.chart) {\n                    this.chart.destroy();\n                    this.chart = null;\n                }\n\n                if (module && module.default) {\n                    this.chart = new module.default(this.$refs.canvas, {\n                        type: this.type,\n                        data: this.data,\n                        options: this.options\n                    });\n                }\n            });\n        },\n        getCanvas() {\n            return this.$canvas;\n        },\n        getBase64Image() {\n            return this.chart.toBase64Image();\n        },\n        refresh() {\n            if (this.chart) {\n                this.chart.update();\n            }\n        },\n        reinit() {\n            this.initChart();\n        },\n        onCanvasClick(event) {\n            if (this.chart) {\n                const element = this.chart.getElementsAtEventForMode(event, 'nearest', { intersect: true }, false);\n                const dataset = this.chart.getElementsAtEventForMode(event, 'dataset', { intersect: true }, false);\n\n                if (element && element[0] && dataset) {\n                    this.$emit('select', {originalEvent: event, element: element[0], dataset: dataset});\n                }\n            }\n        },\n        generateLegend() {\n            if (this.chart) {\n                return this.chart.generateLegend();\n            }\n        }\n    }\n}\n</script>\n\n<style>\n.p-chart {\n    position: relative;\n}\n</style>\n"],"sourceRoot":""}]}