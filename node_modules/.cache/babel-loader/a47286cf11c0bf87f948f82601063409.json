{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/fileupload/FileUpload.vue?vue&type=template&id=262df62f","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/fileupload/FileUpload.vue","mtime":1634589566220},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/fileupload/FileUpload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"p-fileupload p-fileupload-advanced p-component\" v-if=\"isAdvanced\">\n        <div class=\"p-fileupload-buttonbar\">\n            <span :class=\"advancedChooseButtonClass\" :style=\"style\" @click=\"choose\" @keydown.enter=\"choose\" @focus=\"onFocus\" @blur=\"onBlur\" v-ripple tabindex=\"0\">\n                <input ref=\"fileInput\" type=\"file\" @change=\"onFileSelect\" :multiple=\"multiple\" :accept=\"accept\" :disabled=\"chooseDisabled\" />\n                <span class=\"p-button-icon p-button-icon-left pi pi-fw pi-plus\"></span>\n                <span class=\"p-button-label\">{{chooseButtonLabel}}</span>\n            </span>\n            <FileUploadButton :label=\"uploadButtonLabel\" icon=\"pi pi-upload\" @click=\"upload\" :disabled=\"uploadDisabled\" v-if=\"showUploadButton\" />\n            <FileUploadButton :label=\"cancelButtonLabel\" icon=\"pi pi-times\" @click=\"clear\" :disabled=\"cancelDisabled\" v-if=\"showCancelButton\" />\n        </div>\n        <div ref=\"content\" class=\"p-fileupload-content\" @dragenter=\"onDragEnter\" @dragover=\"onDragOver\" @dragleave=\"onDragLeave\" @drop=\"onDrop\">\n            <FileUploadProgressBar :value=\"progress\" v-if=\"hasFiles\" />\n            <FileUploadMessage v-for=\"msg of messages\" severity=\"error\" :key=\"msg\" @close=\"onMessageClose\">{{msg}}</FileUploadMessage>\n            <div class=\"p-fileupload-files\" v-if=\"hasFiles\">\n                <div class=\"p-fileupload-row\" v-for=\"(file, index) of files\" :key=\"file.name + file.type + file.size\">\n                    <div>\n                        <img v-if=\"isImage(file)\" role=\"presentation\" :alt=\"file.name\" :src=\"file.objectURL\" :width=\"previewWidth\" />\n                    </div>\n                    <div class=\"p-fileupload-filename\">{{file.name}}</div>\n                    <div>{{formatSize(file.size)}}</div>\n                    <div>\n                        <FileUploadButton type=\"button\" icon=\"pi pi-times\" @click=\"remove(index)\" />\n                    </div>\n                </div>\n            </div>\n            <div class=\"p-fileupload-empty\" v-if=\"$slots.empty && !hasFiles\">\n                <slot name=\"empty\"></slot>\n            </div>\n        </div>\n    </div>\n    <div class=\"p-fileupload p-fileupload-basic p-component\" v-else-if=\"isBasic\">\n        <FileUploadMessage v-for=\"msg of messages\" severity=\"error\" :key=\"msg\" @close=\"onMessageClose\">{{msg}}</FileUploadMessage>\n        <span :class=\"basicChooseButtonClass\" :style=\"style\" @mouseup=\"onBasicUploaderClick\"  @keydown.enter=\"choose\" @focus=\"onFocus\" @blur=\"onBlur\" v-ripple tabindex=\"0\" >\n            <span :class=\"basicChooseButtonIconClass\"></span>\n            <span class=\"p-button-label\">{{basicChooseButtonLabel}}</span>\n            <input ref=\"fileInput\" type=\"file\" :accept=\"accept\" :disabled=\"disabled\" :multiple=\"multiple\" @change=\"onFileSelect\" @focus=\"onFocus\" @blur=\"onBlur\" v-if=\"!hasFiles\" />\n        </span>\n    </div>\n</template>\n\n<script>\nimport Button from 'primevue/button';\nimport ProgressBar from 'primevue/progressbar';\nimport Message from 'primevue/message';\nimport {DomHandler} from 'primevue/utils';\nimport Ripple from 'primevue/ripple';\n\nexport default {\n    name: 'FileUpload',\n    emits: ['select', 'uploader', 'before-upload', 'progress', 'upload', 'error', 'before-send', 'clear', 'remove'],\n    props: {\n        name: {\n            type: String,\n            default: null\n        },\n        url: {\n            type: String,\n            default: null\n        },\n        mode: {\n            type: String,\n            default: 'advanced'\n        },\n\t\tmultiple: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n        accept: {\n            type: String,\n            default: null\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        auto: {\n            type: Boolean,\n            default: false\n        },\n        maxFileSize: {\n            type: Number,\n            default: null\n        },\n        invalidFileSizeMessage: {\n            type: String,\n            default: '{0}: Invalid file size, file size should be smaller than {1}.'\n        },\n        invalidFileTypeMessage: {\n            type: String,\n            default: '{0}: Invalid file type, allowed file types: {1}.'\n        },\n        fileLimit: {\n            type: Number,\n            default: null\n        },\n        invalidFileLimitMessage: {\n            type: String,\n            default: 'Maximum number of files exceeded, limit is {0} at most.'\n        },\n        withCredentials: {\n            type: Boolean,\n            default: false\n        },\n        previewWidth: {\n            type: Number,\n            default: 50\n        },\n        chooseLabel: {\n            type: String,\n            default: null\n        },\n        uploadLabel: {\n            type: String,\n            default: null\n        },\n        cancelLabel: {\n            type: String,\n            default: null\n        },\n        customUpload: {\n            type: Boolean,\n            default: false\n        },\n        showUploadButton: {\n            type: Boolean,\n            default: true\n        },\n        showCancelButton: {\n            type: Boolean,\n            default: true\n        },\n        style: null,\n        class: null\n    },\n    duplicateIEEvent: false,\n    data() {\n        return {\n            uploadedFileCount: 0,\n            files: [],\n            messages: [],\n            focused: false,\n            progress: null\n        }\n    },\n    methods: {\n        onFileSelect(event) {\n            if (event.type !== 'drop' && this.isIE11() && this.duplicateIEEvent) {\n                this.duplicateIEEvent = false;\n                return;\n            }\n\n            this.messages = [];\n            this.files = this.files || [];\n            let files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\n            for (let file of files) {\n                if (!this.isFileSelected(file)) {\n                    if (this.validate(file)) {\n                        if (this.isImage(file)) {\n                            file.objectURL = window.URL.createObjectURL(file);\n                        }\n                        this.files.push(file);\n                    }\n                }\n            }\n\n            this.$emit('select', {originalEvent: event, files: this.files});\n\n            if (this.fileLimit) {\n                this.checkFileLimit();\n            }\n\n            if (this.auto && this.hasFiles && !this.isFileLimitExceeded()) {\n                this.upload();\n            }\n\n            if (event.type !== 'drop' && this.isIE11()) {\n                this.clearIEInput();\n            }\n            else {\n                this.clearInputElement();\n            }\n        },\n        choose() {\n            this.$refs.fileInput.click();\n        },\n        upload() {\n            if (this.customUpload) {\n                if (this.fileLimit) {\n                    this.uploadedFileCount += this.files.length;\n                }\n\n                this.$emit('uploader', {files: this.files});\n            }\n            else {\n                let xhr = new XMLHttpRequest();\n                let formData = new FormData();\n\n                this.$emit('before-upload', {\n                    'xhr': xhr,\n                    'formData': formData\n                });\n\n                for (let file of this.files) {\n                    formData.append(this.name, file, file.name);\n                }\n\n                xhr.upload.addEventListener('progress', (event) => {\n                    if (event.lengthComputable) {\n                        this.progress = Math.round((event.loaded * 100) / event.total);\n                    }\n\n                    this.$emit('progress', {\n                        originalEvent: event,\n                        progress: this.progress\n                    });\n                });\n\n                xhr.onreadystatechange = () => {\n                    if (xhr.readyState === 4) {\n                        this.progress = 0;\n\n                        if (xhr.status >= 200 && xhr.status < 300) {\n                            if (this.fileLimit) {\n                                this.uploadedFileCount += this.files.length;\n                            }\n\n                            this.$emit('upload', {\n                                xhr: xhr,\n                                files: this.files\n                            });\n                        }\n                        else {\n                            this.$emit('error', {\n                                xhr: xhr,\n                                files: this.files\n                            });\n                        }\n\n                        this.clear();\n                    }\n                };\n\n                xhr.open('POST', this.url, true);\n\n                this.$emit('before-send', {\n                    'xhr': xhr,\n                    'formData': formData\n                });\n\n                xhr.withCredentials = this.withCredentials;\n\n                xhr.send(formData);\n            }\n        },\n        clear() {\n            this.files = [];\n            this.messages = null;\n            this.$emit('clear');\n\n            if (this.isAdvanced) {\n                this.clearInputElement();\n            }\n        },\n        onFocus() {\n            this.focused = true;\n        },\n        onBlur() {\n            this.focused = false;\n        },\n        isFileSelected(file) {\n            if (this.files && this.files.length) {\n                for (let sFile of this.files) {\n                    if ((sFile.name + sFile.type + sFile.size) === (file.name + file.type + file.size))\n                        return true;\n                }\n            }\n\n            return false;\n        },\n        isIE11() {\n            return !!window['MSInputMethodContext'] && !!document['documentMode'];\n        },\n        validate(file) {\n            if (this.accept && !this.isFileTypeValid(file)) {\n                this.messages.push(this.invalidFileTypeMessage.replace('{0}', file.name).replace('{1}', this.accept))\n                return false;\n            }\n\n            if (this.maxFileSize && file.size > this.maxFileSize) {\n                this.messages.push(this.invalidFileSizeMessage.replace('{0}', file.name).replace('{1}', this.formatSize(this.maxFileSize)));\n                return false;\n            }\n\n            return true;\n        },\n        isFileTypeValid(file) {\n            let acceptableTypes = this.accept.split(',').map(type => type.trim());\n            for(let type of acceptableTypes) {\n                let acceptable = this.isWildcard(type) ? this.getTypeClass(file.type) === this.getTypeClass(type)\n                    : file.type == type || this.getFileExtension(file).toLowerCase() === type.toLowerCase();\n\n                if (acceptable) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n        getTypeClass(fileType) {\n            return fileType.substring(0, fileType.indexOf('/'));\n        },\n        isWildcard(fileType){\n            return fileType.indexOf('*') !== -1;\n        },\n        getFileExtension(file) {\n            return '.' + file.name.split('.').pop();\n        },\n        isImage(file) {\n            return /^image\\//.test(file.type);\n        },\n        onDragEnter(event) {\n            if (!this.disabled) {\n                event.stopPropagation();\n                event.preventDefault();\n            }\n        },\n        onDragOver(event) {\n            if (!this.disabled) {\n                DomHandler.addClass(this.$refs.content, 'p-fileupload-highlight');\n                event.stopPropagation();\n                event.preventDefault();\n            }\n        },\n        onDragLeave() {\n            if (!this.disabled) {\n                DomHandler.removeClass(this.$refs.content, 'p-fileupload-highlight');\n            }\n        },\n        onDrop(event) {\n            if (!this.disabled) {\n                DomHandler.removeClass(this.$refs.content, 'p-fileupload-highlight');\n                event.stopPropagation();\n                event.preventDefault();\n\n                const files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\n                const allowDrop = this.multiple || (files && files.length === 1);\n\n                if (allowDrop) {\n                    this.onFileSelect(event);\n                }\n            }\n        },\n        onBasicUploaderClick() {\n            if (this.hasFiles)\n                this.upload();\n            else\n                this.$refs.fileInput.click();\n        },\n        remove(index) {\n            this.clearInputElement();\n            let removedFile = this.files.splice(index, 1)[0];\n            this.files = [...this.files];\n            this.$emit('remove', {\n                file: removedFile,\n                files: this.files\n            });\n        },\n        clearInputElement() {\n            this.$refs.fileInput.value = '';\n        },\n        clearIEInput() {\n            if (this.$refs.fileInput) {\n                this.duplicateIEEvent = true; //IE11 fix to prevent onFileChange trigger again\n                this.$refs.fileInput.value = '';\n            }\n        },\n        formatSize(bytes) {\n            if (bytes === 0) {\n                return '0 B';\n            }\n            let k = 1000,\n            dm = 3,\n            sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n            i = Math.floor(Math.log(bytes) / Math.log(k));\n\n            return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n        },\n        isFileLimitExceeded() {\n            if (this.fileLimit && this.fileLimit <= this.files.length + this.uploadedFileCount && this.focused) {\n                this.focused = false;\n            }\n\n            return this.fileLimit && this.fileLimit < this.files.length + this.uploadedFileCount;\n        },\n        checkFileLimit() {\n            if (this.isFileLimitExceeded()) {\n                this.messages.push(this.invalidFileLimitMessage.replace('{0}', this.fileLimit.toString()))\n            }\n        },\n        onMessageClose() {\n            this.messages = null;\n        }\n    },\n    computed: {\n        isAdvanced() {\n            return this.mode === 'advanced';\n        },\n        isBasic() {\n            return this.mode === 'basic';\n        },\n        advancedChooseButtonClass() {\n            return ['p-button p-component p-fileupload-choose', this.class, {\n                    'p-disabled': this.disabled,\n                    'p-focus': this.focused\n                }\n            ];\n        },\n        basicChooseButtonClass() {\n            return ['p-button p-component p-fileupload-choose', this.class, {\n                'p-fileupload-choose-selected': this.hasFiles,\n                'p-disabled': this.disabled,\n                'p-focus': this.focused\n            }];\n        },\n        basicChooseButtonIconClass() {\n            return ['p-button-icon p-button-icon-left pi', {\n                'pi-plus': !this.hasFiles || this.auto,\n                'pi-upload': this.hasFiles && !this.auto\n            }];\n        },\n        basicChooseButtonLabel() {\n            return this.auto ? this.chooseButtonLabel : (this.hasFiles ? this.files.map(f => f.name).join(', ') : this.chooseButtonLabel);\n        },\n        hasFiles() {\n            return this.files && this.files.length > 0;\n        },\n        chooseDisabled() {\n            return this.disabled || (this.fileLimit && this.fileLimit <= this.files.length + this.uploadedFileCount);\n        },\n        uploadDisabled() {\n            return this.disabled || !this.hasFiles || (this.fileLimit && this.fileLimit < this.files.length);\n        },\n        cancelDisabled() {\n            return this.disabled || !this.hasFiles;\n        },\n        chooseButtonLabel() {\n            return this.chooseLabel || this.$primevue.config.locale.choose;\n        },\n        uploadButtonLabel() {\n            return this.uploadLabel || this.$primevue.config.locale.upload;\n        },\n        cancelButtonLabel() {\n            return this.cancelLabel || this.$primevue.config.locale.cancel;\n        }\n    },\n    components: {\n        'FileUploadButton': Button,\n        'FileUploadProgressBar': ProgressBar,\n        'FileUploadMessage': Message\n    },\n    directives: {\n        'ripple': Ripple\n    }\n}\n</script>\n\n<style>\n.p-fileupload-content {\n    position: relative;\n}\n\n.p-fileupload-row {\n    display: flex;\n    align-items: center;\n}\n\n.p-fileupload-row > div {\n    flex: 1 1 auto;\n    width: 25%;\n}\n\n.p-fileupload-row > div:last-child {\n    text-align: right;\n}\n\n.p-fileupload-content .p-progressbar {\n    width: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n\n.p-button.p-fileupload-choose {\n    position: relative;\n    overflow: hidden;\n}\n\n.p-button.p-fileupload-choose input[type=file] {\n    display: none;\n}\n\n.p-fileupload-choose.p-fileupload-choose-selected input[type=file] {\n    display: none;\n}\n\n.p-fileupload-filename {\n    word-break: break-all;\n}\n\n.p-fluid .p-fileupload .p-button {\n    width: auto;\n}\n</style>\n"],"sourceRoot":""}]}