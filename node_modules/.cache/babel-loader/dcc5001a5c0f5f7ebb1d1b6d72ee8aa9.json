{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/chart/PolarAreaChartDoc.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/chart/PolarAreaChartDoc.vue","mtime":1634589566255},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzb3VyY2VzOiB7CiAgICAgICAgJ29wdGlvbnMtYXBpJzogewogICAgICAgICAgdGFiTmFtZTogJ09wdGlvbnMgQVBJIFNvdXJjZScsCiAgICAgICAgICBjb250ZW50OiAiXG48dGVtcGxhdGU+XG4gICAgPGRpdj5cbiAgICAgICAgPENoYXJ0IHR5cGU9XCJwb2xhckFyZWFcIiA6ZGF0YT1cImNoYXJ0RGF0YVwiIDpvcHRpb25zPVwiY2hhcnRPcHRpb25zXCIgLz5cbiAgICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5leHBvcnQgZGVmYXVsdCB7XG4gICAgZGF0YSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGNoYXJ0RGF0YToge1xuICAgICAgICAgICAgICAgIGRhdGFzZXRzOiBbe1xuICAgICAgICAgICAgICAgICAgICBkYXRhOiBbMTEsMTYsNywzLDE0XSxcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBbXCIjNDJBNUY1XCIsXCIjNjZCQjZBXCIsXCIjRkZBNzI2XCIsXCIjMjZDNkRBXCIsXCIjN0U1N0MyXCJdLFxuICAgICAgICAgICAgICAgICAgICBsYWJlbDogJ015IGRhdGFzZXQnXG4gICAgICAgICAgICAgICAgfV0sXG4gICAgICAgICAgICAgICAgbGFiZWxzOiBbXCJSZWRcIixcIkdyZWVuXCIsXCJZZWxsb3dcIixcIkdyZXlcIixcIkJsdWVcIl1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGFydE9wdGlvbnM6IHtcbiAgICAgICAgICAgICAgICBwbHVnaW5zOiB7XG4gICAgICAgICAgICAgICAgICAgIGxlZ2VuZDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWxzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjNDk1MDU3J1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBzY2FsZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgcjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ3JpZDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnI2ViZWRlZidcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbjxcXC9zY3JpcHQ+XG4iCiAgICAgICAgfSwKICAgICAgICAnY29tcG9zaXRpb24tYXBpJzogewogICAgICAgICAgdGFiTmFtZTogJ0NvbXBvc2l0aW9uIEFQSSBTb3VyY2UnLAogICAgICAgICAgY29udGVudDogIlxuPHRlbXBsYXRlPlxuICAgIDxkaXY+XG4gICAgICAgIDxDaGFydCB0eXBlPVwicG9sYXJBcmVhXCIgOmRhdGE9XCJjaGFydERhdGFcIiA6b3B0aW9ucz1cImNoYXJ0T3B0aW9uc1wiIC8+XG4gICAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IHsgcmVmIH0gZnJvbSAndnVlJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICAgIHNldHVwKCkge1xuICAgICAgICBjb25zdCBjaGFydERhdGEgPSByZWYoe1xuICAgICAgICAgICAgZGF0YXNldHM6IFt7XG4gICAgICAgICAgICAgICAgZGF0YTogWzExLDE2LDcsMywxNF0sXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBbXCIjNDJBNUY1XCIsXCIjNjZCQjZBXCIsXCIjRkZBNzI2XCIsXCIjMjZDNkRBXCIsXCIjN0U1N0MyXCJdLFxuICAgICAgICAgICAgICAgIGxhYmVsOiAnTXkgZGF0YXNldCdcbiAgICAgICAgICAgIH1dLFxuICAgICAgICAgICAgbGFiZWxzOiBbXCJSZWRcIixcIkdyZWVuXCIsXCJZZWxsb3dcIixcIkdyZXlcIixcIkJsdWVcIl1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29uc3QgY2hhcnRPcHRpb25zID0gcmVmKFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHBsdWdpbnM6IHtcbiAgICAgICAgICAgICAgICAgICAgbGVnZW5kOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsYWJlbHM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJyM0OTUwNTcnXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHNjYWxlczoge1xuICAgICAgICAgICAgICAgICAgICByOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBncmlkOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjZWJlZGVmJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuXG5cdFx0cmV0dXJuIHsgY2hhcnREYXRhLCBjaGFydE9wdGlvbnMgfVxuICAgIH1cbn1cbjxcXC9zY3JpcHQ+XG4iCiAgICAgICAgfQogICAgICB9CiAgICB9OwogIH0KfTs="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/chart/PolarAreaChartDoc.vue"],"names":[],"mappings":"AAKA,eAAe;AACd,EAAA,IADc,kBACP;AACN,WAAO;AACN,MAAA,OAAO,EAAE;AACR,uBAAe;AACd,UAAA,OAAO,EAAE,oBADK;AAEd,UAAA,OAAO;AAFO,SADP;AA4CR,2BAAmB;AAClB,UAAA,OAAO,EAAE,wBADS;AAElB,UAAA,OAAO;AAFW;AA5CX;AADH,KAAP;AA+FD;AAjGc,CAAf","sourcesContent":["<template>\n\t<AppDoc name=\"ChartDemo\" :sources=\"sources\" :dependencies=\"{'chart.js': '3.3.2'}\" component=\"Chart\" github=\"chart/PolarAreaChartDemo.vue\" />\n</template>\n\n<script>\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tsources: {\n\t\t\t\t'options-api': {\n\t\t\t\t\ttabName: 'Options API Source',\n\t\t\t\t\tcontent: `\n<template>\n    <div>\n        <Chart type=\"polarArea\" :data=\"chartData\" :options=\"chartOptions\" />\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            chartData: {\n                datasets: [{\n                    data: [11,16,7,3,14],\n                    backgroundColor: [\"#42A5F5\",\"#66BB6A\",\"#FFA726\",\"#26C6DA\",\"#7E57C2\"],\n                    label: 'My dataset'\n                }],\n                labels: [\"Red\",\"Green\",\"Yellow\",\"Grey\",\"Blue\"]\n            },\n            chartOptions: {\n                plugins: {\n                    legend: {\n                        labels: {\n                            color: '#495057'\n                        }\n                    }\n                },\n                scales: {\n                    r: {\n                        grid: {\n                            color: '#ebedef'\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n<\\\\/script>\n`\n\t\t\t\t},\n\t\t\t\t'composition-api': {\n\t\t\t\t\ttabName: 'Composition API Source',\n\t\t\t\t\tcontent: `\n<template>\n    <div>\n        <Chart type=\"polarArea\" :data=\"chartData\" :options=\"chartOptions\" />\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n    setup() {\n        const chartData = ref({\n            datasets: [{\n                data: [11,16,7,3,14],\n                backgroundColor: [\"#42A5F5\",\"#66BB6A\",\"#FFA726\",\"#26C6DA\",\"#7E57C2\"],\n                label: 'My dataset'\n            }],\n            labels: [\"Red\",\"Green\",\"Yellow\",\"Grey\",\"Blue\"]\n        });\n\n        const chartOptions = ref(\n            {\n                plugins: {\n                    legend: {\n                        labels: {\n                            color: '#495057'\n                        }\n                    }\n                },\n                scales: {\n                    r: {\n                        grid: {\n                            color: '#ebedef'\n                        }\n                    }\n                }\n            }\n        );\n\n\t\treturn { chartData, chartOptions }\n    }\n}\n<\\\\/script>\n`\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n</script>"],"sourceRoot":""}]}