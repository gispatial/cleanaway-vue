{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/filterservice/FilterServiceDemo.vue?vue&type=template&id=74639804","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/filterservice/FilterServiceDemo.vue","mtime":1634589566266},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCB7IGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVGV4dFZOb2RlIGFzIF9jcmVhdGVUZXh0Vk5vZGUsIHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCB3aXRoQ3R4IGFzIF93aXRoQ3R4LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrIH0gZnJvbSAidnVlIjsKaW1wb3J0IF9pbXBvcnRzXzAgZnJvbSAnLi4vLi4vYXNzZXRzL2ltYWdlcy9mbGFnX3BsYWNlaG9sZGVyLnBuZyc7CnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAiY29udGVudC1zZWN0aW9uIGludHJvZHVjdGlvbiIKfTsKCnZhciBfaG9pc3RlZF8yID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiZGl2IiwgewogIGNsYXNzOiAiZmVhdHVyZS1pbnRybyIKfSwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImgxIiwgbnVsbCwgIkZpbHRlclNlcnZpY2UiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgicCIsIG51bGwsICJGaWx0ZXJTZXJ2aWNlIGlzIGEgaGVscGVyIHV0aWxpdHkgdG8gZmlsdGVyIGNvbGxlY3Rpb25zIGFnYWluc3QgY29uc3RyYWludHMuIildLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMyA9IHsKICBjbGFzczogImNvbnRlbnQtc2VjdGlvbiBpbXBsZW1lbnRhdGlvbiIKfTsKdmFyIF9ob2lzdGVkXzQgPSB7CiAgY2xhc3M6ICJjYXJkIgp9OwoKdmFyIF9ob2lzdGVkXzUgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJoNSIsIG51bGwsICJUYWJsZSBJbnRlZ3JhdGlvbiIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF82ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgicCIsIG51bGwsICJBIGN1c3RvbSBlcXVhbHMgZmlsdGVyIHRoYXQgY2hlY2tzIGZvciBleGFjdCBjYXNlIHNlbnNpdGl2ZSB2YWx1ZSBpcyByZWdpc3RlcmVkIGFuZCBkZWZpbmVkIGFzIGEgbWF0Y2ggbW9kZSBvZiBhIGNvbHVtbiBmaWx0ZXIuIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzcgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiIE5vIGN1c3RvbWVycyBmb3VuZC4gIik7Cgp2YXIgX2hvaXN0ZWRfOCA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCIgTG9hZGluZyBjdXN0b21lcnMgZGF0YS4gUGxlYXNlIHdhaXQuICIpOwoKdmFyIF9ob2lzdGVkXzkgPSB7CiAgY2xhc3M6ICJpbWFnZS10ZXh0Igp9OwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHZhciBfY29tcG9uZW50X0FwcERlbW9BY3Rpb25zID0gX3Jlc29sdmVDb21wb25lbnQoIkFwcERlbW9BY3Rpb25zIik7CgogIHZhciBfY29tcG9uZW50X0lucHV0VGV4dCA9IF9yZXNvbHZlQ29tcG9uZW50KCJJbnB1dFRleHQiKTsKCiAgdmFyIF9jb21wb25lbnRfQ29sdW1uID0gX3Jlc29sdmVDb21wb25lbnQoIkNvbHVtbiIpOwoKICB2YXIgX2NvbXBvbmVudF9EYXRhVGFibGUgPSBfcmVzb2x2ZUNvbXBvbmVudCgiRGF0YVRhYmxlIik7CgogIHZhciBfY29tcG9uZW50X0ZpbHRlclNlcnZpY2VEb2MgPSBfcmVzb2x2ZUNvbXBvbmVudCgiRmlsdGVyU2VydmljZURvYyIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImRpdiIsIG51bGwsIFtfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzEsIFtfaG9pc3RlZF8yLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9BcHBEZW1vQWN0aW9ucyldKSwgX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF8zLCBbX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF80LCBbX2hvaXN0ZWRfNSwgX2hvaXN0ZWRfNiwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfRGF0YVRhYmxlLCB7CiAgICB2YWx1ZTogJGRhdGEuY3VzdG9tZXJzLAogICAgcGFnaW5hdG9yOiB0cnVlLAogICAgcm93czogMTAsCiAgICByZXNwb25zaXZlTGF5b3V0OiAic2Nyb2xsIiwKICAgIGRhdGFLZXk6ICJpZCIsCiAgICBmaWx0ZXJzOiAkZGF0YS5maWx0ZXJzLAogICAgIm9uVXBkYXRlOmZpbHRlcnMiOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRkYXRhLmZpbHRlcnMgPSAkZXZlbnQ7CiAgICB9KSwKICAgIGZpbHRlckRpc3BsYXk6ICJyb3ciLAogICAgbG9hZGluZzogJGRhdGEubG9hZGluZwogIH0sIHsKICAgIGVtcHR5OiBfd2l0aEN0eChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBbX2hvaXN0ZWRfN107CiAgICB9KSwKICAgIGxvYWRpbmc6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFtfaG9pc3RlZF84XTsKICAgIH0pLAogICAgZGVmYXVsdDogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gW19jcmVhdGVWTm9kZShfY29tcG9uZW50X0NvbHVtbiwgewogICAgICAgIGZpZWxkOiAibmFtZSIsCiAgICAgICAgaGVhZGVyOiAiTmFtZSIsCiAgICAgICAgZmlsdGVyTWF0Y2hNb2RlT3B0aW9uczogJGRhdGEubWF0Y2hNb2RlT3B0aW9ucwogICAgICB9LCB7CiAgICAgICAgYm9keTogX3dpdGhDdHgoZnVuY3Rpb24gKF9yZWYpIHsKICAgICAgICAgIHZhciBkYXRhID0gX3JlZi5kYXRhOwogICAgICAgICAgcmV0dXJuIFtfY3JlYXRlVGV4dFZOb2RlKF90b0Rpc3BsYXlTdHJpbmcoZGF0YS5uYW1lKSwgMQogICAgICAgICAgLyogVEVYVCAqLwogICAgICAgICAgKV07CiAgICAgICAgfSksCiAgICAgICAgZmlsdGVyOiBfd2l0aEN0eChmdW5jdGlvbiAoX3JlZjIpIHsKICAgICAgICAgIHZhciBmaWx0ZXJNb2RlbCA9IF9yZWYyLmZpbHRlck1vZGVsLAogICAgICAgICAgICAgIGZpbHRlckNhbGxiYWNrID0gX3JlZjIuZmlsdGVyQ2FsbGJhY2s7CiAgICAgICAgICByZXR1cm4gW19jcmVhdGVWTm9kZShfY29tcG9uZW50X0lucHV0VGV4dCwgewogICAgICAgICAgICB0eXBlOiAidGV4dCIsCiAgICAgICAgICAgIG1vZGVsVmFsdWU6IGZpbHRlck1vZGVsLnZhbHVlLAogICAgICAgICAgICAib25VcGRhdGU6bW9kZWxWYWx1ZSI6IGZ1bmN0aW9uIG9uVXBkYXRlTW9kZWxWYWx1ZSgkZXZlbnQpIHsKICAgICAgICAgICAgICByZXR1cm4gZmlsdGVyTW9kZWwudmFsdWUgPSAkZXZlbnQ7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIG9uSW5wdXQ6IGZ1bmN0aW9uIG9uSW5wdXQoJGV2ZW50KSB7CiAgICAgICAgICAgICAgcmV0dXJuIGZpbHRlckNhbGxiYWNrKCk7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGNsYXNzOiAicC1jb2x1bW4tZmlsdGVyIiwKICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICJTZWFyY2ggYnkgbmFtZSAtICIuY29uY2F0KGZpbHRlck1vZGVsLm1hdGNoTW9kZSkKICAgICAgICAgIH0sIG51bGwsIDgKICAgICAgICAgIC8qIFBST1BTICovCiAgICAgICAgICAsIFsibW9kZWxWYWx1ZSIsICJvblVwZGF0ZTptb2RlbFZhbHVlIiwgIm9uSW5wdXQiLCAicGxhY2Vob2xkZXIiXSldOwogICAgICAgIH0pLAogICAgICAgIF86IDEKICAgICAgICAvKiBTVEFCTEUgKi8KCiAgICAgIH0sIDgKICAgICAgLyogUFJPUFMgKi8KICAgICAgLCBbImZpbHRlck1hdGNoTW9kZU9wdGlvbnMiXSksIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X0NvbHVtbiwgewogICAgICAgIGhlYWRlcjogIkNvdW50cnkiLAogICAgICAgIGZpbHRlckZpZWxkOiAiY291bnRyeS5uYW1lIiwKICAgICAgICBmaWx0ZXJNYXRjaE1vZGVPcHRpb25zOiAkZGF0YS5tYXRjaE1vZGVPcHRpb25zCiAgICAgIH0sIHsKICAgICAgICBib2R5OiBfd2l0aEN0eChmdW5jdGlvbiAoX3JlZjMpIHsKICAgICAgICAgIHZhciBkYXRhID0gX3JlZjMuZGF0YTsKICAgICAgICAgIHJldHVybiBbX2NyZWF0ZVZOb2RlKCJpbWciLCB7CiAgICAgICAgICAgIHNyYzogX2ltcG9ydHNfMCwKICAgICAgICAgICAgY2xhc3M6ICdmbGFnIGZsYWctJyArIGRhdGEuY291bnRyeS5jb2RlLAogICAgICAgICAgICB3aWR0aDogIjMwIgogICAgICAgICAgfSwgbnVsbCwgMgogICAgICAgICAgLyogQ0xBU1MgKi8KICAgICAgICAgICksIF9jcmVhdGVWTm9kZSgic3BhbiIsIF9ob2lzdGVkXzksIF90b0Rpc3BsYXlTdHJpbmcoZGF0YS5jb3VudHJ5Lm5hbWUpLCAxCiAgICAgICAgICAvKiBURVhUICovCiAgICAgICAgICApXTsKICAgICAgICB9KSwKICAgICAgICBmaWx0ZXI6IF93aXRoQ3R4KGZ1bmN0aW9uIChfcmVmNCkgewogICAgICAgICAgdmFyIGZpbHRlck1vZGVsID0gX3JlZjQuZmlsdGVyTW9kZWwsCiAgICAgICAgICAgICAgZmlsdGVyQ2FsbGJhY2sgPSBfcmVmNC5maWx0ZXJDYWxsYmFjazsKICAgICAgICAgIHJldHVybiBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfSW5wdXRUZXh0LCB7CiAgICAgICAgICAgIHR5cGU6ICJ0ZXh0IiwKICAgICAgICAgICAgbW9kZWxWYWx1ZTogZmlsdGVyTW9kZWwudmFsdWUsCiAgICAgICAgICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogZnVuY3Rpb24gb25VcGRhdGVNb2RlbFZhbHVlKCRldmVudCkgewogICAgICAgICAgICAgIHJldHVybiBmaWx0ZXJNb2RlbC52YWx1ZSA9ICRldmVudDsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgb25JbnB1dDogZnVuY3Rpb24gb25JbnB1dCgkZXZlbnQpIHsKICAgICAgICAgICAgICByZXR1cm4gZmlsdGVyQ2FsbGJhY2soKTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgY2xhc3M6ICJwLWNvbHVtbi1maWx0ZXIiLAogICAgICAgICAgICBwbGFjZWhvbGRlcjogIlNlYXJjaCBieSBjb3VudHJ5IC0gIi5jb25jYXQoZmlsdGVyTW9kZWwubWF0Y2hNb2RlKQogICAgICAgICAgfSwgbnVsbCwgOAogICAgICAgICAgLyogUFJPUFMgKi8KICAgICAgICAgICwgWyJtb2RlbFZhbHVlIiwgIm9uVXBkYXRlOm1vZGVsVmFsdWUiLCAib25JbnB1dCIsICJwbGFjZWhvbGRlciJdKV07CiAgICAgICAgfSksCiAgICAgICAgXzogMQogICAgICAgIC8qIFNUQUJMRSAqLwoKICAgICAgfSwgOAogICAgICAvKiBQUk9QUyAqLwogICAgICAsIFsiZmlsdGVyTWF0Y2hNb2RlT3B0aW9ucyJdKV07CiAgICB9KSwKICAgIF86IDEKICAgIC8qIFNUQUJMRSAqLwoKICB9LCA4CiAgLyogUFJPUFMgKi8KICAsIFsidmFsdWUiLCAiZmlsdGVycyIsICJsb2FkaW5nIl0pXSldKSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfRmlsdGVyU2VydmljZURvYyldKTsKfQ=="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/filterservice/FilterServiceDemo.vue"],"names":[],"mappings":";;OAiCiC,U,MAA8C,0C;;AA/BlE,EAAA,KAAK,EAAC;;;8BACP,YAAA,CAGM,KAHN,EAGM;AAHD,EAAA,KAAK,EAAC;AAGL,CAHN,EAA0B,C,aACtB,YAAA,CAAsB,IAAtB,EAAsB,IAAtB,EAAI,eAAJ,CADsB,E,aAEtB,YAAA,CAAmF,GAAnF,EAAmF,IAAnF,EAAG,8EAAH,CAFsB,CAA1B,E;;AAAA,C;;;AAOC,EAAA,KAAK,EAAC;;;AACF,EAAA,KAAK,EAAC;;;8BACP,YAAA,CAA0B,IAA1B,EAA0B,IAA1B,EAAI,mBAAJ,EAAqB,CAAA;AAAA;AAArB,C;;8BACA,YAAA,CAAsI,GAAtI,EAAsI,IAAtI,EAAG,iIAAH,EAAkI,CAAA;AAAA;AAAlI,C;;+CAIqB,uB;;+CAGE,wC;;;AAcL,EAAA,KAAK,EAAC;;;;;;;;;;;;;uBAjCpC,YAAA,CA4CM,KA5CN,EA4CM,IA5CN,EA4CM,CA3CF,YAAA,CAMM,KANN,EAAA,UAAA,EAMM,CALF,UAKE,EADF,YAAA,CAAkB,yBAAlB,CACE,CANN,CA2CE,EAnCF,YAAA,CAgCM,KAhCN,EAAA,UAAA,EAgCM,CA/BF,YAAA,CA8BM,KA9BN,EAAA,UAAA,EA8BM,CA7BF,UA6BE,EA5BF,UA4BE,EA1BF,YAAA,CAyBY,oBAzBZ,EAyBY;AAzBA,IAAA,KAAK,EAAE,KAAA,CAAA,SAyBP;AAzBmB,IAAA,SAAS,EAAE,IAyB9B;AAzBqC,IAAA,IAAI,EAAE,EAyB3C;AAzB+C,IAAA,gBAAgB,EAAC,QAyBhE;AAxBR,IAAA,OAAO,EAAC,IAwBA;AAxBa,IAAA,OAAO,EAAE,KAAA,CAAA,OAwBtB;;aAxBsB,KAAA,CAAA,OAAA,GAAO,M;MAwB7B;AAxB+B,IAAA,aAAa,EAAC,KAwB7C;AAxBoD,IAAA,OAAO,EAAE,KAAA,CAAA;AAwB7D,GAzBZ,E;AAEe,IAAA,KAAK,EAAA,QAAA,CAAC;AAAA,aAEjB,C,UAAA,CAFiB;AAAA,KAAD,C;AAGL,IAAA,OAAO,EAAA,QAAA,CAAC;AAAA,aAEnB,C,UAAA,CAFmB;AAAA,KAAD,C;sBAGlB;AAAA,aAOS,CAPT,YAAA,CAOS,iBAPT,EAOS;AAPD,QAAA,KAAK,EAAC,MAOL;AAPY,QAAA,MAAM,EAAC,MAOnB;AAP2B,QAAA,sBAAsB,EAAE,KAAA,CAAA;AAOnD,OAPT,E;AACe,QAAA,IAAI,EAAA,QAAA,CACX;AAAA,cADc,IACd,QADc,IACd;AAAA,iBADkB,C,kCAChB,IAAI,CAAC,I,GAAI;AAAA;WADO,CAClB;AAAA,SADW,C;AAGJ,QAAA,MAAM,EAAA,QAAA,CACb;AAAA,cADgB,WAChB,SADgB,WAChB;AAAA,cAD4B,cAC5B,SAD4B,cAC5B;AAAA,iBAD0C,CAC1C,YAAA,CAAiK,oBAAjK,EAAiK;AAAtJ,YAAA,IAAI,EAAC,MAAiJ;wBAAjI,WAAW,CAAC,KAAqH;;qBAAjI,WAAW,CAAC,KAAZ,GAAiB,M;aAAgH;AAA7G,YAAA,OAAK,EAAA,iBAAA,MAAA;AAAA,qBAAE,cAAc,EAAhB;AAAA,aAAwG;AAApF,YAAA,KAAK,EAAC,iBAA8E;AAA3D,YAAA,WAAW,6BAAsB,WAAW,CAAC,SAAlC;AAAgD,WAAjK,E,IAAA,E;;AAAA,Y,+DAAA,CAD0C,CAC1C;AAAA,SADa,C;;;;OAJrB,E;;AAAA,Q,0BAAA,CAOS,EACT,YAAA,CAQS,iBART,EAQS;AARD,QAAA,MAAM,EAAC,SAQN;AARgB,QAAA,WAAW,EAAC,cAQ5B;AAR4C,QAAA,sBAAsB,EAAE,KAAA,CAAA;AAQpE,OART,E;AACe,QAAA,IAAI,EAAA,QAAA,CACX;AAAA,cADc,IACd,SADc,IACd;AAAA,iBADkB,CAClB,YAAA,CAA2G,KAA3G,EAA2G;AAAtG,YAAA,GAA8C,EAA9C,UAAsG;AAAtD,YAAA,KAAK,EAAA,eAAiB,IAAI,CAAC,OAAL,CAAa,IAAmB;AAAb,YAAA,KAAK,EAAC;AAAO,WAA3G,E,IAAA,E;;AAAA,WADkB,EAElB,YAAA,CAAqD,MAArD,EAAA,UAAA,EAAqD,gBAAA,CAA1B,IAAI,CAAC,OAAL,CAAa,IAAa,CAArD,EAA4C;AAAA;AAA5C,WAFkB,CAClB;AAAA,SADW,C;AAIJ,QAAA,MAAM,EAAA,QAAA,CACb;AAAA,cADgB,WAChB,SADgB,WAChB;AAAA,cAD4B,cAC5B,SAD4B,cAC5B;AAAA,iBAD0C,CAC1C,YAAA,CAAqK,oBAArK,EAAqK;AAA1J,YAAA,IAAI,EAAC,MAAqJ;wBAArI,WAAW,CAAC,KAAyH;;qBAArI,WAAW,CAAC,KAAZ,GAAiB,M;aAAoH;AAAjH,YAAA,OAAK,EAAA,iBAAA,MAAA;AAAA,qBAAE,cAAc,EAAhB;AAAA,aAA4G;AAAxF,YAAA,KAAK,EAAC,iBAAkF;AAA/D,YAAA,WAAW,gCAAyB,WAAW,CAAC,SAArC;AAAoD,WAArK,E,IAAA,E;;AAAA,Y,+DAAA,CAD0C,CAC1C;AAAA,SADa,C;;;;OALrB,E;;AAAA,Q,0BAAA,CADS,CAPT;AAAA,K;;;;GARJ,E;;AAAA,I,+BAAA,CA0BE,CA9BN,CA+BE,CAhCN,CAmCE,EADF,YAAA,CAAoB,2BAApB,CACE,CA5CN,C","sourcesContent":["<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>FilterService</h1>\n                <p>FilterService is a helper utility to filter collections against constraints.</p>\n            </div>\n            <AppDemoActions />\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card\">\n                <h5>Table Integration</h5>\n                <p>A custom equals filter that checks for exact case sensitive value is registered and defined as a match mode of a column filter.</p>\n\n                <DataTable :value=\"customers\" :paginator=\"true\" :rows=\"10\" responsiveLayout=\"scroll\"\n                    dataKey=\"id\" v-model:filters=\"filters\" filterDisplay=\"row\" :loading=\"loading\">\n                    <template #empty>\n                        No customers found.\n                    </template>\n                    <template #loading>\n                        Loading customers data. Please wait.\n                    </template>\n                    <Column field=\"name\" header=\"Name\" :filterMatchModeOptions=\"matchModeOptions\">\n                        <template #body=\"{data}\">\n                            {{data.name}}\n                        </template>\n                        <template #filter=\"{filterModel,filterCallback}\">\n                            <InputText type=\"text\" v-model=\"filterModel.value\" @input=\"filterCallback()\" class=\"p-column-filter\" :placeholder=\"`Search by name - ${filterModel.matchMode}`\"/>\n                        </template>\n                    </Column>\n                    <Column header=\"Country\" filterField=\"country.name\" :filterMatchModeOptions=\"matchModeOptions\">\n                        <template #body=\"{data}\">\n                            <img src=\"../../assets/images/flag_placeholder.png\" :class=\"'flag flag-' + data.country.code\" width=\"30\" />\n                            <span class=\"image-text\">{{data.country.name}}</span>\n                        </template>\n                        <template #filter=\"{filterModel,filterCallback}\">\n                            <InputText type=\"text\" v-model=\"filterModel.value\" @input=\"filterCallback()\" class=\"p-column-filter\" :placeholder=\"`Search by country - ${filterModel.matchMode}`\" />\n                        </template>\n                    </Column>\n                </DataTable>\n            </div>\n        </div>\n\n        <FilterServiceDoc />\n    </div>\n</template>\n\n<script>\nimport FilterServiceDoc from './FilterServiceDoc';\nimport {FilterMatchMode,FilterService} from 'primevue/api';\nimport CustomerService from '../../service/CustomerService';\n\nconst YOUR_FILTER = 'YOUR FILTER';\n\nexport default {\n    data() {\n        return {\n            customers: null,\n            filters: {\n                'name': {value: null, matchMode: YOUR_FILTER},\n                'country.name': {value: null, matchMode: FilterMatchMode.STARTS_WITH}\n            },\n            matchModeOptions: [\n                {label: 'Your Equals', value: YOUR_FILTER},\n                {label: 'Starts With', value: FilterMatchMode.STARTS_WITH}\n            ],\n            loading: true\n        }\n    },\n    created() {\n        this.customerService = new CustomerService();\n    },\n    mounted() {\n        this.customerService.getCustomersLarge().then(data => {\n            this.customers = data; \n            this.loading = false;\n        });\n\n        FilterService.register(YOUR_FILTER, (value, filter) => {\n            if (filter === undefined || filter === null || filter.trim() === '') {\n                return true;\n            }\n    \n            if (value === undefined || value === null) {\n                return false;\n            }\n            \n            return value.toString() === filter.toString();\n        });\n    },\n    components: {\n        'FilterServiceDoc': FilterServiceDoc\n    }\n}\n</script>"],"sourceRoot":""}]}