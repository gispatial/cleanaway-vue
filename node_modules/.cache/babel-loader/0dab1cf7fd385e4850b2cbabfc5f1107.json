{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/confirmpopup/ConfirmPopup.vue?vue&type=template&id=d8acc462","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/confirmpopup/ConfirmPopup.vue","mtime":1634589566213},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgbWVyZ2VQcm9wcyBhcyBfbWVyZ2VQcm9wcywgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUsIFRyYW5zaXRpb24gYXMgX1RyYW5zaXRpb24sIHdpdGhDdHggYXMgX3dpdGhDdHgsIFRlbGVwb3J0IGFzIF9UZWxlcG9ydCB9IGZyb20gInZ1ZSI7CnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAicC1jb25maXJtLXBvcHVwLWNvbnRlbnQiCn07CnZhciBfaG9pc3RlZF8yID0gewogIGNsYXNzOiAicC1jb25maXJtLXBvcHVwLW1lc3NhZ2UiCn07CnZhciBfaG9pc3RlZF8zID0gewogIGNsYXNzOiAicC1jb25maXJtLXBvcHVwLWZvb3RlciIKfTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9DUEJ1dHRvbiA9IF9yZXNvbHZlQ29tcG9uZW50KCJDUEJ1dHRvbiIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX1RlbGVwb3J0LCB7CiAgICB0bzogImJvZHkiCiAgfSwgW19jcmVhdGVWTm9kZShfVHJhbnNpdGlvbiwgewogICAgbmFtZTogInAtY29uZmlybS1wb3B1cCIsCiAgICBvbkVudGVyOiAkb3B0aW9ucy5vbkVudGVyLAogICAgb25MZWF2ZTogJG9wdGlvbnMub25MZWF2ZSwKICAgIG9uQWZ0ZXJMZWF2ZTogJG9wdGlvbnMub25BZnRlckxlYXZlCiAgfSwgewogICAgZGVmYXVsdDogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gWyRkYXRhLnZpc2libGUgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImRpdiIsIF9tZXJnZVByb3BzKHsKICAgICAgICBrZXk6IDAsCiAgICAgICAgY2xhc3M6ICRvcHRpb25zLmNvbnRhaW5lckNsYXNzLAogICAgICAgIHJlZjogJG9wdGlvbnMuY29udGFpbmVyUmVmCiAgICAgIH0sIF9jdHguJGF0dHJzLCB7CiAgICAgICAgb25DbGljazogX2NhY2hlWzNdIHx8IChfY2FjaGVbM10gPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICByZXR1cm4gJG9wdGlvbnMub25PdmVybGF5Q2xpY2sgJiYgJG9wdGlvbnMub25PdmVybGF5Q2xpY2suYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICAgICAgfSkKICAgICAgfSksIFtfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzEsIFtfY3JlYXRlVk5vZGUoImkiLCB7CiAgICAgICAgY2xhc3M6ICRvcHRpb25zLmljb25DbGFzcwogICAgICB9LCBudWxsLCAyCiAgICAgIC8qIENMQVNTICovCiAgICAgICksIF9jcmVhdGVWTm9kZSgic3BhbiIsIF9ob2lzdGVkXzIsIF90b0Rpc3BsYXlTdHJpbmcoJGRhdGEuY29uZmlybWF0aW9uLm1lc3NhZ2UpLCAxCiAgICAgIC8qIFRFWFQgKi8KICAgICAgKV0pLCBfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzMsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9DUEJ1dHRvbiwgewogICAgICAgIGxhYmVsOiAkb3B0aW9ucy5yZWplY3RMYWJlbCwKICAgICAgICBpY29uOiAkb3B0aW9ucy5yZWplY3RJY29uLAogICAgICAgIGNsYXNzOiAkb3B0aW9ucy5yZWplY3RDbGFzcywKICAgICAgICBvbkNsaWNrOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICAgIHJldHVybiAkb3B0aW9ucy5yZWplY3QoKTsKICAgICAgICB9KQogICAgICB9LCBudWxsLCA4CiAgICAgIC8qIFBST1BTICovCiAgICAgICwgWyJsYWJlbCIsICJpY29uIiwgImNsYXNzIl0pLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9DUEJ1dHRvbiwgewogICAgICAgIGxhYmVsOiAkb3B0aW9ucy5hY2NlcHRMYWJlbCwKICAgICAgICBpY29uOiAkb3B0aW9ucy5hY2NlcHRJY29uLAogICAgICAgIGNsYXNzOiAkb3B0aW9ucy5hY2NlcHRDbGFzcywKICAgICAgICBvbkNsaWNrOiBfY2FjaGVbMl0gfHwgKF9jYWNoZVsyXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICAgIHJldHVybiAkb3B0aW9ucy5hY2NlcHQoKTsKICAgICAgICB9KSwKICAgICAgICBhdXRvZm9jdXM6ICIiCiAgICAgIH0sIG51bGwsIDgKICAgICAgLyogUFJPUFMgKi8KICAgICAgLCBbImxhYmVsIiwgImljb24iLCAiY2xhc3MiXSldKV0sIDE2CiAgICAgIC8qIEZVTExfUFJPUFMgKi8KICAgICAgKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSldOwogICAgfSksCiAgICBfOiAxCiAgICAvKiBTVEFCTEUgKi8KCiAgfSwgOAogIC8qIFBST1BTICovCiAgLCBbIm9uRW50ZXIiLCAib25MZWF2ZSIsICJvbkFmdGVyTGVhdmUiXSldKTsKfQ=="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/confirmpopup/ConfirmPopup.vue"],"names":[],"mappings":";;AAIqB,EAAA,KAAK,EAAC;;;AAED,EAAA,KAAK,EAAC;;;AAEX,EAAA,KAAK,EAAC;;;;;uBAPvB,YAAA,CAaW,SAbX,EAaW;AAbD,IAAA,EAAE,EAAC;AAaF,GAbX,EAAmB,CACf,YAAA,CAWa,WAXb,EAWa;AAXD,IAAA,IAAI,EAAC,iBAWJ;AAXuB,IAAA,OAAK,EAAE,QAAA,CAAA,OAW9B;AAXwC,IAAA,OAAK,EAAE,QAAA,CAAA,OAW/C;AAXyD,IAAA,YAAW,EAAE,QAAA,CAAA;AAWtE,GAXb,E;sBACI;AAAA,aASM,CAT6B,KAAA,CAAA,O,kBAAnC,YAAA,CASM,KATN,EAAA,WAAA,CASM;cAAA;AATA,QAAA,KAAK,EAAE,QAAA,CAAA,cASP;AATuC,QAAA,GAAG,EAAE,QAAA,CAAA;AAS5C,OATN,EAAwE,IAAA,CAAA,MAAxE,EAA8E;AAAG,QAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,iBAAE,QAAA,CAAA,cAAA,IAAA,QAAA,CAAA,cAAA,OAAA,QAAA,YAAF;AAAA,SAAA;AAAR,OAA9E,CAAA,E,CACI,YAAA,CAGM,KAHN,EAAA,UAAA,EAGM,CAFF,YAAA,CAAwB,GAAxB,EAAwB;AAApB,QAAA,KAAK,EAAE,QAAA,CAAA;AAAa,OAAxB,EAAoB,IAApB,EAAoB;AAAA;AAApB,OAEE,EADF,YAAA,CAAqE,MAArE,EAAA,UAAA,EAAqE,gBAAA,CAA7B,KAAA,CAAA,YAAA,CAAa,OAAgB,CAArE,EAA4D;AAAA;AAA5D,OACE,CAHN,C,EAIA,YAAA,CAGM,KAHN,EAAA,UAAA,EAGM,CAFF,YAAA,CAA0F,mBAA1F,EAA0F;AAA/E,QAAA,KAAK,EAAE,QAAA,CAAA,WAAwE;AAA1D,QAAA,IAAI,EAAE,QAAA,CAAA,UAAoD;AAAvC,QAAA,KAAK,EAAE,QAAA,CAAA,WAAgC;AAAlB,QAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,iBAAE,QAAA,CAAA,MAAA,EAAF;AAAA,SAAA;AAAa,OAA1F,E,IAAA,E;;AAAA,Q,0BAAA,CAEE,EADF,YAAA,CAAqG,mBAArG,EAAqG;AAA1F,QAAA,KAAK,EAAE,QAAA,CAAA,WAAmF;AAArE,QAAA,IAAI,EAAE,QAAA,CAAA,UAA+D;AAAlD,QAAA,KAAK,EAAE,QAAA,CAAA,WAA2C;AAA7B,QAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,iBAAE,QAAA,CAAA,MAAA,EAAF;AAAA,SAAA,CAAwB;AAAZ,QAAA,SAAS,EAAT;AAAY,OAArG,E,IAAA,E;;AAAA,Q,0BAAA,CACE,CAHN,C,CALJ,E;;AAAA,O,qCASM,CATN;AAAA,K;;;;GADJ,E;;AAAA,I,sCAAA,CADe,CAAnB,C","sourcesContent":["<template>\n    <Teleport to=\"body\">\n        <transition name=\"p-confirm-popup\" @enter=\"onEnter\" @leave=\"onLeave\" @after-leave=\"onAfterLeave\">\n            <div :class=\"containerClass\" v-if=\"visible\" :ref=\"containerRef\" v-bind=\"$attrs\" @click=\"onOverlayClick\">\n                <div class=\"p-confirm-popup-content\">\n                    <i :class=\"iconClass\" />\n                    <span class=\"p-confirm-popup-message\">{{confirmation.message}}</span>\n                </div>\n                <div class=\"p-confirm-popup-footer\">\n                    <CPButton :label=\"rejectLabel\" :icon=\"rejectIcon\" :class=\"rejectClass\" @click=\"reject()\"/>\n                    <CPButton :label=\"acceptLabel\" :icon=\"acceptIcon\" :class=\"acceptClass\" @click=\"accept()\" autofocus />\n                </div>\n            </div>\n        </transition>\n    </Teleport>\n</template>\n\n<script>\nimport ConfirmationEventBus from 'primevue/confirmationeventbus';\nimport {ConnectedOverlayScrollHandler,DomHandler,ZIndexUtils} from 'primevue/utils';\nimport OverlayEventBus from 'primevue/overlayeventbus';\nimport Button from 'primevue/button';\n\nexport default {\n    name: 'ConfirmPopup',\n    inheritAttrs: false,\n    props: {\n        group: String\n    },\n    data() {\n        return {\n            visible: false,\n            confirmation: null\n        }\n    },\n    target: null,\n    outsideClickListener: null,\n    scrollHandler: null,\n    resizeListener: null,\n    container: null,\n    confirmListener: null,\n    closeListener: null,\n    mounted() {\n        this.confirmListener = (options) => {\n            if (!options) {\n                return;\n            }\n\n            if (options.group === this.group) {\n                this.confirmation = options;\n                this.target = options.target;\n                this.visible = true;\n            }\n        };\n        this.closeListener = () => {\n            this.visible = false;\n            this.confirmation = null;\n        };\n        ConfirmationEventBus.on('confirm', this.confirmListener);\n        ConfirmationEventBus.on('close', this.closeListener);\n    },\n    beforeUnmount() {\n        ConfirmationEventBus.off('confirm', this.confirmListener);\n        ConfirmationEventBus.off('close', this.closeListener);\n\n        this.unbindOutsideClickListener();\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n        this.unbindResizeListener();\n\n        if (this.container) {\n            ZIndexUtils.clear(this.container);\n            this.container = null;\n        }\n\n        this.target = null;\n        this.confirmation = null;\n    },\n    methods: {\n         accept() {\n            if (this.confirmation.accept) {\n                this.confirmation.accept();\n            }\n\n            this.visible = false;\n        },\n        reject() {\n            if (this.confirmation.reject) {\n                this.confirmation.reject();\n            }\n\n            this.visible = false;\n        },\n        onEnter(el) {\n            this.alignOverlay();\n            this.bindOutsideClickListener();\n            this.bindScrollListener();\n            this.bindResizeListener();\n\n            ZIndexUtils.set('overlay', el, this.$primevue.config.zIndex.overlay);\n        },\n        onLeave() {\n            this.unbindOutsideClickListener();\n            this.unbindScrollListener();\n            this.unbindResizeListener();\n        },\n        onAfterLeave(el) {\n            ZIndexUtils.clear(el);\n        },\n        alignOverlay() {\n            DomHandler.absolutePosition(this.container, this.target);\n\n            const containerOffset = DomHandler.getOffset(this.container);\n            const targetOffset = DomHandler.getOffset(this.target);\n            let arrowLeft = 0;\n\n            if (containerOffset.left < targetOffset.left) {\n                arrowLeft = targetOffset.left - containerOffset.left;\n            }\n            this.container.style.setProperty('--overlayArrowLeft', `${arrowLeft}px`);\n\n            if (containerOffset.top < targetOffset.top) {\n                DomHandler.addClass(this.container, 'p-confirm-popup-flipped');\n            }\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    if (this.visible && this.container && !this.container.contains(event.target) && !this.isTargetClicked(event)) {\n                        this.visible = false;\n                    }\n                };\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindScrollListener() {\n            if (!this.scrollHandler) {\n                this.scrollHandler = new ConnectedOverlayScrollHandler(this.target, () => {\n                    if (this.visible) {\n                        this.visible = false;\n                    }\n                });\n            }\n\n            this.scrollHandler.bindScrollListener();\n        },\n        unbindScrollListener() {\n            if (this.scrollHandler) {\n                this.scrollHandler.unbindScrollListener();\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = () => {\n                    if (this.visible) {\n                        this.visible = false;\n                    }\n                };\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        isTargetClicked() {\n            return this.target && (this.target === event.target || this.target.contains(event.target));\n        },\n        containerRef(el) {\n            this.container = el;\n        },\n        onOverlayClick(event) {\n            OverlayEventBus.emit('overlay-click', {\n                originalEvent: event,\n                target: this.target\n            });\n        }\n    },\n    computed: {\n        containerClass() {\n            return ['p-confirm-popup p-component', {\n                'p-input-filled': this.$primevue.config.inputStyle === 'filled',\n                'p-ripple-disabled': this.$primevue.config.ripple === false\n            }];\n        },\n        message() {\n            return this.confirmation ? this.confirmation.message : null;\n        },\n        iconClass() {\n            return ['p-confirm-popup-icon', this.confirmation ? this.confirmation.icon : null];\n        },\n        acceptLabel() {\n            return this.confirmation ? (this.confirmation.acceptLabel || this.$primevue.config.locale.accept) : null;\n        },\n        rejectLabel() {\n            return this.confirmation ? (this.confirmation.rejectLabel || this.$primevue.config.locale.reject) : null;\n        },\n        acceptIcon() {\n            return this.confirmation ? this.confirmation.acceptIcon : null;\n        },\n        rejectIcon() {\n            return this.confirmation ? this.confirmation.rejectIcon : null;\n        },\n        acceptClass() {\n            return ['p-confirm-popup-accept p-button-sm', this.confirmation ? this.confirmation.acceptClass : null];\n        },\n        rejectClass() {\n            return ['p-confirm-popup-reject p-button-sm', this.confirmation ? (this.confirmation.rejectClass || 'p-button-text') : null];\n        }\n    },\n    components: {\n        'CPButton': Button\n    }\n}\n</script>\n\n<style>\n.p-confirm-popup {\n    position: absolute;\n    margin-top: 10px;\n    top: 0;\n    left: 0;\n}\n\n.p-confirm-popup-flipped {\n    margin-top: 0;\n    margin-bottom: 10px;\n}\n\n/* Animation */\n.p-confirm-popup-enter-from {\n    opacity: 0;\n    transform: scaleY(0.8);\n}\n\n.p-confirm-popup-leave-to {\n    opacity: 0;\n}\n\n.p-confirm-popup-enter-active {\n    transition: transform .12s cubic-bezier(0, 0, 0.2, 1), opacity .12s cubic-bezier(0, 0, 0.2, 1);\n}\n\n.p-confirm-popup-leave-active {\n    transition: opacity .1s linear;\n}\n\n.p-confirm-popup:after, .p-confirm-popup:before {\n\tbottom: 100%;\n\tleft: calc(var(--overlayArrowLeft, 0) + 1.25rem);\n\tcontent: \" \";\n\theight: 0;\n\twidth: 0;\n\tposition: absolute;\n\tpointer-events: none;\n}\n\n.p-confirm-popup:after {\n\tborder-width: 8px;\n\tmargin-left: -8px;\n}\n\n.p-confirm-popup:before {\n\tborder-width: 10px;\n\tmargin-left: -10px;\n}\n\n.p-confirm-popup-flipped:after, .p-confirm-popup-flipped:before {\n    bottom: auto;\n    top: 100%;\n}\n\n.p-confirm-popup.p-confirm-popup-flipped:after {\n    border-bottom-color: transparent;\n}\n\n.p-confirm-popup.p-confirm-popup-flipped:before {\n    border-bottom-color: transparent\n}\n\n.p-confirm-popup .p-confirm-popup-content {\n    display: flex;\n    align-items: center;\n}\n</style>\n"],"sourceRoot":""}]}