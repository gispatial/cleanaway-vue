{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/chart/PolarAreaChartDemo.vue?vue&type=template&id=fc8a8a7e","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/chart/PolarAreaChartDemo.vue","mtime":1634589566255},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCByZXNvbHZlQ29tcG9uZW50IGFzIF9yZXNvbHZlQ29tcG9uZW50LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrIH0gZnJvbSAidnVlIjsKdmFyIF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJjb250ZW50LXNlY3Rpb24gaW50cm9kdWN0aW9uIgp9OwoKdmFyIF9ob2lzdGVkXzIgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJkaXYiLCB7CiAgY2xhc3M6ICJmZWF0dXJlLWludHJvIgp9LCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiaDEiLCBudWxsLCAiUG9sYXIgQXJlYSBDaGFydCIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJwIiwgbnVsbCwgIlBvbGFyIGFyZWEgY2hhcnRzIGFyZSBzaW1pbGFyIHRvIHBpZSBjaGFydHMsIGJ1dCBlYWNoIHNlZ21lbnQgaGFzIHRoZSBzYW1lIGFuZ2xlIC0gdGhlIHJhZGl1cyBvZiB0aGUgc2VnbWVudCBkaWZmZXJzIGRlcGVuZGluZyBvbiB0aGUgdmFsdWUuIildLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMyA9IHsKICBjbGFzczogImNvbnRlbnQtc2VjdGlvbiBpbXBsZW1lbnRhdGlvbiIKfTsKdmFyIF9ob2lzdGVkXzQgPSB7CiAgY2xhc3M6ICJjYXJkIHAtZC1mbGV4IHAtamMtY2VudGVyIgp9OwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHZhciBfY29tcG9uZW50X0FwcERlbW9BY3Rpb25zID0gX3Jlc29sdmVDb21wb25lbnQoIkFwcERlbW9BY3Rpb25zIik7CgogIHZhciBfY29tcG9uZW50X0NoYXJ0ID0gX3Jlc29sdmVDb21wb25lbnQoIkNoYXJ0Iik7CgogIHZhciBfY29tcG9uZW50X1BvbGFyQXJlYUNoYXJ0RG9jID0gX3Jlc29sdmVDb21wb25lbnQoIlBvbGFyQXJlYUNoYXJ0RG9jIik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZGl2IiwgbnVsbCwgW19jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMSwgW19ob2lzdGVkXzIsIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X0FwcERlbW9BY3Rpb25zKV0pLCBfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzMsIFtfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzQsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9DaGFydCwgewogICAgdHlwZTogInBvbGFyQXJlYSIsCiAgICBkYXRhOiAkZGF0YS5jaGFydERhdGEsCiAgICBvcHRpb25zOiAkZGF0YS5jaGFydE9wdGlvbnMsCiAgICBzdHlsZTogewogICAgICAid2lkdGgiOiAiNDAlIgogICAgfQogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJkYXRhIiwgIm9wdGlvbnMiXSldKV0pLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9Qb2xhckFyZWFDaGFydERvYyldKTsKfQ=="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/chart/PolarAreaChartDemo.vue"],"names":[],"mappings":";;AAEa,EAAA,KAAK,EAAC;;;8BACP,YAAA,CAGM,KAHN,EAGM;AAHD,EAAA,KAAK,EAAC;AAGL,CAHN,EAA0B,C,aACtB,YAAA,CAAyB,IAAzB,EAAyB,IAAzB,EAAI,kBAAJ,CADsB,E,aAEtB,YAAA,CAAmJ,GAAnJ,EAAmJ,IAAnJ,EAAG,8IAAH,CAFsB,CAA1B,E;;AAAA,C;;;AAOC,EAAA,KAAK,EAAC;;;AACF,EAAA,KAAK,EAAC;;;;;;;;;uBAVnB,YAAA,CAgBM,KAhBN,EAgBM,IAhBN,EAgBM,CAfF,YAAA,CAMM,KANN,EAAA,UAAA,EAMM,CALF,UAKE,EADF,YAAA,CAAkB,yBAAlB,CACE,CANN,CAeE,EAPF,YAAA,CAIM,KAJN,EAAA,UAAA,EAIM,CAHF,YAAA,CAEM,KAFN,EAAA,UAAA,EAEM,CADF,YAAA,CAAuF,gBAAvF,EAAuF;AAAhF,IAAA,IAAI,EAAC,WAA2E;AAA9D,IAAA,IAAI,EAAE,KAAA,CAAA,SAAwD;AAA5C,IAAA,OAAO,EAAE,KAAA,CAAA,YAAmC;AAArB,IAAA,KAAkB,EAAlB;AAAA,eAAA;AAAA;AAAqB,GAAvF,E,IAAA,E;;AAAA,I,mBAAA,CACE,CAFN,CAGE,CAJN,CAOE,EADF,YAAA,CAAoB,4BAApB,CACE,CAhBN,C","sourcesContent":["<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>Polar Area Chart</h1>\n                <p>Polar area charts are similar to pie charts, but each segment has the same angle - the radius of the segment differs depending on the value.</p>\n            </div>\n            <AppDemoActions />\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card p-d-flex p-jc-center\">\n                <Chart type=\"polarArea\" :data=\"chartData\" :options=\"chartOptions\" style=\"width: 40%\" />\n            </div>\n        </div>\n\n        <PolarAreaChartDoc/>\n    </div>\n</template>\n\n<script>\nimport PolarAreaChartDoc from './PolarAreaChartDoc';\nimport EventBus from '@/AppEventBus';\n\nexport default {\n    themeChangeListener: null,\n    mounted() {\n        this.themeChangeListener = (event) => {\n            if (event.dark)\n                this.chartOptions = this.getDarkTheme();\n            else\n                this.chartOptions = this.getLightTheme();\n        }\n        EventBus.on('change-theme', this.themeChangeListener );\n    },\n    beforeUnmount() {\n        EventBus.off('change-theme', this.themeChangeListener );\n    },\n    data() {\n        return {\n            chartData: {\n                datasets: [{\n                    data: [\n                        11,\n                        16,\n                        7,\n                        3,\n                        14\n                    ],\n                    backgroundColor: [\n                        \"#42A5F5\",\n                        \"#66BB6A\",\n                        \"#FFA726\",\n                        \"#26C6DA\",\n                        \"#7E57C2\"\n                    ],\n                    label: 'My dataset'\n                }],\n                labels: [\n                    \"Red\",\n                    \"Green\",\n                    \"Yellow\",\n                    \"Grey\",\n                    \"Blue\"\n                ]\n            },\n            chartOptions: this.isDarkTheme() ? this.getDarkTheme(): this.getLightTheme()\n        }\n    },\n    methods: {\n        isDarkTheme() {\n            return this.$appState.darkTheme === true;\n        },\n        getLightTheme() {\n            return {\n                plugins: {\n                    legend: {\n                        labels: {\n                            color: '#495057'\n                        }\n                    }\n                },\n                scales: {\n                    r: {\n                        grid: {\n                            color: '#ebedef'\n                        }\n                    }\n                }\n            };\n        },\n        getDarkTheme() {\n            return {\n                plugins: {\n                    legend: {\n                        labels: {\n                            color: '#ebedef'\n                        }\n                    }\n                },\n                scales: {\n                    r: {\n                        grid: {\n                            color: 'rgba(255,255,255,0.2)'\n                        }\n                    }\n                }\n            };\n        }\n    },\n    components: {\n        'PolarAreaChartDoc': PolarAreaChartDoc\n    }\n}\n</script>\n"],"sourceRoot":""}]}