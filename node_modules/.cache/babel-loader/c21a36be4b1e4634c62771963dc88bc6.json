{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treetable/TreeTableResponsiveDemo.vue?vue&type=template&id=3706e084&scoped=true","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treetable/TreeTableResponsiveDemo.vue","mtime":1634589566292},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCB7IGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVGV4dFZOb2RlIGFzIF9jcmVhdGVUZXh0Vk5vZGUsIHdpdGhDdHggYXMgX3dpdGhDdHgsIHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCB3aXRoU2NvcGVJZCBhcyBfd2l0aFNjb3BlSWQsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhJZCA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoImRhdGEtdi0zNzA2ZTA4NCIpOwoKX3B1c2hTY29wZUlkKCJkYXRhLXYtMzcwNmUwODQiKTsKCnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAiY29udGVudC1zZWN0aW9uIGludHJvZHVjdGlvbiIKfTsKCnZhciBfaG9pc3RlZF8yID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiZGl2IiwgewogIGNsYXNzOiAiZmVhdHVyZS1pbnRybyIKfSwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImgxIiwgbnVsbCwgIlRyZWVUYWJsZSAtIFJlc3BvbnNpdmUiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgicCIsIG51bGwsICJUcmVlVGFibGUgZGlzcGxheSBjYW4gYmUgb3B0aW1pemVkIGFjY29yZGluZyBmb3IgZGlmZmVyZW50IHNjcmVlbiBzaXplcy4iKV0sIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8zID0gewogIGNsYXNzOiAiY29udGVudC1zZWN0aW9uIGltcGxlbWVudGF0aW9uIgp9Owp2YXIgX2hvaXN0ZWRfNCA9IHsKICBjbGFzczogImNhcmQiCn07Cgp2YXIgX2hvaXN0ZWRfNSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImg1IiwgbnVsbCwgIlNjcm9sbCIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF82ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgicCIsIG51bGwsIFsvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiQnVpbHQtaW4gcmVzcG9uc2l2ZW5lc3MgdXNpbmcgdGhlICIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJiIiwgbnVsbCwgInJlc3BvbnNpdmVMYXlvdXQiKSwgLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIiBwcm9wZXJ0eSBzZXQgdG8gc2Nyb2xsLiIpXSwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzcgPSB7CiAgY2xhc3M6ICJjYXJkIgp9OwoKdmFyIF9ob2lzdGVkXzggPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJoNSIsIG51bGwsICJDdXN0b20iLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfOSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInAiLCBudWxsLCAiQ3VzdG9tIGltcGxlbWVudGF0aW9uIHVzaW5nIG1lZGlhIHF1ZXJpZXMuIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzEwID0gewogIGNsYXNzOiAic20tdmlzaWJsZSIKfTsKdmFyIF9ob2lzdGVkXzExID0gewogIGNsYXNzOiAic20tdmlzaWJsZSIKfTsKCl9wb3BTY29wZUlkKCk7CgpleHBvcnQgdmFyIHJlbmRlciA9IC8qI19fUFVSRV9fKi9fd2l0aElkKGZ1bmN0aW9uIChfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9BcHBEZW1vQWN0aW9ucyA9IF9yZXNvbHZlQ29tcG9uZW50KCJBcHBEZW1vQWN0aW9ucyIpOwoKICB2YXIgX2NvbXBvbmVudF9Db2x1bW4gPSBfcmVzb2x2ZUNvbXBvbmVudCgiQ29sdW1uIik7CgogIHZhciBfY29tcG9uZW50X1RyZWVUYWJsZSA9IF9yZXNvbHZlQ29tcG9uZW50KCJUcmVlVGFibGUiKTsKCiAgdmFyIF9jb21wb25lbnRfQXBwRG9jID0gX3Jlc29sdmVDb21wb25lbnQoIkFwcERvYyIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImRpdiIsIG51bGwsIFtfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzEsIFtfaG9pc3RlZF8yLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9BcHBEZW1vQWN0aW9ucyldKSwgX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF8zLCBbX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF80LCBbX2hvaXN0ZWRfNSwgX2hvaXN0ZWRfNiwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfVHJlZVRhYmxlLCB7CiAgICB2YWx1ZTogJGRhdGEubm9kZXMsCiAgICByZXNwb25zaXZlTGF5b3V0OiAic2Nyb2xsIgogIH0sIHsKICAgIGRlZmF1bHQ6IF93aXRoSWQoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gW19jcmVhdGVWTm9kZShfY29tcG9uZW50X0NvbHVtbiwgewogICAgICAgIGZpZWxkOiAibmFtZSIsCiAgICAgICAgaGVhZGVyOiAiTmFtZSIsCiAgICAgICAgZXhwYW5kZXI6IHRydWUsCiAgICAgICAgc3R5bGU6IHsKICAgICAgICAgICJtaW4td2lkdGgiOiAiMjAwcHgiCiAgICAgICAgfQogICAgICB9KSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfQ29sdW1uLCB7CiAgICAgICAgZmllbGQ6ICJzaXplIiwKICAgICAgICBoZWFkZXI6ICJTaXplIiwKICAgICAgICBzdHlsZTogewogICAgICAgICAgIm1pbi13aWR0aCI6ICIyMDBweCIKICAgICAgICB9CiAgICAgIH0pLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9Db2x1bW4sIHsKICAgICAgICBmaWVsZDogInR5cGUiLAogICAgICAgIGhlYWRlcjogIlR5cGUiLAogICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAibWluLXdpZHRoIjogIjIwMHB4IgogICAgICAgIH0KICAgICAgfSldOwogICAgfSksCiAgICBfOiAxCiAgICAvKiBTVEFCTEUgKi8KCiAgfSwgOAogIC8qIFBST1BTICovCiAgLCBbInZhbHVlIl0pXSksIF9jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNywgW19ob2lzdGVkXzgsIF9ob2lzdGVkXzksIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X1RyZWVUYWJsZSwgewogICAgdmFsdWU6ICRkYXRhLm5vZGVzCiAgfSwgewogICAgZGVmYXVsdDogX3dpdGhJZChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfQ29sdW1uLCB7CiAgICAgICAgZmllbGQ6ICJuYW1lIiwKICAgICAgICBoZWFkZXI6ICJOYW1lIiwKICAgICAgICBleHBhbmRlcjogdHJ1ZQogICAgICB9LCB7CiAgICAgICAgYm9keTogX3dpdGhJZChmdW5jdGlvbiAoc2xvdFByb3BzKSB7CiAgICAgICAgICByZXR1cm4gW19jcmVhdGVUZXh0Vk5vZGUoX3RvRGlzcGxheVN0cmluZyhzbG90UHJvcHMubm9kZS5kYXRhLm5hbWUpICsgIiAiLCAxCiAgICAgICAgICAvKiBURVhUICovCiAgICAgICAgICApLCBfY3JlYXRlVk5vZGUoInNwYW4iLCBfaG9pc3RlZF8xMCwgX3RvRGlzcGxheVN0cmluZyhzbG90UHJvcHMubm9kZS5kYXRhLnNpemUpLCAxCiAgICAgICAgICAvKiBURVhUICovCiAgICAgICAgICApLCBfY3JlYXRlVk5vZGUoInNwYW4iLCBfaG9pc3RlZF8xMSwgX3RvRGlzcGxheVN0cmluZyhzbG90UHJvcHMubm9kZS5kYXRhLnR5cGUpLCAxCiAgICAgICAgICAvKiBURVhUICovCiAgICAgICAgICApXTsKICAgICAgICB9KSwKICAgICAgICBfOiAxCiAgICAgICAgLyogU1RBQkxFICovCgogICAgICB9KSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfQ29sdW1uLCB7CiAgICAgICAgZmllbGQ6ICJzaXplIiwKICAgICAgICBoZWFkZXI6ICJTaXplIiwKICAgICAgICBoZWFkZXJDbGFzczogInNtLWludmlzaWJsZSIsCiAgICAgICAgYm9keUNsYXNzOiAic20taW52aXNpYmxlIgogICAgICB9KSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfQ29sdW1uLCB7CiAgICAgICAgZmllbGQ6ICJ0eXBlIiwKICAgICAgICBoZWFkZXI6ICJUeXBlIiwKICAgICAgICBoZWFkZXJDbGFzczogInNtLWludmlzaWJsZSIsCiAgICAgICAgYm9keUNsYXNzOiAic20taW52aXNpYmxlIgogICAgICB9KV07CiAgICB9KSwKICAgIF86IDEKICAgIC8qIFNUQUJMRSAqLwoKICB9LCA4CiAgLyogUFJPUFMgKi8KICAsIFsidmFsdWUiXSldKV0pLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9BcHBEb2MsIHsKICAgIG5hbWU6ICJUcmVlVGFibGVSZXNwb25zaXZlRGVtbyIsCiAgICBzb3VyY2VzOiAkZGF0YS5zb3VyY2VzLAogICAgc2VydmljZTogWydOb2RlU2VydmljZSddLAogICAgZGF0YTogWyd0cmVldGFibGVub2RlcyddLAogICAgZ2l0aHViOiAidHJlZXRhYmxlL1RyZWVUYWJsZVJlc3BvbnNpdmVEZW1vLnZ1ZSIKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsic291cmNlcyJdKV0pOwp9KTs="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treetable/TreeTableResponsiveDemo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>TreeTable - Responsive</h1>\n                <p>TreeTable display can be optimized according for different screen sizes.</p>\n            </div>\n            <AppDemoActions />\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card\">\n                <h5>Scroll</h5>\n                <p>Built-in responsiveness using the <b>responsiveLayout</b> property set to scroll.</p>\n                <TreeTable :value=\"nodes\" responsiveLayout=\"scroll\">\n                    <Column field=\"name\" header=\"Name\" :expander=\"true\" style=\"min-width:200px\"></Column>\n                    <Column field=\"size\" header=\"Size\" style=\"min-width:200px\"></Column>\n                    <Column field=\"type\" header=\"Type\" style=\"min-width:200px\"></Column>\n                </TreeTable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Custom</h5>\n                <p>Custom implementation using media queries.</p>\n                <TreeTable :value=\"nodes\">\n                    <Column field=\"name\" header=\"Name\" :expander=\"true\">\n                        <template #body=\"slotProps\">\n                            {{slotProps.node.data.name}}\n                            <span class=\"sm-visible\">{{slotProps.node.data.size}}</span>\n                            <span class=\"sm-visible\">{{slotProps.node.data.type}}</span>\n                        </template>\n                    </Column>\n                    <Column field=\"size\" header=\"Size\" headerClass=\"sm-invisible\" bodyClass=\"sm-invisible\"></Column>\n                    <Column field=\"type\" header=\"Type\" headerClass=\"sm-invisible\" bodyClass=\"sm-invisible\"></Column>\n                </TreeTable>\n            </div>\n        </div>\n\n        <AppDoc name=\"TreeTableResponsiveDemo\" :sources=\"sources\" :service=\"['NodeService']\" :data=\"['treetablenodes']\" github=\"treetable/TreeTableResponsiveDemo.vue\" />\n    </div>\n</template>\n\n<script>\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            nodes: null,\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div>\n        <div class=\"card\">\n            <h5>Scroll</h5>\n            <p>Built-in responsiveness using the <b>responsiveLayout</b> property set to scroll.</p>\n            <TreeTable :value=\"nodes\" responsiveLayout=\"scroll\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\" style=\"min-width:200px\"></Column>\n                <Column field=\"size\" header=\"Size\" style=\"min-width:200px\"></Column>\n                <Column field=\"type\" header=\"Type\" style=\"min-width:200px\"></Column>\n            </TreeTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Custom</h5>\n            <p>Custom implementation using media queries.</p>\n            <TreeTable :value=\"nodes\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\">\n                    <template #body=\"slotProps\">\n                        {{slotProps.node.data.name}}\n                        <span class=\"sm-visible\">{{slotProps.node.data.size}}</span>\n                        <span class=\"sm-visible\">{{slotProps.node.data.type}}</span>\n                    </template>\n                </Column>\n                <Column field=\"size\" header=\"Size\" headerClass=\"sm-invisible\" bodyClass=\"sm-invisible\"></Column>\n                <Column field=\"type\" header=\"Type\" headerClass=\"sm-invisible\" bodyClass=\"sm-invisible\"></Column>\n            </TreeTable>\n        </div>\n    </div>                    \n</template>\n\n<script>\nimport NodeService from './service/NodeService';\n\nexport default {\n    data() {\n        return {\n            nodes: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeTableNodes().then(data => this.nodes = data);\n    }\n}\n<\\\\/script>\n\n<style scoped lang=\"scss\">\n.sm-visible {\n    display: none;\n}\n\n@media screen and (max-width: 40em) {\n    ::v-deep(.sm-invisible) {\n        display: none;\n    }\n\n    ::v-deep(.sm-visible) {\n        display: inline;\n        margin-right: .5rem;\n    }\n}\n</style>`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div>\n        <div class=\"card\">\n            <h5>Scroll</h5>\n            <p>Built-in responsiveness using the <b>responsiveLayout</b> property set to scroll.</p>\n            <TreeTable :value=\"nodes\" responsiveLayout=\"scroll\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\" style=\"min-width:200px\"></Column>\n                <Column field=\"size\" header=\"Size\" style=\"min-width:200px\"></Column>\n                <Column field=\"type\" header=\"Type\" style=\"min-width:200px\"></Column>\n            </TreeTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Custom</h5>\n            <p>Custom implementation using media queries.</p>\n            <TreeTable :value=\"nodes\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\">\n                    <template #body=\"slotProps\">\n                        {{slotProps.node.data.name}}\n                        <span class=\"sm-visible\">{{slotProps.node.data.size}}</span>\n                        <span class=\"sm-visible\">{{slotProps.node.data.type}}</span>\n                    </template>\n                </Column>\n                <Column field=\"size\" header=\"Size\" headerClass=\"sm-invisible\" bodyClass=\"sm-invisible\"></Column>\n                <Column field=\"type\" header=\"Type\" headerClass=\"sm-invisible\" bodyClass=\"sm-invisible\"></Column>\n            </TreeTable>\n        </div>\n    </div>                    \n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport NodeService from './service/NodeService';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            nodeService.value.getTreeTableNodes().then(data => nodes.value = data);\n        })\n\n        const nodes = ref();\n        const nodeService = ref(new NodeService());\n\n        return { nodes, nodeService }\n    }\n}\n<\\\\/script>\n\n<style scoped lang=\"scss\">\n.sm-visible {\n    display: none;\n}\n\n@media screen and (max-width: 40em) {\n    ::v-deep(.sm-invisible) {\n        display: none;\n    }\n\n    ::v-deep(.sm-visible) {\n        display: inline;\n        margin-right: .5rem;\n    }\n}\n</style>`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/treetable/treetable.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/column/column.min.js\"><\\\\/script>\n        <script src=\"./NodeService.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <div class=\"card\">\n                <h5>Scroll</h5>\n                <p>Built-in responsiveness using the <b>responsiveLayout</b> property set to scroll.</p>\n                <p-treetable :value=\"nodes\" responsive-layout=\"scroll\">\n                    <p-column field=\"name\" header=\"Name\" :expander=\"true\" style=\"min-width:200px\"></p-column>\n                    <p-column field=\"size\" header=\"Size\" style=\"min-width:200px\"></p-column>\n                    <p-column field=\"type\" header=\"Type\" style=\"min-width:200px\"></p-column>\n                </p-treetable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Custom</h5>\n                <p>Custom implementation using media queries.</p>\n                <p-treetable :value=\"nodes\">\n                    <p-column field=\"name\" header=\"Name\" :expander=\"true\">\n                        <template #body=\"slotProps\">\n                            {{slotProps.node.data.name}}\n                            <span class=\"sm-visible\">{{slotProps.node.data.size}}</span>\n                            <span class=\"sm-visible\">{{slotProps.node.data.type}}</span>\n                        </template>\n                    </p-column>\n                    <p-column field=\"size\" header=\"Size\" header-class=\"sm-invisible\" body-class=\"sm-invisible\"></p-column>\n                    <p-column field=\"type\" header=\"Type\" header-class=\"sm-invisible\" body-class=\"sm-invisible\"></p-column>\n                </p-treetable>\n            </div>\n        </div>                    \n\n        <script type=\"module\">\n        const { createApp, ref, onMounted } = Vue;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    nodeService.value.getTreeTableNodes().then(data => nodes.value = data);\n                })\n\n                const nodes = ref();\n                const nodeService = ref(new NodeService());\n\n                return { nodes, nodeService }\n            },\n            components: {\n                \"p-treetable\": primevue.treetable,\n                \"p-column\": primevue.column\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\\\/script>\n\n        <style>\n        .sm-visible {\n            display: none;\n        }\n\n        @media screen and (max-width: 40em) {\n            .sm-invisible {\n                display: none;\n            }\n\n            .sm-visible {\n                display: inline;\n                margin-right: .5rem;\n            }\n        }\n        </style>`\n                }\n            }\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeTableNodes().then(data => this.nodes = data);\n    }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.sm-visible {\n    display: none;\n}\n\n@media screen and (max-width: 40em) {\n    ::v-deep(.sm-invisible) {\n        display: none;\n    }\n\n    ::v-deep(.sm-visible) {\n        display: inline;\n        margin-right: .5rem;\n    }\n}\n</style>"],"sourceRoot":""}]}