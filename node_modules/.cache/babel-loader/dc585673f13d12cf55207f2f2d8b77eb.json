{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/chips/Chips.vue?vue&type=template&id=16bb85bf","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/chips/Chips.vue","mtime":1634589566211},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0IHsgcmVuZGVyTGlzdCBhcyBfcmVuZGVyTGlzdCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCByZW5kZXJTbG90IGFzIF9yZW5kZXJTbG90LCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBtZXJnZVByb3BzIGFzIF9tZXJnZVByb3BzIH0gZnJvbSAidnVlIjsKdmFyIF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJwLWNoaXBzLXRva2VuLWxhYmVsIgp9Owp2YXIgX2hvaXN0ZWRfMiA9IHsKICBjbGFzczogInAtY2hpcHMtaW5wdXQtdG9rZW4iCn07CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJkaXYiLCB7CiAgICBjbGFzczogJG9wdGlvbnMuY29udGFpbmVyQ2xhc3MsCiAgICBzdHlsZTogJHByb3BzLnN0eWxlCiAgfSwgW19jcmVhdGVWTm9kZSgidWwiLCB7CiAgICBjbGFzczogWydwLWlucHV0dGV4dCBwLWNoaXBzLW11bHRpcGxlLWNvbnRhaW5lcicsIHsKICAgICAgJ3AtZGlzYWJsZWQnOiBfY3R4LiRhdHRycy5kaXNhYmxlZCwKICAgICAgJ3AtZm9jdXMnOiAkZGF0YS5mb2N1c2VkCiAgICB9XSwKICAgIG9uQ2xpY2s6IF9jYWNoZVs2XSB8fCAoX2NhY2hlWzZdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJG9wdGlvbnMub25XcmFwcGVyQ2xpY2soKTsKICAgIH0pCiAgfSwgWyhfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlQmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdCgkcHJvcHMubW9kZWxWYWx1ZSwgZnVuY3Rpb24gKHZhbCwgaSkgewogICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJsaSIsIHsKICAgICAga2V5OiAiIi5jb25jYXQoaSwgIl8iKS5jb25jYXQodmFsKSwKICAgICAgY2xhc3M6ICJwLWNoaXBzLXRva2VuIgogICAgfSwgW19yZW5kZXJTbG90KF9jdHguJHNsb3RzLCAiY2hpcCIsIHsKICAgICAgdmFsdWU6IHZhbAogICAgfSwgZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gW19jcmVhdGVWTm9kZSgic3BhbiIsIF9ob2lzdGVkXzEsIF90b0Rpc3BsYXlTdHJpbmcodmFsKSwgMQogICAgICAvKiBURVhUICovCiAgICAgICldOwogICAgfSksIF9jcmVhdGVWTm9kZSgic3BhbiIsIHsKICAgICAgY2xhc3M6ICJwLWNoaXBzLXRva2VuLWljb24gcGkgcGktdGltZXMtY2lyY2xlIiwKICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljaygkZXZlbnQpIHsKICAgICAgICByZXR1cm4gJG9wdGlvbnMucmVtb3ZlSXRlbSgkZXZlbnQsIGkpOwogICAgICB9CiAgICB9LCBudWxsLCA4CiAgICAvKiBQUk9QUyAqLwogICAgLCBbIm9uQ2xpY2siXSldKTsKICB9KSwgMTI4CiAgLyogS0VZRURfRlJBR01FTlQgKi8KICApKSwgX2NyZWF0ZVZOb2RlKCJsaSIsIF9ob2lzdGVkXzIsIFtfY3JlYXRlVk5vZGUoImlucHV0IiwgX21lcmdlUHJvcHMoewogICAgcmVmOiAiaW5wdXQiLAogICAgdHlwZTogInRleHQiCiAgfSwgX2N0eC4kYXR0cnMsIHsKICAgIG9uRm9jdXM6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMub25Gb2N1cyAmJiAkb3B0aW9ucy5vbkZvY3VzLmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSksCiAgICBvbkJsdXI6IF9jYWNoZVsyXSB8fCAoX2NhY2hlWzJdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJG9wdGlvbnMub25CbHVyKCRldmVudCk7CiAgICB9KSwKICAgIG9uSW5wdXQ6IF9jYWNoZVszXSB8fCAoX2NhY2hlWzNdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMub25JbnB1dCAmJiAkb3B0aW9ucy5vbklucHV0LmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSksCiAgICBvbktleWRvd246IF9jYWNoZVs0XSB8fCAoX2NhY2hlWzRdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJG9wdGlvbnMub25LZXlEb3duKCRldmVudCk7CiAgICB9KSwKICAgIG9uUGFzdGU6IF9jYWNoZVs1XSB8fCAoX2NhY2hlWzVdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJG9wdGlvbnMub25QYXN0ZSgkZXZlbnQpOwogICAgfSksCiAgICBkaXNhYmxlZDogX2N0eC4kYXR0cnMuZGlzYWJsZWQgfHwgJG9wdGlvbnMubWF4ZWRPdXQKICB9KSwgbnVsbCwgMTYKICAvKiBGVUxMX1BST1BTICovCiAgLCBbImRpc2FibGVkIl0pXSldLCAyCiAgLyogQ0xBU1MgKi8KICApXSwgNgogIC8qIENMQVNTLCBTVFlMRSAqLwogICk7Cn0="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/chips/Chips.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div :class=\"containerClass\" :style=\"style\">\n        <ul :class=\"['p-inputtext p-chips-multiple-container', {'p-disabled': $attrs.disabled, 'p-focus': focused}]\" @click=\"onWrapperClick()\">\n            <li v-for=\"(val,i) of modelValue\" :key=\"`${i}_${val}`\" class=\"p-chips-token\">\n                <slot name=\"chip\" :value=\"val\">\n                    <span class=\"p-chips-token-label\">{{val}}</span>\n                </slot>\n                <span class=\"p-chips-token-icon pi pi-times-circle\" @click=\"removeItem($event, i)\"></span>\n            </li>\n            <li class=\"p-chips-input-token\">\n                <input ref=\"input\" type=\"text\" v-bind=\"$attrs\" @focus=\"onFocus\" @blur=\"onBlur($event)\" @input=\"onInput\" @keydown=\"onKeyDown($event)\" @paste=\"onPaste($event)\"\n                     :disabled=\"$attrs.disabled || maxedOut\">\n            </li>\n        </ul>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'Chips',\n    inheritAttrs: false,\n    emits: ['update:modelValue', 'add', 'remove'],\n    props: {\n        modelValue: {\n            type: Array,\n            default: null\n        },\n        max: {\n            type: Number,\n            default: null\n        },\n        separator: {\n            type: String,\n            default: null\n        },\n        addOnBlur: {\n            type: Boolean,\n            default: null\n        },\n        allowDuplicate: {\n            type: Boolean,\n            default: true\n        },\n        class: null,\n        style: null\n    },\n    data() {\n        return {\n            inputValue: null,\n            focused: false\n        };\n    },\n    methods: {\n        onWrapperClick() {\n            this.$refs.input.focus();\n        },\n        onInput(event) {\n            this.inputValue = event.target.value;\n        },\n        onFocus() {\n            this.focused = true;\n        },\n        onBlur(event) {\n            this.focused = false;\n            if (this.addOnBlur) {\n                this.addItem(event, event.target.value, false);\n            }\n        },\n        onKeyDown(event) {\n            const inputValue = event.target.value;\n\n            switch(event.which) {\n                //backspace\n                case 8:\n                    if (inputValue.length === 0 && this.modelValue && this.modelValue.length > 0) {\n                        this.removeItem(event, this.modelValue.length - 1);\n                    }\n                break;\n\n                //enter\n                case 13:\n                    if (inputValue && inputValue.trim().length && !this.maxedOut) {\n                        this.addItem(event, inputValue, true);\n                    }\n                break;\n\n                default:\n                    if (this.separator) {\n                        if (this.separator === ',' && event.which === 188) {\n                            this.addItem(event, inputValue, true);\n                        }\n                    }\n                break;\n            }\n        },\n        onPaste(event) {\n            if (this.separator) {\n                let pastedData = (event.clipboardData || window['clipboardData']).getData('Text');\n                if (pastedData) {\n                    let value = this.modelValue || [];\n                    let pastedValues = pastedData.split(this.separator);\n                    pastedValues = pastedValues.filter(val => (this.allowDuplicate || value.indexOf(val) === -1));\n                    value = [...value, ...pastedValues];\n                    this.updateModel(event, value, true);\n                }\n            }\n        },\n        updateModel(event, value, preventDefault) {\n            this.$emit('update:modelValue', value);\n            this.$emit('add', {\n                originalEvent: event,\n                value: value\n            });\n            this.$refs.input.value = '';\n            this.inputValue = '';\n\n            if (preventDefault) {\n                event.preventDefault();\n            }\n        },\n        addItem(event, item, preventDefault) {\n            if (item && item.trim().length) {\n                let value = this.modelValue ? [...this.modelValue]: [];\n                if (this.allowDuplicate || value.indexOf(item) === -1) {\n                    value.push(item);\n                    this.updateModel(event, value, preventDefault);\n                }\n            }\n        },\n        removeItem(event, index) {\n            if (this.$attrs.disabled) {\n                return;\n            }\n\n            let values = [...this.modelValue];\n            const removedItem = values.splice(index, 1);\n            this.$emit('update:modelValue', values);\n            this.$emit('remove', {\n                originalEvent: event,\n                value: removedItem\n            });\n        }\n    },\n    computed: {\n        maxedOut() {\n            return this.max && this.modelValue && this.max === this.modelValue.length;\n        },\n        containerClass() {\n            return ['p-chips p-component p-inputwrapper', this.class, {\n                'p-inputwrapper-filled': ((this.modelValue && this.modelValue.length) || (this.inputValue && this.inputValue.length)),\n                'p-inputwrapper-focus': this.focused\n            }];\n        }\n    }\n}\n</script>\n\n<style>\n.p-chips {\n    display: inline-flex;\n}\n\n.p-chips-multiple-container {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    cursor: text;\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n}\n\n.p-chips-token {\n    cursor: default;\n    display: inline-flex;\n    align-items: center;\n    flex: 0 0 auto;\n}\n\n.p-chips-input-token {\n    flex: 1 1 auto;\n    display: inline-flex;\n}\n\n.p-chips-token-icon {\n    cursor: pointer;\n}\n\n.p-chips-input-token input {\n    border: 0 none;\n    outline: 0 none;\n    background-color: transparent;\n    margin: 0;\n    padding: 0;\n    box-shadow: none;\n    border-radius: 0;\n    width: 100%;\n}\n\n.p-fluid .p-chips {\n    display: flex;\n}\n</style>\n"],"sourceRoot":""}]}