{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/chart/LineChartDoc.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/chart/LineChartDoc.vue","mtime":1634589566255},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/chart/LineChartDoc.vue"],"names":[],"mappings":"AAKA,eAAe;AACd,EAAA,IADc,kBACP;AACN,WAAO;AACN,MAAA,OAAO,EAAE;AACR,uBAAe;AACd,UAAA,OAAO,EAAE,oBADK;AAEd,UAAA,OAAO;AAFO,SADP;AAwKR,2BAAmB;AAClB,UAAA,OAAO,EAAE,wBADS;AAElB,UAAA,OAAO;AAFW;AAxKX;AADH,KAAP;AAkWD;AApWc,CAAf","sourcesContent":["<template>\n\t<AppDoc name=\"ChartDemo\" :sources=\"sources\" :dependencies=\"{'chart.js': '3.3.2'}\" component=\"Chart\" github=\"chart/LineChartDemo.vue\" />\n</template>\n\n<script>\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tsources: {\n\t\t\t\t'options-api': {\n\t\t\t\t\ttabName: 'Options API Source',\n\t\t\t\t\tcontent: `\n<template>\n    <div>\n        <div class=\"card\">\n            <h5>Basic</h5>\n            <Chart type=\"line\" :data=\"basicData\" :options=\"basicOptions\" />\n        </div>\n\n        <div class=\"card\">\n            <h5>Multi Axis</h5>\n            <Chart type=\"line\" :data=\"multiAxisData\" :options=\"multiAxisOptions\" />\n        </div>\n\n        <div class=\"card\">\n            <h5>Line Styles</h5>\n            <Chart type=\"line\" :data=\"lineStylesData\" :options=\"basicOptions\" />\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            basicData: {\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                    {\n                        label: 'First Dataset',\n                        data: [65, 59, 80, 81, 56, 55, 40],\n                        fill: false,\n                        borderColor: '#42A5F5',\n                        tension: .4\n                    },\n                    {\n                        label: 'Second Dataset',\n                        data: [28, 48, 40, 19, 86, 27, 90],\n                        fill: false,\n                        borderColor: '#FFA726',\n                        tension: .4\n                    }\n                ]\n            },\n            multiAxisData: {\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [{\n                    label: 'Dataset 1',\n                    fill: false,\n                    borderColor: '#42A5F5',\n                    yAxisID: 'y',\n                    tension: .4,\n                    data: [65, 59, 80, 81, 56, 55, 10]\n                }, {\n                    label: 'Dataset 2',\n                    fill: false,\n                    borderColor: '#00bb7e',\n                    yAxisID: 'y1',\n                    tension: .4,\n                    data: [28, 48, 40, 19, 86, 27, 90]\n                }]\n            },\n            lineStylesData: {\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                    {\n                        label: 'First Dataset',\n                        data: [65, 59, 80, 81, 56, 55, 40],\n                        fill: false,\n                        tension: .4,\n                        borderColor: '#42A5F5'\n                    },\n                    {\n                        label: 'Second Dataset',\n                        data: [28, 48, 40, 19, 86, 27, 90],\n                        fill: false,\n                        borderDash: [5, 5],\n                        tension: .4,\n                        borderColor: '#66BB6A'\n                    },\n                    {\n                        label: 'Third Dataset',\n                        data: [12, 51, 62, 33, 21, 62, 45],\n                        fill: true,\n                        borderColor: '#FFA726',\n                        tension: .4,\n                        backgroundColor: 'rgba(255,167,38,0.2)'\n                    }\n                ]\n            },\n            basicOptions: {\n                plugins: {\n                    legend: {\n                        labels: {\n                            color: '#495057'\n                        }\n                    }\n                },\n                scales: {\n                    x: {\n                        ticks: {\n                            color: '#495057'\n                        },\n                        grid: {\n                            color: '#ebedef'\n                        }\n                    },\n                    y: {\n                        ticks: {\n                            color: '#495057'\n                        },\n                        grid: {\n                            color: '#ebedef'\n                        }\n                    }\n                }\n            },\n            multiAxisOptions:{\n                stacked: false,\n                plugins: {\n                    legend: {\n                        labels: {\n                            color: '#495057'\n                        }\n                    }\n                },\n                scales: {\n                    x: {\n                        ticks: {\n                            color: '#495057'\n                        },\n                        grid: {\n                            color: '#ebedef'\n                        }\n                    },\n                    y: {\n                        type: 'linear',\n                        display: true,\n                        position: 'left',\n                        ticks: {\n                            color: '#495057'\n                        },\n                        grid: {\n                            color: '#ebedef'\n                        }\n                    },\n                    y1: {\n                        type: 'linear',\n                        display: true,\n                        position: 'right',\n                        ticks: {\n                            color: '#495057'\n                        },\n                        grid: {\n                            drawOnChartArea: false,\n                            color: '#ebedef'\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n<\\\\/script>\n`\n\t\t\t\t},\n\t\t\t\t'composition-api': {\n\t\t\t\t\ttabName: 'Composition API Source',\n\t\t\t\t\tcontent: `\n<template>\n    <div>\n        <div class=\"card\">\n            <h5>Basic</h5>\n            <Chart type=\"line\" :data=\"basicData\" :options=\"basicOptions\" />\n        </div>\n\n        <div class=\"card\">\n            <h5>Multi Axis</h5>\n            <Chart type=\"line\" :data=\"multiAxisData\" :options=\"multiAxisOptions\" />\n        </div>\n\n        <div class=\"card\">\n            <h5>Line Styles</h5>\n            <Chart type=\"line\" :data=\"lineStylesData\" :options=\"basicOptions\" />\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n    setup() {\n        const basicData =  ref(\n            {\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                    {\n                        label: 'First Dataset',\n                        data: [65, 59, 80, 81, 56, 55, 40],\n                        fill: false,\n                        borderColor: '#42A5F5',\n                        tension: .4\n                    },\n                    {\n                        label: 'Second Dataset',\n                        data: [28, 48, 40, 19, 86, 27, 90],\n                        fill: false,\n                        borderColor: '#FFA726',\n                        tension: .4\n                    }\n                ]\n            }\n        );\n\n        const multiAxisData = ref(\n            {\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [{\n                    label: 'Dataset 1',\n                    fill: false,\n                    borderColor: '#42A5F5',\n                    yAxisID: 'y',\n                    tension: .4,\n                    data: [65, 59, 80, 81, 56, 55, 10]\n                }, {\n                    label: 'Dataset 2',\n                    fill: false,\n                    borderColor: '#00bb7e',\n                    yAxisID: 'y1',\n                    tension: .4,\n                    data: [28, 48, 40, 19, 86, 27, 90]\n                }]\n            }\n        );\n\n        const lineStylesData = ref(\n            {\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                    {\n                        label: 'First Dataset',\n                        data: [65, 59, 80, 81, 56, 55, 40],\n                        fill: false,\n                        tension: .4,\n                        borderColor: '#42A5F5'\n                    },\n                    {\n                        label: 'Second Dataset',\n                        data: [28, 48, 40, 19, 86, 27, 90],\n                        fill: false,\n                        borderDash: [5, 5],\n                        tension: .4,\n                        borderColor: '#66BB6A'\n                    },\n                    {\n                        label: 'Third Dataset',\n                        data: [12, 51, 62, 33, 21, 62, 45],\n                        fill: true,\n                        borderColor: '#FFA726',\n                        tension: .4,\n                        backgroundColor: 'rgba(255,167,38,0.2)'\n                    }\n                ]\n            }\n        );\n\n        const basicOptions = ref(\n            {\n                plugins: {\n                    legend: {\n                        labels: {\n                            color: '#495057'\n                        }\n                    }\n                },\n                scales: {\n                    x: {\n                        ticks: {\n                            color: '#495057'\n                        },\n                        grid: {\n                            color: '#ebedef'\n                        }\n                    },\n                    y: {\n                        ticks: {\n                            color: '#495057'\n                        },\n                        grid: {\n                            color: '#ebedef'\n                        }\n                    }\n                }\n            }\n        );\n\n        const multiAxisData = ref(\n            {\n                stacked: false,\n                plugins: {\n                    legend: {\n                        labels: {\n                            color: '#495057'\n                        }\n                    }\n                },\n                scales: {\n                    x: {\n                        ticks: {\n                            color: '#495057'\n                        },\n                        grid: {\n                            color: '#ebedef'\n                        }\n                    },\n                    y: {\n                        type: 'linear',\n                        display: true,\n                        position: 'left',\n                        ticks: {\n                            color: '#495057'\n                        },\n                        grid: {\n                            color: '#ebedef'\n                        }\n                    },\n                    y1: {\n                        type: 'linear',\n                        display: true,\n                        position: 'right',\n                        ticks: {\n                            color: '#495057'\n                        },\n                        grid: {\n                            drawOnChartArea: false,\n                            color: '#ebedef'\n                        }\n                    }\n                }\n            }\n        );\n\n\t\treturn { basicData, multiAxisData, multiAxisOptions, lineStylesData, basicOptions }\n    }\n}\n<\\\\/script>\n`\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n</script>"],"sourceRoot":""}]}