{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/fullcalendar/FullCalendarDoc.vue?vue&type=template&id=a482677a","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/fullcalendar/FullCalendarDoc.vue","mtime":1634589566267},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBjcmVhdGVUZXh0Vk5vZGUgYXMgX2NyZWF0ZVRleHRWTm9kZSwgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgd2l0aEN0eCBhcyBfd2l0aEN0eCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jayB9IGZyb20gInZ1ZSI7Cgp2YXIgX2hvaXN0ZWRfMSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInAiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIkFzIGl0IGlzIG5vdCBhIGNvbXBvbmVudCBmcm9tIFByaW1lVnVlLCByZWZlciB0byB0aGUgRnVsbENhbGVuZGFyICIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJhIiwgewogIGhyZWY6ICJodHRwczovL2Z1bGxjYWxlbmRhci5pby9kb2NzL3Z1ZSIKfSwgImRvY3VtZW50YXRpb24iKSwgLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIiBmb3IgbW9yZSBpbmZvcm1hdGlvbi4iKV0sIC0xCi8qIEhPSVNURUQgKi8KKTsKCmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF9jb21wb25lbnRfQXBwRG9jID0gX3Jlc29sdmVDb21wb25lbnQoIkFwcERvYyIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9BcHBEb2MsIHsKICAgIG5hbWU6ICJGdWxsQ2FsZW5kYXJEZW1vIiwKICAgIHNvdXJjZXM6ICRkYXRhLnNvdXJjZXMsCiAgICBzZXJ2aWNlOiBbJ0V2ZW50U2VydmljZSddLAogICAgZGF0YTogWydldmVudHMnXSwKICAgIGdpdGh1YjogImZ1bGxjYWxlbmRhci9GdWxsQ2FsZW5kYXJEZW1vLnZ1ZSIsCiAgICBkZXBlbmRlbmNpZXM6IHsKICAgICAgJ0BmdWxsY2FsZW5kYXIvY29yZSc6ICdeNS43LjInLAogICAgICAnQGZ1bGxjYWxlbmRhci92dWUzJzogJ141LjcuMicsCiAgICAgICdAZnVsbGNhbGVuZGFyL2RheWdyaWQnOiAnXjUuNy4yJywKICAgICAgJ0BmdWxsY2FsZW5kYXIvaW50ZXJhY3Rpb24nOiAnXjUuNy4yJywKICAgICAgJ0BmdWxsY2FsZW5kYXIvdGltZWdyaWQnOiAnXjUuNy4yJwogICAgfSwKICAgIGNvbXBvbmVudDogIkZ1bGxDYWxlbmRhciIKICB9LCB7CiAgICBkZWZhdWx0OiBfd2l0aEN0eChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBbX2hvaXN0ZWRfMV07CiAgICB9KSwKICAgIF86IDEKICAgIC8qIFNUQUJMRSAqLwoKICB9LCA4CiAgLyogUFJPUFMgKi8KICAsIFsic291cmNlcyIsICJkZXBlbmRlbmNpZXMiXSk7Cn0="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/fullcalendar/FullCalendarDoc.vue"],"names":[],"mappings":";;8BAIQ,YAAA,CAA2J,GAA3J,EAA2J,IAA3J,EAA2J,C,8BAAxJ,oE,CAAwJ,E,aAAtF,YAAA,CAA4D,GAA5D,EAA4D;AAAzD,EAAA,IAAI,EAAC;AAAoD,CAA5D,EAA2C,eAA3C,CAAsF,E,8BAA1B,wB,CAA0B,CAA3J,E;;AAAA,C;;;;;uBAHP,YAAA,CAIY,iBAJZ,EAIY;AAJJ,IAAA,IAAI,EAAC,kBAID;AAJqB,IAAA,OAAO,EAAE,KAAA,CAAA,OAI9B;AAJwC,IAAA,OAAO,EAAE,CAAA,cAAA,CAIjD;AAJoE,IAAA,IAAI,EAAE,CAAA,QAAA,CAI1E;AAJsF,IAAA,MAAM,EAAC,mCAI7F;AAHJ,IAAA,YAAY,EAAE;AAAA,4BAAA,QAAA;AAAA,4BAAA,QAAA;AAAA,+BAAA,QAAA;AAAA,mCAAA,QAAA;AAAA,gCAAA;AAAA,KAGV;AAH0L,IAAA,SAAS,EAAC;AAGpM,GAJZ,E;sBAGO;AAAA,aAA2J,CAA3J,UAA2J,CAA3J;AAAA,K;;;;GAHP,E;;AAAA,I,2BAAA,C","sourcesContent":["<template>\n\t<AppDoc name=\"FullCalendarDemo\" :sources=\"sources\" :service=\"['EventService']\" :data=\"['events']\" github=\"fullcalendar/FullCalendarDemo.vue\"\n        :dependencies=\"{'@fullcalendar/core': '^5.7.2', '@fullcalendar/vue3': '^5.7.2', '@fullcalendar/daygrid': '^5.7.2', '@fullcalendar/interaction': '^5.7.2', '@fullcalendar/timegrid': '^5.7.2'}\" component=\"FullCalendar\">\n\n        <p>As it is not a component from PrimeVue, refer to the FullCalendar <a href=\"https://fullcalendar.io/docs/vue\">documentation</a> for more information.</p>\n    </AppDoc>\n</template>\n\n<script>\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tsources: {\n\t\t\t\t'options-api': {\n                    tabName: 'Options API Source',\n\t\t\t\t\tcontent: `\n<template>\n    <div>\n        <FullCalendar :events=\"events\" :options=\"options\" />\n    </div>\n</template>\n\n<script>\nimport '@fullcalendar/core';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport EventService from './service/EventService';\n\nexport default {\n    data() {\n        return {\n            options: {\n                plugins:[dayGridPlugin, timeGridPlugin, interactionPlugin],\n                initialDate : '2017-02-01',\n                headerToolbar: {\n                    left: 'prev,next today',\n                    center: 'title',\n                    right: 'dayGridMonth,timeGridWeek,timeGridDay'\n                },\n                editable: true,\n                selectable:true, \n                selectMirror: true, \n                dayMaxEvents: true\n            },\n            events: null\n        };\n    },\n    eventService: null,\n    created() {\n        this.eventService = new EventService();\n    },\n    mounted() {\n        this.eventService.getEvents().then(data => this.events = data);\n    }\n}\n<\\\\/script>\n\n<style scoped>\n@media screen and (max-width: 960px) {\n    ::v-deep(.fc-header-toolbar) {\n        display: flex;\n        flex-wrap: wrap;\n    }\n}\n</style>`\n\t\t\t\t},\n                'composition-api': {\n                    tabName: 'Composition API Source',\n\t\t\t\t\tcontent: `\n<template>\n    <div>\n        <FullCalendar :events=\"events\" :options=\"options\" />\n    </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport '@fullcalendar/core';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport EventService from './service/EventService';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            eventService.value.getEvents().then(data => events.value = data);\n        })\n\n        const options =  ref({\n            plugins:[dayGridPlugin, timeGridPlugin, interactionPlugin],\n            initialDate : '2017-02-01',\n            headerToolbar: {\n                left: 'prev,next today',\n                center: 'title',\n                right: 'dayGridMonth,timeGridWeek,timeGridDay'\n            },\n            editable: true,\n                selectable:true, \n                selectMirror: true, \n                dayMaxEvents: true\n        });\n        const events =  ref(null);\n        const eventService = ref(new EventService());\n\n        return { options, events, eventService };\n    }\n}\n<\\\\/script>\n\n<style scoped>\n@media screen and (max-width: 960px) {\n    ::v-deep(.fc-header-toolbar) {\n        display: flex;\n        flex-wrap: wrap;\n    }\n}\n</style>`\n\t\t\t\t},\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/fullcalendar@5.7.2/main.min.js\"><\\\\/script>\n        <link rel=\"stylesheet\" href=\"https://unpkg.com/fullcalendar@5.7.2/main.min.css\"><\\\\/link>\n\n        <script src=\"https://unpkg.com/primevue@^3/fullcalendar/fullcalendar.min.js\"><\\\\/script>\n        <script src=\"./EventService.js\"><\\\\/script>`,\n\t\t\t\t\tcontent: `<div id=\"app\">\n            <p-fullcalendar :events=\"events\" :options=\"options\"></p-fullcalendar>\n        </div>\n\n        <script>\n        const { createApp, ref, onMounted } = Vue;\n        const { dayGridPlugin, timeGridPlugin, interactionPlugin } = FullCalendar.Calendar;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    eventService.value.getEvents().then(data => events.value = data);\n                })\n\n                const options =  ref({\n                    plugins:[dayGridPlugin, timeGridPlugin, interactionPlugin],\n                    initialDate : '2017-02-01',\n                    headerToolbar: {\n                        left: 'prev,next today',\n                        center: 'title',\n                        right: 'dayGridMonth,timeGridWeek,timeGridDay'\n                    },\n                    editable: true,\n                        selectable:true, \n                        selectMirror: true, \n                        dayMaxEvents: true\n                });\n                const events =  ref(null);\n                const eventService = ref(new EventService());\n\n                return { options, events, eventService };\n            },\n            components: {\n                \"p-fullcalendar\": primevue.fullcalendar\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\\\/script>\n\n        <style scoped>\n        @media screen and (max-width: 960px) {\n            ::v-deep(.fc-header-toolbar) {\n                display: flex;\n                flex-wrap: wrap;\n            }\n        }\n        </style>`\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n</script>"],"sourceRoot":""}]}