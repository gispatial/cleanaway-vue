{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTableEditDemo.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTableEditDemo.vue","mtime":1634589566259},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/datatable/DataTableEditDemo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\t<div>\n\t\t<div class=\"content-section introduction\">\n\t\t\t<div class=\"feature-intro\">\n\t\t\t\t<h1>DataTable <span>InCell Edit</span></h1>\n\t\t\t\t<p>In cell editing provides a rapid and user friendly way to manipulate the data. The datatable provides a flexible API\n                    so that the editing behavior is implemented by the page author whether it utilizes v-model or vuex.\n                </p>\n\t\t\t</div>\n            <AppDemoActions />\n\t\t</div>\n\n\t\t<div class=\"content-section implementation p-fluid\">\n            <div class=\"card\">\n                <h5>Cell Editing</h5>\n                <p>Validations, dynamic columns and reverting values with the escape key.</p>\n                <DataTable :value=\"products1\" editMode=\"cell\" @cell-edit-complete=\"onCellEditComplete\" class=\"editable-cells-table\" responsiveLayout=\"scroll\">\n                    <Column v-for=\"col of columns\" :field=\"col.field\" :header=\"col.header\" :key=\"col.field\" style=\"width:25%\">\n                        <template #editor=\"{ data, field }\">\n                            <InputText v-model=\"data[field]\" autofocus />\n                        </template>\n                    </Column>\n                </DataTable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Row Editing</h5>\n                <DataTable :value=\"products2\" editMode=\"row\" dataKey=\"id\" v-model:editingRows=\"editingRows\" @row-edit-save=\"onRowEditSave\" responsiveLayout=\"scroll\">\n                    <Column field=\"code\" header=\"Code\" style=\"width:20%\">\n                        <template #editor=\"{ data, field }\">\n                            <InputText v-model=\"data[field]\" autofocus />\n                        </template>\n                    </Column>\n                    <Column field=\"name\" header=\"Name\" style=\"width:20%\">\n                        <template #editor=\"{ data, field }\">\n                            <InputText v-model=\"data[field]\" />\n                        </template>\n                    </Column>\n                    <Column field=\"inventoryStatus\" header=\"Status\" style=\"width:20%\">\n                        <template #editor=\"{ data, field }\">\n                            <Dropdown v-model=\"data[field]\" :options=\"statuses\" optionLabel=\"label\" optionValue=\"value\" placeholder=\"Select a Status\">\n                                <template #option=\"slotProps\">\n                                    <span :class=\"'product-badge status-' + slotProps.option.value.toLowerCase()\">{{slotProps.option.label}}</span>\n                                </template>\n                            </Dropdown>\n                        </template>\n                        <template #body=\"slotProps\">\n                            {{getStatusLabel(slotProps.data.inventoryStatus)}}\n                        </template>\n                    </Column>\n                    <Column field=\"price\" header=\"Price\" style=\"width:20%\">\n                        <template #editor=\"{ data, field }\">\n                            <InputText v-model=\"data[field]\" />\n                        </template>\n                    </Column>\n                    <Column :rowEditor=\"true\" style=\"width:10%; min-width:8rem\" bodyStyle=\"text-align:center\"></Column>\n                </DataTable>\n            </div>\n\t\t</div>\n\n        <AppDoc name=\"DataTableEditDemo\" :sources=\"sources\" :service=\"['ProductService']\" :data=\"['products-small']\" github=\"datatable/DataTableEditDemo.vue\" />\n\t</div>\n</template>\n\n<script>\nimport ProductService from '../../service/ProductService';\n\nexport default {\n    data() {\n        return {\n            editingRows: [],\n            columns: null,\n            products1: null,\n            products2: null,\n            statuses: [\n                {label: 'In Stock', value: 'INSTOCK'},\n                {label: 'Low Stock', value: 'LOWSTOCK'},\n                {label: 'Out of Stock', value: 'OUTOFSTOCK'}\n            ],\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div class=\"p-fluid\">\n        <div class=\"card\">\n            <h5>Cell Editing</h5>\n            <p>Validations, dynamic columns and reverting values with the escape key.</p>\n            <DataTable :value=\"products1\" editMode=\"cell\" @cell-edit-complete=\"onCellEditComplete\" class=\"editable-cells-table\" responsiveLayout=\"scroll\">\n                <Column v-for=\"col of columns\" :field=\"col.field\" :header=\"col.header\" :key=\"col.field\" style=\"width:25%\">\n                    <template #editor=\"{ data, field }\">\n                        <InputText v-model=\"data[field]\" autofocus />\n                    </template>\n                </Column>\n            </DataTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Row Editing</h5>\n            <DataTable :value=\"products2\" editMode=\"row\" dataKey=\"id\" v-model:editingRows=\"editingRows\" @row-edit-save=\"onRowEditSave\" responsiveLayout=\"scroll\">\n                <Column field=\"code\" header=\"Code\" style=\"width:20%\">\n                    <template #editor=\"{ data, field }\">\n                        <InputText v-model=\"data[field]\" autofocus />\n                    </template>\n                </Column>\n                <Column field=\"name\" header=\"Name\" style=\"width:20%\">\n                    <template #editor=\"{ data, field }\">\n                        <InputText v-model=\"data[field]\" />\n                    </template>\n                </Column>\n                <Column field=\"inventoryStatus\" header=\"Status\" style=\"width:20%\">\n                    <template #editor=\"{ data, field }\">\n                        <Dropdown v-model=\"data[field]\" :options=\"statuses\" optionLabel=\"label\" optionValue=\"value\" placeholder=\"Select a Status\">\n                            <template #option=\"slotProps\">\n                                <span :class=\"'product-badge status-' + slotProps.option.value.toLowerCase()\">{{slotProps.option.label}}</span>\n                            </template>\n                        </Dropdown>\n                    </template>\n                    <template #body=\"slotProps\">\n                        {{getStatusLabel(slotProps.data.inventoryStatus)}}\n                    </template>\n                </Column>\n                <Column field=\"price\" header=\"Price\" style=\"width:20%\">\n                    <template #editor=\"{ data, field }\">\n                        <InputText v-model=\"data[field]\" />\n                    </template>\n                </Column>\n                <Column :rowEditor=\"true\" style=\"width:10%; min-width:8rem\" bodyStyle=\"text-align:center\"></Column>\n            </DataTable>\n        </div>\n    </div>\n</template>\n\n<script>\nimport ProductService from './service/ProductService';\n\nexport default {\n    data() {\n        return {\n            editingRows: [],\n            columns: null,\n            products1: null,\n            products2: null,\n            statuses: [\n                {label: 'In Stock', value: 'INSTOCK'},\n                {label: 'Low Stock', value: 'LOWSTOCK'},\n                {label: 'Out of Stock', value: 'OUTOFSTOCK'}\n            ]\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n\n        this.columns = [\n            {field: 'code', header: 'Code'},\n            {field: 'name', header: 'Name'},\n            {field: 'quantity', header: 'Quantity'},\n            {field: 'price', header: 'Price'}\n        ];\n    },\n    methods: {\n        onCellEditComplete(event) {\n            let { data, newValue, field } = event;\n\n            switch (field) {\n                case 'quantity':\n                case 'price':\n                    if (this.isPositiveInteger(newValue))\n                        data[field] = newValue;\n                    else\n                        event.preventDefault();\n                break;\n\n                default:\n                    if (newValue.trim().length > 0)\n                        data[field] = newValue;\n                    else\n                        event.preventDefault();\n                break;\n            }\n        },\n        isPositiveInteger(val) {\n            let str = String(val);\n            str = str.trim();\n            if (!str) {\n                return false;\n            }\n            str = str.replace(/^0+/, \"\") || \"0\";\n            var n = Math.floor(Number(str));\n            return n !== Infinity && String(n) === str && n >= 0;\n        },\n        onRowEditSave(event) {\n            let { newData, index } = event;\n\n            this.products2[index] = newData;\n        },\n        getStatusLabel(status) {\n            switch(status) {\n                case 'INSTOCK':\n                    return 'In Stock';\n\n                case 'LOWSTOCK':\n                    return 'Low Stock';\n\n                case 'OUTOFSTOCK':\n                    return 'Out of Stock';\n\n                default:\n                    return 'NA';\n            }\n        }\n    },\n    mounted() {\n        this.productService.getProductsSmall().then(data => this.products1 = data);\n        this.productService.getProductsSmall().then(data => this.products2 = data);\n    }\n}\n<\\\\/script>\n\n<style lang=\"scss\" scoped>\n::v-deep(.editable-cells-table td.p-cell-editing) {\n    padding-top: 0;\n    padding-bottom: 0;\n}\n</style>`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div class=\"p-fluid\">\n        <div class=\"card\">\n            <h5>Cell Editing</h5>\n            <p>Validations, dynamic columns and reverting values with the escape key.</p>\n            <DataTable :value=\"products1\" editMode=\"cell\" @cell-edit-complete=\"onCellEditComplete\" class=\"editable-cells-table\" responsiveLayout=\"scroll\">\n                <Column v-for=\"col of columns\" :field=\"col.field\" :header=\"col.header\" :key=\"col.field\" style=\"width:25%\">\n                    <template #editor=\"{ data, field }\">\n                        <InputText v-model=\"data[field]\" autofocus />\n                    </template>\n                </Column>\n            </DataTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Row Editing</h5>\n            <DataTable :value=\"products2\" editMode=\"row\" dataKey=\"id\" v-model:editingRows=\"editingRows\" @row-edit-save=\"onRowEditSave\" responsiveLayout=\"scroll\">\n                <Column field=\"code\" header=\"Code\" style=\"width:20%\">\n                    <template #editor=\"{ data, field }\">\n                        <InputText v-model=\"data[field]\" autofocus />\n                    </template>\n                </Column>\n                <Column field=\"name\" header=\"Name\" style=\"width:20%\">\n                    <template #editor=\"{ data, field }\">\n                        <InputText v-model=\"data[field]\" />\n                    </template>\n                </Column>\n                <Column field=\"inventoryStatus\" header=\"Status\" style=\"width:20%\">\n                    <template #editor=\"{ data, field }\">\n                        <Dropdown v-model=\"data[field]\" :options=\"statuses\" optionLabel=\"label\" optionValue=\"value\" placeholder=\"Select a Status\">\n                            <template #option=\"slotProps\">\n                                <span :class=\"'product-badge status-' + slotProps.option.value.toLowerCase()\">{{slotProps.option.label}}</span>\n                            </template>\n                        </Dropdown>\n                    </template>\n                    <template #body=\"slotProps\">\n                        {{getStatusLabel(slotProps.data.inventoryStatus)}}\n                    </template>\n                </Column>\n                <Column field=\"price\" header=\"Price\" style=\"width:20%\">\n                    <template #editor=\"{ data, field }\">\n                        <InputText v-model=\"data[field]\" />\n                    </template>\n                </Column>\n                <Column :rowEditor=\"true\" style=\"width:10%; min-width:8rem\" bodyStyle=\"text-align:center\"></Column>\n            </DataTable>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport ProductService from './service/ProductService';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            productService.value.getProductsSmall().then(data => products1.value = data);\n            productService.value.getProductsSmall().then(data => products2.value = data);\n        });\n\n        const productService = ref(new ProductService());\n        const editingRows = ref([]);\n        const columns = ref([\n            {field: 'code', header: 'Code'},\n            {field: 'name', header: 'Name'},\n            {field: 'quantity', header: 'Quantity'},\n            {field: 'price', header: 'Price'}\n        ]);\n        const products1 = ref(null);\n        const products2 = ref(null);\n        const statuses = ref([\n            {label: 'In Stock', value: 'INSTOCK'},\n            {label: 'Low Stock', value: 'LOWSTOCK'},\n            {label: 'Out of Stock', value: 'OUTOFSTOCK'}\n        ]);\n\n        const onCellEditComplete = (event) => {\n            let { data, newValue, field } = event;\n\n            switch (field) {\n                case 'quantity':\n                case 'price':\n                    if (isPositiveInteger(newValue))\n                        data[field] = newValue;\n                    else\n                        event.preventDefault();\n                break;\n\n                default:\n                    if (newValue.trim().length > 0)\n                        data[field] = newValue;\n                    else\n                        event.preventDefault();\n                break;\n            }\n        };\n        const isPositiveInteger = (val) => {\n            let str = String(val);\n            str = str.trim();\n            if (!str) {\n                return false;\n            }\n            str = str.replace(/^0+/, \"\") || \"0\";\n            var n = Math.floor(Number(str));\n            return n !== Infinity && String(n) === str && n >= 0;\n        };\n        const onRowEditSave = (event) => {\n            let { newData, index } = event;\n\n            products2.value[index] = newData;\n        };\n        const getStatusLabel = (status) => {\n            switch(status) {\n                case 'INSTOCK':\n                    return 'In Stock';\n\n                case 'LOWSTOCK':\n                    return 'Low Stock';\n\n                case 'OUTOFSTOCK':\n                    return 'Out of Stock';\n\n                default:\n                    return 'NA';\n            }\n        };\n\n        return { productService, editingRows, columns, products1, products2, statuses, onCellEditComplete,\n            isPositiveInteger, onRowEditSave, getStatusLabel }\n    }\n}\n<\\\\/script>\n\n<style lang=\"scss\" scoped>\n::v-deep(.editable-cells-table td.p-cell-editing) {\n    padding-top: 0;\n    padding-bottom: 0;\n}\n</style>`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/datatable/datatable.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/column/column.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/dropdown/dropdown.min.js\"><\\\\/script>\n        <script src=\"./ProductService.js\"><\\\\/script>`,\n                    content: `<div id=\"app\" class=\"p-fluid card\">\n            <div class=\"card\">\n                <h5>Cell Editing</h5>\n                <p>Validations, dynamic columns and reverting values with the escape key.</p>\n                <p-datatable :value=\"products1\" edit-mode=\"cell\" @cell-edit-complete=\"onCellEditComplete\" class=\"editable-cells-table\" responsive-layout=\"scroll\">\n                    <p-column v-for=\"col of columns\" :field=\"col.field\" :header=\"col.header\" :key=\"col.field\" style=\"width:25%\">\n                        <template #editor=\"{ data, field }\">\n                            <p-inputtext v-model=\"data[field]\" autofocus></p-inputtext>\n                        </template>\n                    </p-column>\n                </p-datatable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Row Editing</h5>\n                <p-datatable :value=\"products2\" edit-mode=\"row\" dataKey=\"id\" v-model:editing-rows=\"editingRows\" @row-edit-save=\"onRowEditSave\" responsive-layout=\"scroll\">\n                    <p-column field=\"code\" header=\"Code\" style=\"width:20%\">\n                        <template #editor=\"{ data, field }\">\n                            <p-inputtext v-model=\"data[field]\" autofocus></p-inputtext>\n                        </template>\n                    </p-column>\n                    <p-column field=\"name\" header=\"Name\" style=\"width:20%\">\n                        <template #editor=\"{ data, field }\">\n                            <p-inputtext v-model=\"data[field]\"></p-inputtext>\n                        </template>\n                    </p-column>\n                    <p-column field=\"inventoryStatus\" header=\"Status\" style=\"width:20%\">\n                        <template #editor=\"{ data, field }\">\n                            <p-dropdown v-model=\"data[field]\" :options=\"statuses\" option-label=\"label\" option-value=\"value\" placeholder=\"Select a Status\">\n                                <template #option=\"slotProps\">\n                                    <span :class=\"'product-badge status-' + slotProps.option.value.toLowerCase()\">{{slotProps.option.label}}</span>\n                                </template>\n                            </p-dropdown>\n                        </template>\n                        <template #body=\"slotProps\">\n                            {{getStatusLabel(slotProps.data.inventoryStatus)}}\n                        </template>\n                    </p-column>\n                    <p-column field=\"price\" header=\"Price\" style=\"width:20%\">\n                        <template #editor=\"{ data, field }\">\n                            <p-inputtext v-model=\"data[field]\"></p-inputtext>\n                        </template>\n                    </p-column>\n                    <p-column :row-editor=\"true\" style=\"width:10%; min-width:8rem\" bodyStyle=\"text-align:center\"></p-column>\n                </p-datatable>\n            </div>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref, onMounted } = Vue;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    productService.value.getProductsSmall().then(data => products1.value = data);\n                    productService.value.getProductsSmall().then(data => products2.value = data);\n                });\n\n                const productService = ref(new ProductService());\n                const editingRows = ref([]);\n                const columns = ref([\n                    {field: 'code', header: 'Code'},\n                    {field: 'name', header: 'Name'},\n                    {field: 'quantity', header: 'Quantity'},\n                    {field: 'price', header: 'Price'}\n                ]);\n                const products1 = ref(null);\n                const products2 = ref(null);\n                const statuses = ref([\n                    {label: 'In Stock', value: 'INSTOCK'},\n                    {label: 'Low Stock', value: 'LOWSTOCK'},\n                    {label: 'Out of Stock', value: 'OUTOFSTOCK'}\n                ]);\n\n                const onCellEditComplete = (event) => {\n                    let { data, newValue, field } = event;\n\n                    switch (field) {\n                        case 'quantity':\n                        case 'price':\n                            if (isPositiveInteger(newValue))\n                                data[field] = newValue;\n                            else\n                                event.preventDefault();\n                        break;\n\n                        default:\n                            if (newValue.trim().length > 0)\n                                data[field] = newValue;\n                            else\n                                event.preventDefault();\n                        break;\n                    }\n                };\n                const isPositiveInteger = (val) => {\n                    let str = String(val);\n                    str = str.trim();\n                    if (!str) {\n                        return false;\n                    }\n                    str = str.replace(/^0+/, \"\") || \"0\";\n                    var n = Math.floor(Number(str));\n                    return n !== Infinity && String(n) === str && n >= 0;\n                };\n                const onRowEditSave = (event) => {\n                    let { newData, index } = event;\n\n                    products2.value[index] = newData;\n                };\n                const getStatusLabel = (status) => {\n                    switch(status) {\n                        case 'INSTOCK':\n                            return 'In Stock';\n\n                        case 'LOWSTOCK':\n                            return 'Low Stock';\n\n                        case 'OUTOFSTOCK':\n                            return 'Out of Stock';\n\n                        default:\n                            return 'NA';\n                    }\n                };\n\n                return { productService, editingRows, columns, products1, products2, statuses, onCellEditComplete,\n                    isPositiveInteger, onRowEditSave, getStatusLabel }\n            },\n            components: {\n                \"p-datatable\": primevue.datatable,\n                \"p-column\": primevue.column,\n                \"p-dropdown\": primevue.dropdown,\n                \"p-inputtext\": primevue.inputtext\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\\\/script>\n\n<style>\n.editable-cells-table td.p-cell-editing {\n    padding-top: 0;\n    padding-bottom: 0;\n}\n</style>`\n                }\n            }\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n\n        this.columns = [\n            {field: 'code', header: 'Code'},\n            {field: 'name', header: 'Name'},\n            {field: 'quantity', header: 'Quantity'},\n            {field: 'price', header: 'Price'}\n        ];\n    },\n    methods: {\n        onCellEditComplete(event) {\n            let { data, newValue, field } = event;\n\n            switch (field) {\n                case 'quantity':\n                case 'price':\n                    if (this.isPositiveInteger(newValue))\n                        data[field] = newValue;\n                    else\n                        event.preventDefault();\n                break;\n\n                default:\n                    if (newValue.trim().length > 0)\n                        data[field] = newValue;\n                    else\n                        event.preventDefault();\n                break;\n            }\n        },\n        isPositiveInteger(val) {\n            let str = String(val);\n            str = str.trim();\n            if (!str) {\n                return false;\n            }\n            str = str.replace(/^0+/, \"\") || \"0\";\n            var n = Math.floor(Number(str));\n            return n !== Infinity && String(n) === str && n >= 0;\n        },\n        onRowEditSave(event) {\n            let { newData, index } = event;\n\n            this.products2[index] = newData;\n        },\n        getStatusLabel(status) {\n            switch(status) {\n                case 'INSTOCK':\n                    return 'In Stock';\n\n                case 'LOWSTOCK':\n                    return 'Low Stock';\n\n                case 'OUTOFSTOCK':\n                    return 'Out of Stock';\n\n                default:\n                    return 'NA';\n            }\n        }\n    },\n    mounted() {\n        this.productService.getProductsSmall().then(data => this.products1 = data);\n        this.productService.getProductsSmall().then(data => this.products2 = data);\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n::v-deep(.editable-cells-table td.p-cell-editing) {\n    padding-top: 0;\n    padding-bottom: 0;\n}\n</style>\n"],"sourceRoot":""}]}