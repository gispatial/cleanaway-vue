{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/fileupload/FileUploadDoc.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/fileupload/FileUploadDoc.vue","mtime":1634589566266},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzb3VyY2VzOiB7CiAgICAgICAgJ29wdGlvbnMtYXBpJzogewogICAgICAgICAgdGFiTmFtZTogJ09wdGlvbnMgQVBJIFNvdXJjZScsCiAgICAgICAgICBjb250ZW50OiAiXG48dGVtcGxhdGU+XG4gICAgPGRpdj5cblx0XHQ8VG9hc3QgLz5cblxuICAgICAgICA8aDU+QWR2YW5jZWQ8L2g1PlxuICAgICAgICA8RmlsZVVwbG9hZCBuYW1lPVwiZGVtb1tdXCIgdXJsPVwiLi91cGxvYWQucGhwXCIgQHVwbG9hZD1cIm9uVXBsb2FkXCIgOm11bHRpcGxlPVwidHJ1ZVwiIGFjY2VwdD1cImltYWdlLypcIiA6bWF4RmlsZVNpemU9XCIxMDAwMDAwXCI+XG4gICAgICAgICAgICA8dGVtcGxhdGUgI2VtcHR5PlxuICAgICAgICAgICAgICAgIDxwPkRyYWcgYW5kIGRyb3AgZmlsZXMgdG8gaGVyZSB0byB1cGxvYWQuPC9wPlxuICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgPC9GaWxlVXBsb2FkPlxuXG4gICAgICAgIDxoNT5CYXNpYzwvaDU+XG4gICAgICAgIDxGaWxlVXBsb2FkIG1vZGU9XCJiYXNpY1wiIG5hbWU9XCJkZW1vW11cIiB1cmw9XCIuL3VwbG9hZC5waHBcIiBhY2NlcHQ9XCJpbWFnZS8qXCIgOm1heEZpbGVTaXplPVwiMTAwMDAwMFwiIEB1cGxvYWQ9XCJvblVwbG9hZFwiIC8+XG5cbiAgICAgICAgPGg1PkJhc2ljIHdpdGggQXV0bzwvaDU+XG4gICAgICAgIDxGaWxlVXBsb2FkIG1vZGU9XCJiYXNpY1wiIG5hbWU9XCJkZW1vW11cIiB1cmw9XCIuL3VwbG9hZC5waHBcIiBhY2NlcHQ9XCJpbWFnZS8qXCIgOm1heEZpbGVTaXplPVwiMTAwMDAwMFwiIEB1cGxvYWQ9XCJvblVwbG9hZFwiIDphdXRvPVwidHJ1ZVwiIGNob29zZUxhYmVsPVwiQnJvd3NlXCIgLz5cbiAgICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5leHBvcnQgZGVmYXVsdCB7XG4gICAgbWV0aG9kczoge1xuICAgICAgICBvblVwbG9hZCgpIHtcbiAgICAgICAgICAgIHRoaXMuJHRvYXN0LmFkZCh7c2V2ZXJpdHk6ICdpbmZvJywgc3VtbWFyeTogJ1N1Y2Nlc3MnLCBkZXRhaWw6ICdGaWxlIFVwbG9hZGVkJywgbGlmZTogMzAwMH0pO1xuICAgICAgICB9XG4gICAgfVxufVxuPFxcL3NjcmlwdD5cbiIKICAgICAgICB9LAogICAgICAgICdjb21wb3NpdGlvbi1hcGknOiB7CiAgICAgICAgICB0YWJOYW1lOiAnQ29tcG9zaXRpb24gQVBJIFNvdXJjZScsCiAgICAgICAgICBjb250ZW50OiAiXG48dGVtcGxhdGU+XG4gICAgPGRpdj5cblx0XHQ8VG9hc3QgLz5cblxuICAgICAgICA8aDU+QWR2YW5jZWQ8L2g1PlxuICAgICAgICA8RmlsZVVwbG9hZCBuYW1lPVwiZGVtb1tdXCIgdXJsPVwiLi91cGxvYWQucGhwXCIgQHVwbG9hZD1cIm9uVXBsb2FkXCIgOm11bHRpcGxlPVwidHJ1ZVwiIGFjY2VwdD1cImltYWdlLypcIiA6bWF4RmlsZVNpemU9XCIxMDAwMDAwXCI+XG4gICAgICAgICAgICA8dGVtcGxhdGUgI2VtcHR5PlxuICAgICAgICAgICAgICAgIDxwPkRyYWcgYW5kIGRyb3AgZmlsZXMgdG8gaGVyZSB0byB1cGxvYWQuPC9wPlxuICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgPC9GaWxlVXBsb2FkPlxuXG4gICAgICAgIDxoNT5CYXNpYzwvaDU+XG4gICAgICAgIDxGaWxlVXBsb2FkIG1vZGU9XCJiYXNpY1wiIG5hbWU9XCJkZW1vW11cIiB1cmw9XCIuL3VwbG9hZC5waHBcIiBhY2NlcHQ9XCJpbWFnZS8qXCIgOm1heEZpbGVTaXplPVwiMTAwMDAwMFwiIEB1cGxvYWQ9XCJvblVwbG9hZFwiIC8+XG5cbiAgICAgICAgPGg1PkJhc2ljIHdpdGggQXV0bzwvaDU+XG4gICAgICAgIDxGaWxlVXBsb2FkIG1vZGU9XCJiYXNpY1wiIG5hbWU9XCJkZW1vW11cIiB1cmw9XCIuL3VwbG9hZC5waHBcIiBhY2NlcHQ9XCJpbWFnZS8qXCIgOm1heEZpbGVTaXplPVwiMTAwMDAwMFwiIEB1cGxvYWQ9XCJvblVwbG9hZFwiIDphdXRvPVwidHJ1ZVwiIGNob29zZUxhYmVsPVwiQnJvd3NlXCIgLz5cbiAgICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQgeyByZWYgfSBmcm9tICd2dWUnO1xuaW1wb3J0IHsgdXNlVG9hc3QgfSBmcm9tICdwcmltZXZ1ZS91c2V0b2FzdCc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcblx0c2V0dXAoKSB7XG5cdFx0Y29uc3QgdG9hc3QgPSB1c2VUb2FzdCgpO1xuXHRcdGNvbnN0IG9uVXBsb2FkID0gKCkgPT4ge1xuICAgICAgICAgICAgdG9hc3QuYWRkKHtzZXZlcml0eTogJ2luZm8nLCBzdW1tYXJ5OiAnU3VjY2VzcycsIGRldGFpbDogJ0ZpbGUgVXBsb2FkZWQnLCBsaWZlOiAzMDAwfSk7XG4gICAgICAgIH1cblxuXHRcdHJldHVybiB7IG9uVXBsb2FkIH07XG5cdH1cbn1cbjxcXC9zY3JpcHQ+XG4iCiAgICAgICAgfSwKICAgICAgICAnYnJvd3Nlci1zb3VyY2UnOiB7CiAgICAgICAgICB0YWJOYW1lOiAnQnJvd3NlciBTb3VyY2UnLAogICAgICAgICAgaW1wb3J0czogIjxzY3JpcHQgc3JjPVwiaHR0cHM6Ly91bnBrZy5jb20vcHJpbWV2dWVAXjMvZmlsZXVwbG9hZC9maWxldXBsb2FkLm1pbi5qc1wiPjxcXC9zY3JpcHQ+XG5cdFx0XHQ8c2NyaXB0IHNyYz1cImh0dHBzOi8vdW5wa2cuY29tL3ByaW1ldnVlQF4zL3RvYXN0L3RvYXN0Lm1pbi5qc1wiPjxcXC9zY3JpcHQ+XG5cdFx0XHQ8c2NyaXB0IHNyYz1cImh0dHBzOi8vdW5wa2cuY29tL3ByaW1ldnVlQF4zL3RvYXN0c2VydmljZS90b2FzdHNlcnZpY2UubWluLmpzXCI+PFxcL3NjcmlwdD4iLAogICAgICAgICAgY29udGVudDogIjxkaXYgaWQ9XCJhcHBcIj5cblx0XHRcdFx0PHAtdG9hc3Q+PC9wLXRvYXN0PlxuXG5cdFx0XHRcdDxoNT5BZHZhbmNlZDwvaDU+XG5cdFx0XHRcdDxwLWZpbGV1cGxvYWQgbmFtZT1cImRlbW9bXVwiIHVybD1cIi4vdXBsb2FkLnBocFwiIEB1cGxvYWQ9XCJvblVwbG9hZFwiIDptdWx0aXBsZT1cInRydWVcIiBhY2NlcHQ9XCJpbWFnZS8qXCIgOm1heC1maWxlLXNpemU9XCIxMDAwMDAwXCI+XG5cdFx0XHRcdFx0PHRlbXBsYXRlICNlbXB0eT5cblx0XHRcdFx0XHRcdDxwPkRyYWcgYW5kIGRyb3AgZmlsZXMgdG8gaGVyZSB0byB1cGxvYWQuPC9wPlxuXHRcdFx0XHRcdDwvdGVtcGxhdGU+XG5cdFx0XHRcdDwvcC1maWxldXBsb2FkPlxuXG5cdFx0XHRcdDxoNT5CYXNpYzwvaDU+XG5cdFx0XHRcdDxwLWZpbGV1cGxvYWQgbW9kZT1cImJhc2ljXCIgbmFtZT1cImRlbW9bXVwiIHVybD1cIi4vdXBsb2FkLnBocFwiIGFjY2VwdD1cImltYWdlLypcIiA6bWF4LWZpbGUtc2l6ZT1cIjEwMDAwMDBcIiBAdXBsb2FkPVwib25VcGxvYWRcIj48L3AtZmlsZXVwbG9hZD5cblxuXHRcdFx0XHQ8aDU+QmFzaWMgd2l0aCBBdXRvPC9oNT5cblx0XHRcdFx0PHAtZmlsZXVwbG9hZCBtb2RlPVwiYmFzaWNcIiBuYW1lPVwiZGVtb1tdXCIgdXJsPVwiLi91cGxvYWQucGhwXCIgYWNjZXB0PVwiaW1hZ2UvKlwiIDptYXgtZmlsZS1zaXplPVwiMTAwMDAwMFwiIEB1cGxvYWQ9XCJvblVwbG9hZFwiIDphdXRvPVwidHJ1ZVwiIGNob29zZS1sYWJlbD1cIkJyb3dzZVwiPjwvcC1maWxldXBsb2FkPlxuXHRcdFx0PC9kaXY+XG5cblx0XHRcdDxzY3JpcHQgdHlwZT1cIm1vZHVsZVwiPlxuXHRcdFx0Y29uc3QgeyBjcmVhdGVBcHAsIHJlZiB9ID0gVnVlO1xuXHRcdFx0Y29uc3QgeyB1c2VUb2FzdCB9ID0gcHJpbWV2dWUudXNldG9hc3Q7XG5cblx0XHRcdGNvbnN0IEFwcCA9IHtcblx0XHRcdFx0c2V0dXAoKSB7XG5cdFx0XHRcdFx0Y29uc3QgdG9hc3QgPSB1c2VUb2FzdCgpO1xuXHRcdFx0XHRcdGNvbnN0IG9uVXBsb2FkID0gKCkgPT4ge1xuXHRcdFx0XHRcdFx0dG9hc3QuYWRkKHtzZXZlcml0eTogJ2luZm8nLCBzdW1tYXJ5OiAnU3VjY2VzcycsIGRldGFpbDogJ0ZpbGUgVXBsb2FkZWQnLCBsaWZlOiAzMDAwfSk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0cmV0dXJuIHsgb25VcGxvYWQgfTtcblx0XHRcdFx0fSxcblx0XHRcdFx0Y29tcG9uZW50czoge1xuXHRcdFx0XHRcdFwicC1maWxldXBsb2FkXCI6IHByaW1ldnVlLmZpbGV1cGxvYWQsXG5cdFx0XHRcdFx0XCJwLXRvYXN0XCI6IHByaW1ldnVlLnRvYXN0XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRcdGNyZWF0ZUFwcChBcHApXG5cdFx0XHRcdC51c2UocHJpbWV2dWUuY29uZmlnLmRlZmF1bHQpXG5cdFx0XHRcdC51c2UocHJpbWV2dWUudG9hc3RzZXJ2aWNlKVxuXHRcdFx0XHQubW91bnQoXCIjYXBwXCIpO1xuXHRcdFx0PFxcL3NjcmlwdD5cbiIKICAgICAgICB9CiAgICAgIH0KICAgIH07CiAgfQp9Ow=="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/fileupload/FileUploadDoc.vue"],"names":[],"mappings":"AAwWA,eAAe;AACd,EAAA,IADc,kBACP;AACN,WAAO;AACN,MAAA,OAAO,EAAE;AACR,uBAAe;AACd,UAAA,OAAO,EAAE,oBADK;AAEd,UAAA,OAAO;AAFO,SADP;AAkCR,2BAAmB;AAClB,UAAA,OAAO,EAAE,wBADS;AAElB,UAAA,OAAO;AAFW,SAlCX;AAyER,0BAAkB;AACjB,UAAA,OAAO,EAAE,gBADQ;AAEjB,UAAA,OAAO,gRAFU;AAKjB,UAAA,OAAO;AALU;AAzEV;AADH,KAAP;AA4HD;AA9Hc,CAAf","sourcesContent":["<template>\n\t<AppDoc name=\"FileUploadDemo\" :sources=\"sources\" github=\"fileupload/FileUploadDemo.vue\">\n\t\t<h5>Import</h5>\n<pre v-code.script><code>\nimport FileUpload from 'primevue/fileupload';\n\n</code></pre>\n\n\t\t<h5>Import via CDN</h5>\n<pre v-code><code>\n&lt;script src=\"https://unpkg.com/primevue@^3/core/core.js\"&gt;&lt;/script&gt;\n&lt;script src=\"https://unpkg.com/primevue@^3/fileupload/fileupload.min.js\"&gt;&lt;/script&gt;\n\n</code></pre>\n\n\t\t<h5>Getting Started</h5>\n\t\t<p>FileUpload requires a <i>url</i> property as the upload target and a <i>name</i> to identify the files at backend.</p>\n<pre v-code><code>\n&lt;FileUpload name=\"demo[]\" url=\"./upload\" /&gt;\n\n</code></pre>\n\n\t\t<h5>Multiple Uploads</h5>\n\t\t<p>Only one file can be selected at a time by default, to allow selecting multiple files at once enable <i>multiple</i> option.</p>\n<pre v-code><code>\n&lt;FileUpload name=\"demo[]\" url=\"./upload\" :multiple=\"true\" /&gt;\n\n</code></pre>\n\n\t\t<h5>Basic UI</h5>\n\t\t<p>FileUpload basic mode provides a simpler UI as an alternative to advanced mode.</p>\n<pre v-code><code>\n&lt;FileUpload mode=\"basic\" name=\"demo[]\" url=\"./upload\" /&gt;\n\n</code></pre>\n\n\t\t<h5>DragDrop</h5>\n\t\t<p>File selection can also be done by dragging and dropping from the filesystem to the content section of the component.</p>\n\n\t\t<h5>Auto Uploads</h5>\n\t\t<p>When <i>auto</i> property is enabled, upload begins as soon as file selection is completed or a file is dropped on the drop area.</p>\n<pre v-code><code>\n&lt;FileUpload mode=\"basic\" name=\"demo[]\" url=\"./upload\" :auto=\"true\" /&gt;\n\n</code></pre>\n\n\t\t<h5>File Types</h5>\n\t\t<p>Selectable file types can be restricted with <i>accept</i> property, example below only allows images to be uploaded. Read more about other possible values <a href=\"https://www.w3schools.com/tags/att_input_accept.asp\"> here</a>.</p>\n<pre v-code><code>\n&lt;FileUpload mode=\"basic\" name=\"demo[]\" url=\"./upload\" accept=\"image/*\" /&gt;\n\n</code></pre>\n\n\t\t<h5>File Size and File Limit</h5>\n\t\t<p>Maximium file size can be restricted using <i>maxFileSize</i> property defined in bytes. Similarly <i>fileLimit</i> is available to restrict the number of files to be uploaded.</p>\n<pre v-code><code>\n&lt;FileUpload name=\"demo[]\" url=\"./upload\" :maxFileSize=\"1000000\" :fileLimit=\"3\" /&gt;\n\n</code></pre>\n\n\t\t<p>In order to customize the default messages use <i>invalidFileSizeMessage</i> and <i>invalidFileLimitMessage</i> options where &#123;0&#125; placeholder refers to the filename and &#123;1&#125; the file size.</p>\n\t\t<ul>\n\t\t\t<li>\n\t\t\t\tinvalidFileSizeMessage: '&#123;0&#125;: Invalid file size, file size should be smaller than &#123;1&#125;.'\n\t\t\t</li>\n            <li>\n\t\t\t\tinvalidFileLimitMessage: 'Maximum number of files exceeded, limit is &#123;0&#125; at most.'\n\t\t\t</li>\n\t\t</ul>\n\n\t\t<h5>Request Customization</h5>\n\t\t<p>XHR request to upload the files can be customized using the before-upload callback that passes the xhr instance and FormData object as event parameters.</p>\n\n        <h5>Custom Upload</h5>\n\t\t<p>Uploading implementation can be overridden by enabling <i>customMode</i> property and defining a custom upload handler event.</p>\n<pre v-code><code>\n&lt;FileUpload name=\"demo[]\" :customUpload=\"true\" @uploader=\"myUploader\" /&gt;\n\n</code></pre>\n\n<pre v-code.script><code>\nmyUploader(event) {\n    //event.files == files to upload\n}\n\n</code></pre>\n\n        <h5>Empty Template</h5>\n        <p>When there is no file selected, you may use the empty slot to display content.</p>\n<pre v-code><code>\n&lt;FileUpload name=\"demo[]\" url=\"./upload\"&gt;\n    &lt;template #empty&gt;\n        &lt;p&gt;Drag and drop files to here to upload.&lt;/p&gt;\n    &lt;/template&gt;\n&lt;/FileUpload&gt;\n\n</code></pre>\n\n\t\t<h5>Properties</h5>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Default</th>\n                        <th>Description</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>name</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Name of the request parameter to identify the files at backend.</td>\n                    </tr>\n                    <tr>\n                        <td>url</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Remote url to upload the files.</td>\n                    </tr>\n                    <tr>\n                        <td>mode</td>\n                        <td>string</td>\n                        <td>advanced</td>\n                        <td>Defines the UI of the component, possible values are \"advanced\" and \"basic\".</td>\n                    </tr>\n                    <tr>\n                        <td>multiple</td>\n                        <td>boolean</td>\n                        <td>false</td>\n                        <td>Used to select multiple files at once from file dialog.</td>\n                    </tr>\n                    <tr>\n                        <td>accept</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Pattern to restrict the allowed file types such as \"image/*\".</td>\n                    </tr>\n                    <tr>\n                        <td>disabled</td>\n                        <td>boolean</td>\n                        <td>false</td>\n                        <td>Disables the upload functionality.</td>\n                    </tr>\n                    <tr>\n                        <td>auto</td>\n                        <td>boolean</td>\n                        <td>false</td>\n                        <td>When enabled, upload begins automatically after selection is completed.</td>\n                    </tr>\n                    <tr>\n                        <td>maxFileSize</td>\n                        <td>number</td>\n                        <td>null</td>\n                        <td>Maximum file size allowed in bytes.</td>\n                    </tr>\n                    <tr>\n                        <td>invalidFileSizeMessage</td>\n                        <td>string</td>\n                        <td>\"&#123;0&#125;: Invalid file size, file size should be smaller than &#123;1&#125;.\"</td>\n                        <td>Message of the invalid fize size.</td>\n                    </tr>\n                    <tr>\n                        <td>invalidFileLimitMessage</td>\n                        <td>string</td>\n                        <td>Maximum number of files exceeded, limit is &#123;0&#125; at most.</td>\n                        <td>Message to display when number of files to be uploaded exceeeds the limit.</td>\n                    </tr>\n                    <tr>\n                        <td>fileLimit</td>\n                        <td>number</td>\n                        <td>null</td>\n                        <td>Maximum number of files that can be uploaded.</td>\n                    </tr>\n                    <tr>\n                        <td>withCredentials</td>\n                        <td>boolean</td>\n                        <td>false</td>\n                        <td>Cross-site Access-Control requests should be made using credentials such as cookies, authorization headers or TLS client certificates.</td>\n                    </tr>\n                    <tr>\n                        <td>previewWidth</td>\n                        <td>number</td>\n                        <td>50</td>\n                        <td>Width of the image thumbnail in pixels.</td>\n                    </tr>\n                    <tr>\n                        <td>chooseLabel</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Label of the choose button. Defaults to PrimeVue <router-link to=\"/locale\">Locale</router-link> configuration.</td>\n                    </tr>\n                    <tr>\n                        <td>uploadLabel</td>\n                        <td>string</td>\n                        <td>Upload</td>\n                        <td>Label of the upload button. Defaults to PrimeVue <router-link to=\"/locale\">Locale</router-link> configuration.</td>\n                    </tr>\n                    <tr>\n                        <td>cancelLabel</td>\n                        <td>string</td>\n                        <td>Cancel</td>\n                        <td>Label of the cancel button. Defaults to PrimeVue <router-link to=\"/locale\">Locale</router-link> configuration.</td>\n                    </tr>\n                    <tr>\n                        <td>customUpload</td>\n                        <td>boolean</td>\n                        <td>false</td>\n                        <td>Whether to use the default upload or a manual implementation defined in uploadHandler callback. Defaults to PrimeVue <router-link to=\"/locale\">Locale</router-link> configuration.</td>\n                    </tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>showUploadButton</td>\n\t\t\t\t\t\t<td>boolean</td>\n\t\t\t\t\t\t<td>true</td>\n\t\t\t\t\t\t<td>Whether to show the upload button.</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>showCancelButton</td>\n\t\t\t\t\t\t<td>boolean</td>\n\t\t\t\t\t\t<td>true</td>\n\t\t\t\t\t\t<td>Whether to show the cancel button.</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>style</td>\n\t\t\t\t\t\t<td>any</td>\n\t\t\t\t\t\t<td>null</td>\n\t\t\t\t\t\t<td>Inline style of the component.</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>class</td>\n\t\t\t\t\t\t<td>string</td>\n\t\t\t\t\t\t<td>null</td>\n\t\t\t\t\t\t<td>Style class of the component.</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Events</h5>\n\t\t<div classe=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t<th>Parameters</th>\n\t\t\t\t\t\t<th>Description</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>before-upload</td>\n\t\t\t\t\t\t<td>event.xhr: XmlHttpRequest instance. <br/>\n\t\t\t\t\t\t\tevent.formData: FormData object.</td>\n\t\t\t\t\t\t<td>Callback to invoke before file upload begins to customize the request\n\t\t\t\t\t\t\tsuch as post parameters before the files.</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>before-send</td>\n\t\t\t\t\t\t<td>event.xhr: XmlHttpRequest instance. <br/>\n\t\t\t\t\t\t\tevent.formData: FormData object.</td>\n\t\t\t\t\t\t<td>Callback to invoke before file send begins to customize the request\n\t\t\t\t\t\t\tsuch as adding headers.</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>upload</td>\n\t\t\t\t\t\t<td>event.xhr: XmlHttpRequest instance.<br />\n\t\t\t\t\t\t\tevent.files: Uploaded files.</td>\n\t\t\t\t\t\t<td>Callback to invoke when file upload is complete.</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>error</td>\n\t\t\t\t\t\t<td>event.xhr: XmlHttpRequest instance.<br />\n\t\t\t\t\t\t\tevent.files: Files that are not uploaded.</td>\n\t\t\t\t\t\t<td>Callback to invoke if file upload fails.</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>clear</td>\n\t\t\t\t\t\t<td>-.</td>\n\t\t\t\t\t\t<td>Callback to invoke when files in queue are removed without uploading.</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>select</td>\n\t\t\t\t\t\t<td>event.originalEvent: Original browser event. <br />\n\t\t\t\t\t\t\tevent.files: List of selected files.</td>\n\t\t\t\t\t\t<td>Callback to invoke when files are selected.</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>progress</td>\n\t\t\t\t\t\t<td>event.originalEvent: Original browser event. <br />\n\t\t\t\t\t\t\tevent.progress: Calculated progress value.</td>\n\t\t\t\t\t\t<td>Callback to invoke when files are being uploaded.</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>uploader</td>\n\t\t\t\t\t\t<td>event.files: List of selected files.</td>\n\t\t\t\t\t\t<td>Callback to invoke to implement a custom upload.</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>remove</td>\n\t\t\t\t\t\t<td>event.file: Removed file. <br />\n\t\t\t\t\t\t\tevent.files: Remaining files to be uploaded.</td>\n\t\t\t\t\t\t<td>Callback to invoke when a singe file is removed from the list.</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Slots</h5>\n\t\t<div class=\"doc-tablewrapper\">\n            <table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Parameters</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>empty</td>\n                        <td>-</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n        </div>\n\n\t\t<h5>Styling</h5>\n\t\t<p>Following is the list of structural style classes, for theming classes visit <router-link to=\"/theming\">theming</router-link> page.</p>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t<th>Element</th>\n\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>p-fileupload</td>\n\t\t\t\t\t<td>Container element.</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>p-fileupload-buttonbar</td>\n\t\t\t\t\t<td>Header containing the buttons.</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>p-fileupload-content</td>\n\t\t\t\t\t<td>Content section.</td>\n\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Dependencies</h5>\n\t\t<p>None.</p>\n\t</AppDoc>\n</template>\n\n<script>\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tsources: {\n\t\t\t\t'options-api': {\n\t\t\t\t\ttabName: 'Options API Source',\n\t\t\t\t\tcontent: `\n<template>\n    <div>\n\t\t<Toast />\n\n        <h5>Advanced</h5>\n        <FileUpload name=\"demo[]\" url=\"./upload.php\" @upload=\"onUpload\" :multiple=\"true\" accept=\"image/*\" :maxFileSize=\"1000000\">\n            <template #empty>\n                <p>Drag and drop files to here to upload.</p>\n            </template>\n        </FileUpload>\n\n        <h5>Basic</h5>\n        <FileUpload mode=\"basic\" name=\"demo[]\" url=\"./upload.php\" accept=\"image/*\" :maxFileSize=\"1000000\" @upload=\"onUpload\" />\n\n        <h5>Basic with Auto</h5>\n        <FileUpload mode=\"basic\" name=\"demo[]\" url=\"./upload.php\" accept=\"image/*\" :maxFileSize=\"1000000\" @upload=\"onUpload\" :auto=\"true\" chooseLabel=\"Browse\" />\n    </div>\n</template>\n\n<script>\nexport default {\n    methods: {\n        onUpload() {\n            this.$toast.add({severity: 'info', summary: 'Success', detail: 'File Uploaded', life: 3000});\n        }\n    }\n}\n<\\\\/script>\n`\n\t\t\t\t},\n\t\t\t\t'composition-api': {\n\t\t\t\t\ttabName: 'Composition API Source',\n\t\t\t\t\tcontent: `\n<template>\n    <div>\n\t\t<Toast />\n\n        <h5>Advanced</h5>\n        <FileUpload name=\"demo[]\" url=\"./upload.php\" @upload=\"onUpload\" :multiple=\"true\" accept=\"image/*\" :maxFileSize=\"1000000\">\n            <template #empty>\n                <p>Drag and drop files to here to upload.</p>\n            </template>\n        </FileUpload>\n\n        <h5>Basic</h5>\n        <FileUpload mode=\"basic\" name=\"demo[]\" url=\"./upload.php\" accept=\"image/*\" :maxFileSize=\"1000000\" @upload=\"onUpload\" />\n\n        <h5>Basic with Auto</h5>\n        <FileUpload mode=\"basic\" name=\"demo[]\" url=\"./upload.php\" accept=\"image/*\" :maxFileSize=\"1000000\" @upload=\"onUpload\" :auto=\"true\" chooseLabel=\"Browse\" />\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport { useToast } from 'primevue/usetoast';\n\nexport default {\n\tsetup() {\n\t\tconst toast = useToast();\n\t\tconst onUpload = () => {\n            toast.add({severity: 'info', summary: 'Success', detail: 'File Uploaded', life: 3000});\n        }\n\n\t\treturn { onUpload };\n\t}\n}\n<\\\\/script>\n`\n\t\t\t\t},\n\t\t\t\t'browser-source': {\n\t\t\t\t\ttabName: 'Browser Source',\n\t\t\t\t\timports: `<script src=\"https://unpkg.com/primevue@^3/fileupload/fileupload.min.js\"><\\\\/script>\n\t\t\t<script src=\"https://unpkg.com/primevue@^3/toast/toast.min.js\"><\\\\/script>\n\t\t\t<script src=\"https://unpkg.com/primevue@^3/toastservice/toastservice.min.js\"><\\\\/script>`,\n\t\t\t\t\tcontent: `<div id=\"app\">\n\t\t\t\t<p-toast></p-toast>\n\n\t\t\t\t<h5>Advanced</h5>\n\t\t\t\t<p-fileupload name=\"demo[]\" url=\"./upload.php\" @upload=\"onUpload\" :multiple=\"true\" accept=\"image/*\" :max-file-size=\"1000000\">\n\t\t\t\t\t<template #empty>\n\t\t\t\t\t\t<p>Drag and drop files to here to upload.</p>\n\t\t\t\t\t</template>\n\t\t\t\t</p-fileupload>\n\n\t\t\t\t<h5>Basic</h5>\n\t\t\t\t<p-fileupload mode=\"basic\" name=\"demo[]\" url=\"./upload.php\" accept=\"image/*\" :max-file-size=\"1000000\" @upload=\"onUpload\"></p-fileupload>\n\n\t\t\t\t<h5>Basic with Auto</h5>\n\t\t\t\t<p-fileupload mode=\"basic\" name=\"demo[]\" url=\"./upload.php\" accept=\"image/*\" :max-file-size=\"1000000\" @upload=\"onUpload\" :auto=\"true\" choose-label=\"Browse\"></p-fileupload>\n\t\t\t</div>\n\n\t\t\t<script type=\"module\">\n\t\t\tconst { createApp, ref } = Vue;\n\t\t\tconst { useToast } = primevue.usetoast;\n\n\t\t\tconst App = {\n\t\t\t\tsetup() {\n\t\t\t\t\tconst toast = useToast();\n\t\t\t\t\tconst onUpload = () => {\n\t\t\t\t\t\ttoast.add({severity: 'info', summary: 'Success', detail: 'File Uploaded', life: 3000});\n\t\t\t\t\t}\n\n\t\t\t\t\treturn { onUpload };\n\t\t\t\t},\n\t\t\t\tcomponents: {\n\t\t\t\t\t\"p-fileupload\": primevue.fileupload,\n\t\t\t\t\t\"p-toast\": primevue.toast\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tcreateApp(App)\n\t\t\t\t.use(primevue.config.default)\n\t\t\t\t.use(primevue.toastservice)\n\t\t\t\t.mount(\"#app\");\n\t\t\t<\\\\/script>\n`\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n</script>\n"],"sourceRoot":""}]}