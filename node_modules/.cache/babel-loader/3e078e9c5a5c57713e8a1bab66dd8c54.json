{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/validation/VuelidateFormDemo.vue?vue&type=template&id=d8126908&scoped=true","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/validation/VuelidateFormDemo.vue","mtime":1634589566293},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/validation/VuelidateFormDemo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>Vuelidate</h1>\n                <p>PrimeVue components can be easily used/integrated with <a href=\"https://vuelidate.js.org/\">Vuelidate</a>. In this example, a register panel is simulated using Vuelidate.</p>\n            </div>\n            <AppDemoActions />\n        </div>\n\n        <div class=\"content-section implementation form-demo\">\n            <Dialog v-model:visible=\"showMessage\" :breakpoints=\"{ '960px': '80vw' }\" :style=\"{ width: '30vw' }\" position=\"top\">\n                <div class=\"p-d-flex p-ai-center p-dir-col p-pt-6 p-px-3\">\n                    <i class=\"pi pi-check-circle\" :style=\"{fontSize: '5rem', color: 'var(--green-500)' }\"></i>\n                    <h5>Registration Successful!</h5>\n                    <p :style=\"{lineHeight: 1.5, textIndent: '1rem'}\">\n                        Your account is registered under name <b>{{name}}</b> ; it'll be valid next 30 days without activation. Please check <b>{{email}}</b> for activation instructions.\n                    </p>\n                </div>\n                <template #footer>\n                    <div class=\"p-d-flex p-jc-center\">\n                        <Button label=\"OK\" @click=\"toggleDialog\" class=\"p-button-text\" />\n                    </div>\n                </template>\n            </Dialog>\n\n            <div class=\"p-d-flex p-jc-center\">\n                <div class=\"card\">\n                    <h5 class=\"p-text-center\">Register</h5>\n                    <form @submit.prevent=\"handleSubmit(!v$.$invalid)\" class=\"p-fluid\">\n                        <div class=\"p-field\">\n                            <div class=\"p-float-label\">\n                                <InputText id=\"name\" v-model=\"v$.name.$model\" :class=\"{'p-invalid':v$.name.$invalid && submitted}\" />\n                                <label for=\"name\" :class=\"{'p-error':v$.name.$invalid && submitted}\">Name*</label>\n                            </div>\n                            <small v-if=\"(v$.name.$invalid && submitted) || v$.name.$pending.$response\" class=\"p-error\">{{v$.name.required.$message.replace('Value', 'Name')}}</small>\n                        </div>\n                        <div class=\"p-field\">\n                            <div class=\"p-float-label p-input-icon-right\">\n                                <i class=\"pi pi-envelope\" />\n                                <InputText id=\"email\" v-model=\"v$.email.$model\" :class=\"{'p-invalid':v$.email.$invalid && submitted}\" aria-describedby=\"email-error\"/>\n                                <label for=\"email\" :class=\"{'p-error':v$.email.$invalid && submitted}\">Email*</label>\n                            </div>\n                            <span v-if=\"v$.email.$error && submitted\">\n                                <span id=\"email-error\" v-for=\"(error, index) of v$.email.$errors\" :key=\"index\">\n                                <small class=\"p-error\">{{error.$message}}</small>\n                                </span>\n                            </span>\n                            <small v-else-if=\"(v$.email.$invalid && submitted) || v$.email.$pending.$response\" class=\"p-error\">{{v$.email.required.$message.replace('Value', 'Email')}}</small>\n                        </div>\n                        <div class=\"p-field\">\n                            <div class=\"p-float-label\">\n                                <Password id=\"password\" v-model=\"v$.password.$model\" :class=\"{'p-invalid':v$.password.$invalid && submitted}\" toggleMask>\n                                    <template #header>\n                                        <h6>Pick a password</h6>\n                                    </template>\n                                    <template #footer=\"sp\">\n                                        {{sp.level}}\n                                        <Divider />\n                                        <p class=\"p-mt-2\">Suggestions</p>\n                                        <ul class=\"p-pl-2 p-ml-2 p-mt-0\" style=\"line-height: 1.5\">\n                                            <li>At least one lowercase</li>\n                                            <li>At least one uppercase</li>\n                                            <li>At least one numeric</li>\n                                            <li>Minimum 8 characters</li>\n                                        </ul>\n                                    </template>\n                                </Password>\n                                <label for=\"password\" :class=\"{'p-error':v$.password.$invalid && submitted}\">Password*</label>\n                            </div>\n                            <small v-if=\"(v$.password.$invalid && submitted) || v$.password.$pending.$response\" class=\"p-error\">{{v$.password.required.$message.replace('Value', 'Password')}}</small>\n                        </div>\n                        <div class=\"p-field\">\n                            <div class=\"p-float-label\">\n                                <Calendar id=\"date\" v-model=\"date\" :showIcon=\"true\" />\n                                <label for=\"date\">Birthday</label>\n                            </div>\n                        </div>\n                        <div class=\"p-field\">\n                            <div class=\"p-float-label\">\n                                <Dropdown id=\"country\" v-model=\"country\" :options=\"countries\" optionLabel=\"name\" />\n                                <label for=\"country\">Country</label>\n                            </div>\n                        </div>\n                        <div class=\"p-field-checkbox\">\n                            <Checkbox id=\"accept\" name=\"accept\" value=\"Accept\" v-model=\"v$.accept.$model\" :class=\"{'p-invalid':v$.accept.$invalid && submitted}\" />\n                            <label for=\"accept\" :class=\"{'p-error': v$.accept.$invalid && submitted}\">I agree to the terms and conditions*</label>\n                        </div>\n                        <Button type=\"submit\" label=\"Submit\" class=\"p-mt-2\" />\n                    </form>\n                </div>\n            </div>\n        </div>\n\n        <AppDoc name=\"VuelidateFormDemo\" :sources=\"sources\" :service=\"['CountryService']\" :data=\"['countries']\" github=\"validation/VuelidateFormDemo.vue\"\n            :dependencies=\"{'@vuelidate/core': '^2.0.0-alpha.14', '@vuelidate/validators': '^2.0.0-alpha.12'}\"/>\n\n    </div>\n</template>\n\n<script>\nimport { email, required } from \"@vuelidate/validators\";\nimport { useVuelidate } from \"@vuelidate/core\";\nimport CountryService from '../../service/CountryService';\n\nexport default {\n    setup: () => ({ v$: useVuelidate() }),\n    data() {\n        return {\n            name: '',\n            email: '',\n            password: '',\n            date: null,\n            country: null,\n            accept: null,\n            submitted: false,\n            countries: null,\n            showMessage: false,\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div class=\"form-demo\">\n        <Dialog v-model:visible=\"showMessage\" :breakpoints=\"{ '960px': '80vw' }\" :style=\"{ width: '30vw' }\" position=\"top\">\n            <div class=\"p-d-flex p-ai-center p-dir-col p-pt-6 p-px-3\">\n                <i class=\"pi pi-check-circle\" :style=\"{fontSize: '5rem', color: 'var(--green-500)' }\"></i>\n                <h5>Registration Successful!</h5>\n                <p :style=\"{lineHeight: 1.5, textIndent: '1rem'}\">\n                    Your account is registered under name <b>{{name}}</b> ; it'll be valid next 30 days without activation. Please check <b>{{email}}</b> for activation instructions.\n                </p>\n            </div>\n            <template #footer>\n                <div class=\"p-d-flex p-jc-center\">\n                    <Button label=\"OK\" @click=\"toggleDialog\" class=\"p-button-text\" />\n                </div>\n            </template>\n        </Dialog>\n\n        <div class=\"p-d-flex p-jc-center\">\n            <div class=\"card\">\n                <h5 class=\"p-text-center\">Register</h5>\n                <form @submit.prevent=\"handleSubmit(!v$.$invalid)\" class=\"p-fluid\">\n                    <div class=\"p-field\">\n                        <div class=\"p-float-label\">\n                            <InputText id=\"name\" v-model=\"v$.name.$model\" :class=\"{'p-invalid':v$.name.$invalid && submitted}\" />\n                            <label for=\"name\" :class=\"{'p-error':v$.name.$invalid && submitted}\">Name*</label>\n                        </div>\n                        <small v-if=\"(v$.name.$invalid && submitted) || v$.name.$pending.$response\" class=\"p-error\">{{v$.name.required.$message.replace('Value', 'Name')}}</small>\n                    </div>\n                    <div class=\"p-field\">\n                        <div class=\"p-float-label p-input-icon-right\">\n                            <i class=\"pi pi-envelope\" />\n                            <InputText id=\"email\" v-model=\"v$.email.$model\" :class=\"{'p-invalid':v$.email.$invalid && submitted}\" aria-describedby=\"email-error\"/>\n                            <label for=\"email\" :class=\"{'p-error':v$.email.$invalid && submitted}\">Email*</label>\n                        </div>\n                        <span v-if=\"v$.email.$error && submitted\">\n                            <span id=\"email-error\" v-for=\"(error, index) of v$.email.$errors\" :key=\"index\">\n                            <small class=\"p-error\">{{error.$message}}</small>\n                            </span>\n                        </span>\n                        <small v-else-if=\"(v$.email.$invalid && submitted) || v$.email.$pending.$response\" class=\"p-error\">{{v$.email.required.$message.replace('Value', 'Email')}}</small>\n                    </div>\n                    <div class=\"p-field\">\n                        <div class=\"p-float-label\">\n                            <Password id=\"password\" v-model=\"v$.password.$model\" :class=\"{'p-invalid':v$.password.$invalid && submitted}\" toggleMask>\n                                <template #header>\n                                    <h6>Pick a password</h6>\n                                </template>\n                                <template #footer=\"sp\">\n                                    {{sp.level}}\n                                    <Divider />\n                                    <p class=\"p-mt-2\">Suggestions</p>\n                                    <ul class=\"p-pl-2 p-ml-2 p-mt-0\" style=\"line-height: 1.5\">\n                                        <li>At least one lowercase</li>\n                                        <li>At least one uppercase</li>\n                                        <li>At least one numeric</li>\n                                        <li>Minimum 8 characters</li>\n                                    </ul>\n                                </template>\n                            </Password>\n                            <label for=\"password\" :class=\"{'p-error':v$.password.$invalid && submitted}\">Password*</label>\n                        </div>\n                        <small v-if=\"(v$.password.$invalid && submitted) || v$.password.$pending.$response\" class=\"p-error\">{{v$.password.required.$message.replace('Value', 'Password')}}</small>\n                    </div>\n                    <div class=\"p-field\">\n                        <div class=\"p-float-label\">\n                            <Calendar id=\"date\" v-model=\"date\" :showIcon=\"true\" />\n                            <label for=\"date\">Birthday</label>\n                        </div>\n                    </div>\n                    <div class=\"p-field\">\n                        <div class=\"p-float-label\">\n                            <Dropdown id=\"country\" v-model=\"country\" :options=\"countries\" optionLabel=\"name\" />\n                            <label for=\"country\">Country</label>\n                        </div>\n                    </div>\n                    <div class=\"p-field-checkbox\">\n                        <Checkbox id=\"accept\" name=\"accept\" value=\"Accept\" v-model=\"v$.accept.$model\" :class=\"{'p-invalid':v$.accept.$invalid && submitted}\" />\n                        <label for=\"accept\" :class=\"{'p-error': v$.accept.$invalid && submitted}\">I agree to the terms and conditions*</label>\n                    </div>\n                    <Button type=\"submit\" label=\"Submit\" class=\"p-mt-2\" />\n                </form>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { email, required } from \"@vuelidate/validators\";\nimport { useVuelidate } from \"@vuelidate/core\";\nimport CountryService from './service/CountryService';\n\nexport default {\n    setup: () => ({ v$: useVuelidate() }),\n    data() {\n        return {\n            name: '',\n            email: '',\n            password: '',\n            date: null,\n            country: null,\n            accept: null,\n            submitted: false,\n            countries: null,\n            showMessage: false\n        }\n    },\n    countryService: null,\n    validations() {\n        return {\n            name: {\n                required\n            },\n            email: {\n                required,\n                email\n            },\n            password: {\n                required\n            },\n            accept: {\n                required\n            }\n        }\n    },\n    created() {\n        this.countryService = new CountryService();\n    },\n    mounted() {\n        this.countryService.getCountries().then(data => this.countries = data);\n    },\n    methods: {\n        handleSubmit(isFormValid) {\n            this.submitted = true;\n\n            if (!isFormValid) {\n                return;\n            }\n\n            this.toggleDialog();\n        },\n        toggleDialog() {\n            this.showMessage = !this.showMessage;\n        \n            if(!this.showMessage) {\n                this.resetForm();\n            }\n        },\n        resetForm() {\n            this.name = '';\n            this.email = '';\n            this.password = '';\n            this.date = null;\n            this.country = null;\n            this.accept = null;\n            this.submitted = false;\n        }\n    }\n}\n<\\\\/script>\n\n<style lang=\"scss\" scoped>\n.form-demo {\n    .card {\n        min-width: 450px;\n\n        form {\n            margin-top: 2rem;\n        }\n\n        .p-field {\n            margin-bottom: 1.5rem;\n        }\n    }\n\n    @media screen and (max-width: 960px) {\n        .card {\n            width: 80%;\n        }\n    }\n}\n\n</style>\n`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div class=\"form-demo\">\n        <Dialog v-model:visible=\"showMessage\" :breakpoints=\"{ '960px': '80vw' }\" :style=\"{ width: '30vw' }\" position=\"top\">\n            <div class=\"p-d-flex p-ai-center p-dir-col p-pt-6 p-px-3\">\n                <i class=\"pi pi-check-circle\" :style=\"{fontSize: '5rem', color: 'var(--green-500)' }\"></i>\n                <h5>Registration Successful!</h5>\n                <p :style=\"{lineHeight: 1.5, textIndent: '1rem'}\">\n                    Your account is registered under name <b>{{state.name}}</b> ; it'll be valid next 30 days without activation. Please check <b>{{state.email}}</b> for activation instructions.\n                </p>\n            </div>\n            <template #footer>\n                <div class=\"p-d-flex p-jc-center\">\n                    <Button label=\"OK\" @click=\"toggleDialog\" class=\"p-button-text\" />\n                </div>\n            </template>\n        </Dialog>\n\n        <div class=\"p-d-flex p-jc-center\">\n            <div class=\"card\">\n                <h5 class=\"p-text-center\">Register</h5>\n                <form @submit.prevent=\"handleSubmit(!v$.$invalid)\" class=\"p-fluid\">\n                    <div class=\"p-field\">\n                        <div class=\"p-float-label\">\n                            <InputText id=\"name\" v-model=\"v$.name.$model\" :class=\"{'p-invalid':v$.name.$invalid && submitted}\" />\n                            <label for=\"name\" :class=\"{'p-error':v$.name.$invalid && submitted}\">Name*</label>\n                        </div>\n                        <small v-if=\"(v$.name.$invalid && submitted) || v$.name.$pending.$response\" class=\"p-error\">{{v$.name.required.$message.replace('Value', 'Name')}}</small>\n                    </div>\n                    <div class=\"p-field\">\n                        <div class=\"p-float-label p-input-icon-right\">\n                            <i class=\"pi pi-envelope\" />\n                            <InputText id=\"email\" v-model=\"v$.email.$model\" :class=\"{'p-invalid':v$.email.$invalid && submitted}\" aria-describedby=\"email-error\"/>\n                            <label for=\"email\" :class=\"{'p-error':v$.email.$invalid && submitted}\">Email*</label>\n                        </div>\n                        <span v-if=\"v$.email.$error && submitted\">\n                            <span id=\"email-error\" v-for=\"(error, index) of v$.email.$errors\" :key=\"index\">\n                            <small class=\"p-error\">{{error.$message}}</small>\n                            </span>\n                        </span>\n                        <small v-else-if=\"(v$.email.$invalid && submitted) || v$.email.$pending.$response\" class=\"p-error\">{{v$.email.required.$message.replace('Value', 'Email')}}</small>\n                    </div>\n                    <div class=\"p-field\">\n                        <div class=\"p-float-label\">\n                            <Password id=\"password\" v-model=\"v$.password.$model\" :class=\"{'p-invalid':v$.password.$invalid && submitted}\" toggleMask>\n                                <template #header>\n                                    <h6>Pick a password</h6>\n                                </template>\n                                <template #footer=\"sp\">\n                                    {{sp.level}}\n                                    <Divider />\n                                    <p class=\"p-mt-2\">Suggestions</p>\n                                    <ul class=\"p-pl-2 p-ml-2 p-mt-0\" style=\"line-height: 1.5\">\n                                        <li>At least one lowercase</li>\n                                        <li>At least one uppercase</li>\n                                        <li>At least one numeric</li>\n                                        <li>Minimum 8 characters</li>\n                                    </ul>\n                                </template>\n                            </Password>\n                            <label for=\"password\" :class=\"{'p-error':v$.password.$invalid && submitted}\">Password*</label>\n                        </div>\n                        <small v-if=\"(v$.password.$invalid && submitted) || v$.password.$pending.$response\" class=\"p-error\">{{v$.password.required.$message.replace('Value', 'Password')}}</small>\n                    </div>\n                    <div class=\"p-field\">\n                        <div class=\"p-float-label\">\n                            <Calendar id=\"date\" v-model=\"date\" :showIcon=\"true\" />\n                            <label for=\"date\">Birthday</label>\n                        </div>\n                    </div>\n                    <div class=\"p-field\">\n                        <div class=\"p-float-label\">\n                            <Dropdown id=\"country\" v-model=\"country\" :options=\"countries\" optionLabel=\"name\" />\n                            <label for=\"country\">Country</label>\n                        </div>\n                    </div>\n                    <div class=\"p-field-checkbox\">\n                        <Checkbox id=\"accept\" name=\"accept\" value=\"Accept\" v-model=\"v$.accept.$model\" :class=\"{'p-invalid':v$.accept.$invalid && submitted}\" />\n                        <label for=\"accept\" :class=\"{'p-error': v$.accept.$invalid && submitted}\">I agree to the terms and conditions*</label>\n                    </div>\n                    <Button type=\"submit\" label=\"Submit\" class=\"p-mt-2\" />\n                </form>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { reactive, ref, onMounted } from 'vue';\nimport { email, required } from \"@vuelidate/validators\";\nimport { useVuelidate } from \"@vuelidate/core\";\nimport CountryService from './service/CountryService';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            countryService.value.getCountries().then(data => countries.value = data);\n        })\n\n        const state = reactive({\n            name: '',\n            email: '',\n            password: '',\n            accept: null\n        });\n\n        const rules = {\n            name: { required },\n            email: { required, email },\n            password: { required },\n            accept: { required }\n        };\n\n        const countryService = ref(new CountryService());\n        const submitted = ref(false);\n        const countries = ref();\n        const showMessage = ref(false);\n        const date = ref();\n        const country = ref();\n\n        const v$ = useVuelidate(rules, state);\n\n        const handleSubmit = (isFormValid) => {\n            submitted.value = true;\n\n            if (!isFormValid) {\n                return;\n            }\n\n            toggleDialog();\n        }\n        const toggleDialog = () => {\n            showMessage.value = !showMessage.value;\n        \n            if(!showMessage.value) {\n                resetForm();\n            }\n        }\n        const resetForm = () => {\n            state.name = '';\n            state.email = '';\n            state.password = '';\n            state.date = null;\n            state.country = null;\n            state.accept = null;\n            submitted.value = false;\n        }\n\n        return { state, v$, handleSubmit, toggleDialog, submitted, countries, showMessage, date, country }\n    }\n}\n<\\\\/script>\n\n<style lang=\"scss\" scoped>\n.form-demo {\n    .card {\n        min-width: 450px;\n\n        form {\n            margin-top: 2rem;\n        }\n\n        .p-field {\n            margin-bottom: 1.5rem;\n        }\n    }\n\n    @media screen and (max-width: 960px) {\n        .card {\n            width: 80%;\n        }\n    }\n}\n\n</style>\n`\n                }\n            }\n        }\n    },\n    countryService: null,\n    validations() {\n        return {\n            name: {\n                required\n            },\n            email: {\n                required,\n                email\n            },\n            password: {\n                required\n            },\n            accept: {\n                required\n            }\n        }\n    },\n    created() {\n        this.countryService = new CountryService();\n    },\n    mounted() {\n        this.countryService.getCountries().then(data => this.countries = data);\n    },\n    methods: {\n        handleSubmit(isFormValid) {\n            this.submitted = true;\n\n            if (!isFormValid) {\n                return;\n            }\n\n            this.toggleDialog();\n        },\n        toggleDialog() {\n            this.showMessage = !this.showMessage;\n\n            if(!this.showMessage) {\n                this.resetForm();\n            }\n        },\n        resetForm() {\n            this.name = '';\n            this.email = '';\n            this.password = '';\n            this.date = null;\n            this.country = null;\n            this.accept = null;\n            this.submitted = false;\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.form-demo {\n    .card {\n        min-width: 450px;\n\n        form {\n            margin-top: 2rem;\n        }\n\n        .p-field {\n            margin-bottom: 1.5rem;\n        }\n    }\n\n    @media screen and (max-width: 960px) {\n        .card {\n            width: 80%;\n        }\n    }\n}\n\n</style>"],"sourceRoot":""}]}