{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/knob/Knob.vue?vue&type=template&id=472f71a2","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/knob/Knob.vue","mtime":1634589566224},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUgfSBmcm9tICJ2dWUiOwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZGl2IiwgewogICAgY2xhc3M6ICRvcHRpb25zLmNvbnRhaW5lckNsYXNzCiAgfSwgWyhfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygic3ZnIiwgewogICAgdmlld0JveDogIjAgMCAxMDAgMTAwIiwKICAgIHdpZHRoOiAkcHJvcHMuc2l6ZSwKICAgIGhlaWdodDogJHByb3BzLnNpemUsCiAgICBvbkNsaWNrOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLm9uQ2xpY2sgJiYgJG9wdGlvbnMub25DbGljay5hcHBseSgkb3B0aW9ucywgYXJndW1lbnRzKTsKICAgIH0pLAogICAgb25Nb3VzZWRvd246IF9jYWNoZVsyXSB8fCAoX2NhY2hlWzJdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMub25Nb3VzZURvd24gJiYgJG9wdGlvbnMub25Nb3VzZURvd24uYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9KSwKICAgIG9uTW91c2V1cDogX2NhY2hlWzNdIHx8IChfY2FjaGVbM10gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5vbk1vdXNlVXAgJiYgJG9wdGlvbnMub25Nb3VzZVVwLmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSksCiAgICBvblRvdWNoc3RhcnQ6IF9jYWNoZVs0XSB8fCAoX2NhY2hlWzRdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMub25Ub3VjaFN0YXJ0ICYmICRvcHRpb25zLm9uVG91Y2hTdGFydC5hcHBseSgkb3B0aW9ucywgYXJndW1lbnRzKTsKICAgIH0pLAogICAgb25Ub3VjaGVuZDogX2NhY2hlWzVdIHx8IChfY2FjaGVbNV0gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5vblRvdWNoRW5kICYmICRvcHRpb25zLm9uVG91Y2hFbmQuYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9KQogIH0sIFtfY3JlYXRlVk5vZGUoInBhdGgiLCB7CiAgICBkOiAkb3B0aW9ucy5yYW5nZVBhdGgsCiAgICAic3Ryb2tlLXdpZHRoIjogJHByb3BzLnN0cm9rZVdpZHRoLAogICAgc3Ryb2tlOiAkcHJvcHMucmFuZ2VDb2xvciwKICAgIGNsYXNzOiAicC1rbm9iLXJhbmdlIgogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJkIiwgInN0cm9rZS13aWR0aCIsICJzdHJva2UiXSksIF9jcmVhdGVWTm9kZSgicGF0aCIsIHsKICAgIGQ6ICRvcHRpb25zLnZhbHVlUGF0aCwKICAgICJzdHJva2Utd2lkdGgiOiAkcHJvcHMuc3Ryb2tlV2lkdGgsCiAgICBzdHJva2U6ICRwcm9wcy52YWx1ZUNvbG9yLAogICAgY2xhc3M6ICJwLWtub2ItdmFsdWUiCiAgfSwgbnVsbCwgOAogIC8qIFBST1BTICovCiAgLCBbImQiLCAic3Ryb2tlLXdpZHRoIiwgInN0cm9rZSJdKSwgJHByb3BzLnNob3dWYWx1ZSA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygidGV4dCIsIHsKICAgIGtleTogMCwKICAgIHg6IDUwLAogICAgeTogNTcsCiAgICAidGV4dC1hbmNob3IiOiAibWlkZGxlIiwKICAgIGZpbGw6ICRwcm9wcy50ZXh0Q29sb3IsCiAgICBjbGFzczogInAta25vYi10ZXh0IgogIH0sIF90b0Rpc3BsYXlTdHJpbmcoJG9wdGlvbnMudmFsdWVUb0Rpc3BsYXkpLCA5CiAgLyogVEVYVCwgUFJPUFMgKi8KICAsIFsiZmlsbCJdKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSldLCA0MAogIC8qIFBST1BTLCBIWURSQVRFX0VWRU5UUyAqLwogICwgWyJ3aWR0aCIsICJoZWlnaHQiXSkpXSwgMgogIC8qIENMQVNTICovCiAgKTsKfQ=="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/components/knob/Knob.vue"],"names":[],"mappings":";;uBACI,YAAA,CAOM,KAPN,EAOM;AAPA,IAAA,KAAK,EAAE,QAAA,CAAA;AAOP,GAPN,EAA2B,E,cACvB,YAAA,CAKM,KALN,EAKM;AALD,IAAA,OAAO,EAAC,aAKP;AALsB,IAAA,KAAK,EAAE,MAAA,CAAA,IAK7B;AALoC,IAAA,MAAM,EAAE,MAAA,CAAA,IAK5C;AALmD,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,OAAA,IAAA,QAAA,CAAA,OAAA,OAAA,QAAA,YAAF;AAAA,KAAA,CAKxD;AALoE,IAAA,WAAS,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,WAAA,IAAA,QAAA,CAAA,WAAA,OAAA,QAAA,YAAF;AAAA,KAAA,CAK7E;AAL6F,IAAA,SAAO,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,SAAA,IAAA,QAAA,CAAA,SAAA,OAAA,QAAA,YAAF;AAAA,KAAA,CAKpG;AAJD,IAAA,YAAU,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,YAAA,IAAA,QAAA,CAAA,YAAA,OAAA,QAAA,YAAF;AAAA,KAAA,CAIT;AAJ0B,IAAA,UAAQ,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,UAAA,IAAA,QAAA,CAAA,UAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAIlC,GALN,E,CAEI,YAAA,CAAkG,MAAlG,EAAkG;AAA3F,IAAA,CAAC,EAAE,QAAA,CAAA,SAAwF;AAA5E,oBAAc,MAAA,CAAA,WAA8D;AAAhD,IAAA,MAAM,EAAE,MAAA,CAAA,UAAwC;AAA5B,IAAA,KAAK,EAAC;AAAsB,GAAlG,E,IAAA,E;;AAAA,I,+BAAA,C,EACA,YAAA,CAAkG,MAAlG,EAAkG;AAA3F,IAAA,CAAC,EAAE,QAAA,CAAA,SAAwF;AAA5E,oBAAc,MAAA,CAAA,WAA8D;AAAhD,IAAA,MAAM,EAAE,MAAA,CAAA,UAAwC;AAA5B,IAAA,KAAK,EAAC;AAAsB,GAAlG,E,IAAA,E;;AAAA,I,+BAAA,C,EACY,MAAA,CAAA,S,kBAAZ,YAAA,CAA2H,MAA3H,EAA2H;UAAA;AAAnG,IAAA,CAAC,EAAE,EAAgG;AAA3F,IAAA,CAAC,EAAE,EAAwF;AAApF,mBAAY,QAAwE;AAA9D,IAAA,IAAI,EAAE,MAAA,CAAA,SAAwD;AAA7C,IAAA,KAAK,EAAC;AAAuC,GAA3H,E,iBAAoG,QAAA,CAAA,c,CAApG,EAAkH;AAAA;AAAlH,IAAkH,CAAA,MAAA,CAAlH,C,sCAJJ,E;;AAAA,I,mBAAA,CADuB,EAA3B,E;;AAAA,G","sourcesContent":["<template>\n    <div :class=\"containerClass\">\n        <svg viewBox=\"0 0 100 100\" :width=\"size\" :height=\"size\" @click=\"onClick\" @mousedown=\"onMouseDown\" @mouseup=\"onMouseUp\"\n            @touchstart=\"onTouchStart\" @touchend=\"onTouchEnd\">\n            <path :d=\"rangePath\" :stroke-width=\"strokeWidth\" :stroke=\"rangeColor\" class=\"p-knob-range\"></path>\n            <path :d=\"valuePath\" :stroke-width=\"strokeWidth\" :stroke=\"valueColor\" class=\"p-knob-value\"></path>\n            <text v-if=\"showValue\" :x=\"50\" :y=\"57\" text-anchor=\"middle\" :fill=\"textColor\" class=\"p-knob-text\">{{valueToDisplay}}</text>\n        </svg>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'Knob',\n    emits: ['update:modelValue', 'change'],\n    data() {\n        return {\n            radius: 40,\n            midX: 50,\n            midY: 50,\n            minRadians: 4 * Math.PI / 3,\n            maxRadians: -Math.PI / 3\n        }\n    },\n    props: {\n        modelValue: {\n            type: Number,\n            default: null\n        },\n        size: {\n            type: Number,\n            default: 100\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        readonly: {\n            type: Boolean,\n            default: false\n        },\n        step: {\n            type: Number,\n            default: 1\n        },\n        min: {\n            type: Number,\n            default: 0\n        },\n        max: {\n            type: Number,\n            default: 100\n        },\n        valueColor: {\n            type: String,\n            default: 'var(--primary-color, Black)'\n        },\n        rangeColor: {\n            type: String,\n            default: 'var(--surface-d, LightGray)'\n        },\n        textColor: {\n            type: String,\n            default: 'var(--text-color-secondary, Black)'\n        },\n        strokeWidth: {\n            type: Number,\n            default: 14\n        },\n        showValue: {\n            type: Boolean,\n            default: true\n        },\n        valueTemplate: {\n            type: String,\n            default: \"{value}\"\n        }\n    },\n    methods: {\n        updateValue(offsetX, offsetY) {\n            let dx = offsetX - this.size / 2;\n            let dy =  this.size / 2 - offsetY;\n            let angle = Math.atan2(dy, dx);\n            let start = -Math.PI / 2 - Math.PI / 6;\n            this.updateModel(angle, start);\n        },\n        updateModel(angle, start) {\n            let mappedValue;\n            if (angle > this.maxRadians)\n                mappedValue = this.mapRange(angle, this.minRadians, this.maxRadians, this.min, this.max);\n            else if (angle < start)\n                mappedValue = this.mapRange(angle + 2 * Math.PI, this.minRadians, this.maxRadians, this.min, this.max);\n            else\n                return;\n\n            let newValue = Math.round((mappedValue - this.min) / this.step) * this.step + this.min;\n            this.$emit('update:modelValue', newValue);\n            this.$emit('change', newValue);\n        },\n        mapRange(x, inMin, inMax, outMin, outMax) {\n            return (x - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;\n        },\n        onClick(event) {\n            if (!this.disabled && !this.readonly) {\n                this.updateValue(event.offsetX, event.offsetY);\n            }\n        },\n        onMouseDown(event) {\n            if (!this.disabled && !this.readonly) {\n                window.addEventListener('mousemove', this.onMouseMove);\n                window.addEventListener('mouseup', this.onMouseUp);\n                event.preventDefault();\n            }\n        },\n        onMouseUp(event) {\n            if (!this.disabled && !this.readonly) {\n                window.removeEventListener('mousemove', this.onMouseMove);\n                window.removeEventListener('mouseup', this.onMouseUp);\n                event.preventDefault();\n            }\n        },\n        onTouchStart(event) {\n            if (!this.disabled && !this.readonly) {\n                window.addEventListener('touchmove', this.onTouchMove);\n                window.addEventListener('touchend', this.onTouchEnd);\n                event.preventDefault();\n            }\n        },\n        onTouchEnd(event) {\n            if (!this.disabled && !this.readonly) {\n                window.removeEventListener('touchmove', this.onTouchMove);\n                window.removeEventListener('touchend', this.onTouchEnd);\n                event.preventDefault();\n            }\n        },\n        onMouseMove(event) {\n            if (!this.disabled && !this.readonly) {\n                this.updateValue(event.offsetX, event.offsetY);\n                event.preventDefault();\n            }\n        },\n        onTouchMove(event) {\n            if (!this.disabled && !this.readonly && event.touches.length == 1) {\n                const rect = this.$el.getBoundingClientRect();\n                const touch = event.targetTouches.item(0);\n                const offsetX = touch.clientX - rect.left;\n                const offsetY = touch.clientY - rect.top;\n                this.updateValue(offsetX, offsetY);\n            }\n        }\n    },\n    computed: {\n        containerClass() {\n            return [\n                'p-knob p-component', {\n                    'p-disabled': this.disabled\n                }\n            ];\n        },\n        rangePath() {\n            return `M ${this.minX} ${this.minY} A ${this.radius} ${this.radius} 0 1 1 ${this.maxX} ${this.maxY}`;\n        },\n        valuePath() {\n            return `M ${this.zeroX} ${this.zeroY} A ${this.radius} ${this.radius} 0 ${this.largeArc} ${this.sweep} ${this.valueX} ${this.valueY}`;\n        },\n        zeroRadians() {\n            if (this.min > 0 && this.max > 0)\n                return this.mapRange(this.min, this.min, this.max, this.minRadians, this.maxRadians);\n            else\n                return this.mapRange(0, this.min, this.max, this.minRadians, this.maxRadians);\n        },\n        valueRadians() {\n            return this.mapRange(this.modelValue, this.min, this.max, this.minRadians, this.maxRadians);\n        },\n        minX() {\n            return this.midX + Math.cos(this.minRadians) * this.radius;\n        },\n        minY() {\n            return this.midY - Math.sin(this.minRadians) * this.radius;\n        },\n        maxX() {\n            return this.midX + Math.cos(this.maxRadians) * this.radius;\n        },\n        maxY() {\n            return this.midY - Math.sin(this.maxRadians) * this.radius;\n        },\n        zeroX() {\n            return this.midX + Math.cos(this.zeroRadians) * this.radius;\n        },\n        zeroY() {\n            return this.midY - Math.sin(this.zeroRadians) * this.radius;\n        },\n        valueX() {\n            return this.midX + Math.cos(this.valueRadians) * this.radius;\n        },\n        valueY() {\n            return this.midY - Math.sin(this.valueRadians) * this.radius;\n        },\n        largeArc() {\n            return Math.abs(this.zeroRadians - this.valueRadians) < Math.PI ? 0 : 1;\n        },\n        sweep() {\n            return this.valueRadians > this.zeroRadians ? 0 : 1;\n        },\n        valueToDisplay() {\n            return this.valueTemplate.replace(/{value}/g, this.modelValue);\n        }\n    }\n}\n//Derived and forked from https://github.com/kramer99/vue-knob-control\n</script>\n\n<style>\n@keyframes dash-frame {\n    100% {\n        stroke-dashoffset: 0;\n    }\n}\n.p-knob-range {\n    fill: none;\n    transition: stroke .1s ease-in;\n}\n.p-knob-value {\n    animation-name: dash-frame;\n    animation-fill-mode: forwards;\n    fill: none;\n}\n.p-knob-text {\n    font-size: 1.3rem;\n    text-align: center;\n}\n</style>\n"],"sourceRoot":""}]}