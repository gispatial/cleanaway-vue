{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/deferredcontent/DeferredContentDoc.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/deferredcontent/DeferredContentDoc.vue","mtime":1634589566262},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/deferredcontent/DeferredContentDoc.vue"],"names":[],"mappings":"AA2EA,eAAe;AACX,EAAA,IADW,kBACJ;AACH,WAAO;AACH,MAAA,OAAO,EAAE;AACL,uBAAe;AACX,UAAA,OAAO,EAAE,oBADE;AAEX,UAAA,OAAO;AAFI,SADV;AAwDL,2BAAmB;AACf,UAAA,OAAO,EAAE,wBADM;AAEf,UAAA,OAAO;AAFQ,SAxDd;AA8GL,0BAAkB;AACd,UAAA,OAAO,EAAE,gBADK;AAEd,UAAA,OAAO,6gBAFO;AAQd,UAAA,OAAO;AARO;AA9Gb;AADN,KAAP;AAoLJ;AAtLW,CAAf","sourcesContent":["<template>\n\t<AppDoc name=\"DeferredContentDemo\" :sources=\"sources\" :service=\"['ProductService']\" :data=\"['products-small']\" github=\"deferredcontent/DeferredContentDemo.vue\">\n        <h5>Import</h5>\n<pre v-code.script><code>\nimport DeferredContent from 'primevue/deferredcontent';\n\n</code></pre>\n\n        <h5>Import via CDN</h5>\n<pre v-code><code>\n&lt;script src=\"https://unpkg.com/primevue@^3/core/core.js\"&gt;&lt;/script&gt;\n&lt;script src=\"https://unpkg.com/primevue@^3/deferredcontent/deferredcontent.min.js\"&gt;&lt;/script&gt;\n\n</code></pre>\n\n\t\t<h5>Getting Started</h5>\n\t\t<p>DeferredContent is used as a wrapper element of its content..</p>\n<pre v-code><code><template v-pre>\n&lt;DeferredContent&gt;\n    &lt;DataTable :value=\"cars\"&gt;\n        &lt;Column field=\"vin\" header=\"Vin\"&gt;&lt;/Column&gt;\n        &lt;Column field=\"year\" header=\"Year\"&gt;&lt;/Column&gt;\n        &lt;Column field=\"brand\" header=\"Brand\"&gt;&lt;/Column&gt;\n        &lt;Column field=\"color\" header=\"Color\"&gt;&lt;/Column&gt;\n    &lt;/DataTable&gt;\n&lt;/DeferredContent&gt;\n</template>\n</code></pre>\n\n        <h5>Load Event</h5>\n        <p>onLoad callback is useful to initialize the content when it becomes visible on scroll such as loading data.</p>\n<pre v-code><code><template v-pre>\n&lt;DeferredContent @load=\"onDataLoad\"&gt;\n    &lt;DataTable :value=\"cars\"&gt;\n        &lt;Column field=\"vin\" header=\"Vin\"&gt;&lt;/Column&gt;\n        &lt;Column field=\"year\" header=\"Year\"&gt;&lt;/Column&gt;\n        &lt;Column field=\"brand\" header=\"Brand\"&gt;&lt;/Column&gt;\n        &lt;Column field=\"color\" header=\"Color\"&gt;&lt;/Column&gt;\n    &lt;/DataTable&gt;\n&lt;/DeferredContent&gt;\n</template>\n</code></pre>\n\n\t\t<h5>Properties</h5>\n\t\t<p>Component has no properties.</p>\n\n\t\t<h5>Events</h5>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t<th>Parameters</th>\n\t\t\t\t\t<th>Description</th>\n\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>load</td>\n                        <td>event: Event object</td>\n                        <td>Callback to invoke when deferred content is loaded..</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Styling</h5>\n\t\t<p>Component does not apply any styling.</p>\n\n\t\t<h5>Dependencies</h5>\n\t\t<p>None.</p>\n    </AppDoc>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div>\n        <Toast />\n\n        <div style=\"height: 800px\">\n            Scroll down to lazy load an image and the DataTable which initiates a query that is not executed on initial page load to speed up load performance.\n        </div>\n\n        <DeferredContent @load=\"onImageLoad\">\n            <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" alt=\"Nature\"/>\n        </DeferredContent>\n\n        <div style=\"height: 500px\">\n        </div>\n\n        <DeferredContent @load=\"onDataLoad\">\n            <DataTable :value=\"products\" responsiveLayout=\"scroll\">\n                <Column field=\"code\" header=\"Code\"></Column>\n                <Column field=\"name\" header=\"Name\"></Column>\n                <Column field=\"category\" header=\"Category\"></Column>\n                <Column field=\"quantity\" header=\"Quantity\"></Column>\n            </DataTable>\n        </DeferredContent>\n    </div>\n</template>\n\n<script>\nimport ProductService from './service/ProductService';\n\nexport default {\n    data() {\n        return {\n            products: null\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n    },\n    methods: {\n        onImageLoad() {\n            this.$toast.add({severity: 'success', summary: 'Image Initialized', detail: 'Scroll down to load the datatable'});\n        },\n        onDataLoad() {\n            this.productService.getProductsSmall().then(data => this.products = data);\n            this.$toast.add({severity: 'success', summary: 'Data Initialized', detail: 'Render Completed'});\n        }\n    }\n}\n<\\\\/script>\n`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div>\n        <Toast />\n        \n        <div style=\"height: 800px\">\n            Scroll down to lazy load an image and the DataTable which initiates a query that is not executed on initial page load to speed up load performance.\n        </div>\n\n        <DeferredContent @load=\"onImageLoad\">\n            <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" alt=\"Nature\"/>\n        </DeferredContent>\n\n        <div style=\"height: 500px\">\n        </div>\n\n        <DeferredContent @load=\"onDataLoad\">\n            <DataTable :value=\"products\" responsiveLayout=\"scroll\">\n                <Column field=\"code\" header=\"Code\"></Column>\n                <Column field=\"name\" header=\"Name\"></Column>\n                <Column field=\"category\" header=\"Category\"></Column>\n                <Column field=\"quantity\" header=\"Quantity\"></Column>\n            </DataTable>\n        </DeferredContent>\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport { useToast } from \"primevue/usetoast\";\nimport ProductService from './service/ProductService';\n\nexport default {\n    setup() {\n        const toast = useToast();\n\n        const products = ref();\n        const productService = ref(new ProductService());\n        const onImageLoad = () => {\n            toast.add({severity: 'success', summary: 'Image Initialized', detail: 'Scroll down to load the datatable'});\n        };\n        const onDataLoad = () => {\n            productService.value.getProductsSmall().then(data => products.value = data);\n            toast.add({severity: 'success', summary: 'Data Initialized', detail: 'Render Completed'});\n        };\n\n        return { products, productService, onImageLoad, onDataLoad }\n    }\n}\n<\\\\/script>\n`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/deferredcontent/deferredcontent.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/toast/toast.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/toastservice/toastservice.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/datatable/datatable.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/column/column.min.js\"><\\\\/script>\n        <script src=\"./ProductService.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <p-toast></p-toast>\n            \n            <div style=\"height: 800px\">\n                Scroll down to lazy load an image and the DataTable which initiates a query that is not executed on initial page load to speed up load performance.\n            </div>\n\n            <p-deferredcontent @load=\"onImageLoad\">\n                <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" alt=\"Nature\"/>\n            </p-deferredcontent>\n\n            <div style=\"height: 500px\">\n            </div>\n\n            <p-deferredcontent @load=\"onDataLoad\">\n                <p-datatable :value=\"products\" responsive-layout=\"scroll\">\n                    <p-column field=\"code\" header=\"Code\"></p-column>\n                    <p-column field=\"name\" header=\"Name\"></p-column>\n                    <p-column field=\"category\" header=\"Category\"></p-column>\n                    <p-column field=\"quantity\" header=\"Quantity\"></p-column>\n                </p-datatable>\n            </p-deferredcontent>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref } = Vue;\n        const { useToast } = primevue.usetoast;\n\n        const App = {\n            setup() {\n                const toast = useToast();\n\n                const products = ref();\n                const productService = ref(new ProductService());\n                const onImageLoad = () => {\n                    toast.add({severity: 'success', summary: 'Image Initialized', detail: 'Scroll down to load the datatable'});\n                };\n                const onDataLoad = () => {\n                    productService.value.getProductsSmall().then(data => products.value = data);\n                    toast.add({severity: 'success', summary: 'Data Initialized', detail: 'Render Completed'});\n                };\n\n                return { products, productService, onImageLoad, onDataLoad }\n            },\n            components: {\n                \"p-deferredcontent\": primevue.deferredcontent,\n                \"p-toast\": primevue.toast,\n                \"p-datatable\": primevue.datatable,\n                \"p-column\": primevue.column\n            } \n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .use(primevue.toastservice)\n            .mount(\"#app\");\n        <\\\\/script>\n`\n                }\n            }\n        }\n    }\n}\n</script>"],"sourceRoot":""}]}