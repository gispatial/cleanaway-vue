{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/floatlabel/FloatLabelDemo.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/floatlabel/FloatLabelDemo.vue","mtime":1634589566266},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/floatlabel/FloatLabelDemo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>Float Label</h1>\n                <p>All input text components support floating labels.</p>\n            </div>\n            <AppDemoActions />\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card\">\n                <div class=\"p-fluid p-grid\">\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <InputText id=\"inputtext\" type=\"text\" v-model=\"value1\" />\n                            <label for=\"inputtext\">InputText</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label p-input-icon-left\">\n                            <i class=\"pi pi-search\" />\n                            <InputText id=\"inputtext-left\" type=\"text\" v-model=\"valueIconLeft\" />\n                            <label for=\"inputtext-left\">Left Icon</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                       <span class=\"p-float-label p-input-icon-right\">\n                            <i class=\"pi pi-search\" />\n                            <InputText id=\"inputtext-right\" type=\"text\" v-model=\"valueIconRight\" />\n                            <label for=\"inputtext-right\">Right Icon</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <AutoComplete v-model=\"value2\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\" />\n                            <label for=\"autocomplete\">AutoComplete</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <Calendar id=\"calendar\" v-model=\"value3\" />\n                            <label for=\"calendar\">Calendar</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <Chips id=\"chips\" v-model=\"value4\" />\n                            <label for=\"chips\">Chips</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <InputMask id=\"inputmask\" v-model=\"value5\" mask=\"99/99/9999\" slotChar=\"mm/dd/yyyy\" />\n                            <label for=\"inputmask\">InputMask</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <InputNumber id=\"inputnumber\" v-model=\"value6\" />\n                            <label for=\"inputnumber\">InputNumber</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <div class=\"p-inputgroup\">\n                            <span class=\"p-inputgroup-addon\">\n                                <i class=\"pi pi-user\"></i>\n                            </span>\n                            <span class=\"p-float-label\">\n                                <InputText id=\"inputgroup\" type=\"text\" v-model=\"value7\" />\n                                <label for=\"inputgroup\">InputGroup</label>\n                            </span>\n                        </div>\n                    </div>\n                     <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <CascadeSelect id=\"cascadeSelect\" v-model=\"selectedCity\" :options=\"cascadeCountries\" optionLabel=\"cname\" optionGroupLabel=\"name\"\n                                :optionGroupChildren=\"['states', 'cities']\" />\n                            <label for=\"multiselect\">CascadeSelect</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <Dropdown id=\"dropdown\" v-model=\"value8\" :options=\"cities\" optionLabel=\"name\" />\n                            <label for=\"dropdown\">Dropdown</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <MultiSelect id=\"multiselect\" v-model=\"value9\" :options=\"cities\" optionLabel=\"name\" />\n                            <label for=\"multiselect\">MultiSelect</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <TreeSelect v-model=\"selectedNode\" :options=\"nodes\"></TreeSelect>\n                            <label for=\"treeselect\">TreeSelect</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <Password id=\"password\" v-model=\"value11\" />\n                            <label for=\"password\">Password</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <Textarea id=\"textarea\" v-model=\"value10\" rows=\"3\" />\n                            <label for=\"textarea\">Textarea</label>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <AppDoc name=\"FloatLabelDemo\" :sources=\"sources\" :service=\"['CountryService', 'NodeService']\" :data=\"['countries', 'treenodes']\" github=\"floatlabel/FloatLabelDemo.vue\" />\n    </div>\n</template>\n\n<script>\nimport CountryService from '../../service/CountryService';\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            countries: null,\n            filteredCountries: null,\n            cities: [\n                {name: 'New York', code: 'NY'},\n                {name: 'Rome', code: 'RM'},\n                {name: 'London', code: 'LDN'},\n                {name: 'Istanbul', code: 'IST'},\n                {name: 'Paris', code: 'PRS'}\n            ],\n            value1: null,\n            value2: null,\n            value3: null,\n            value4: null,\n            value5: null,\n            value6: null,\n            value7: null,\n            value8: null,\n            value9: null,\n            value10: null,\n            value11: null,\n            valueIconLeft: null,\n            valueIconRight: null,\n            selectedCity: null,\n            nodes: null,\n            selectedNode: null,\n            cascadeCountries: [\n                {\n                    name: 'Australia',\n                    code: 'AU',\n                    states: [\n                        {\n                            name: 'New South Wales',\n                            cities: [\n                                {cname: 'Sydney', code: 'A-SY'},\n                                {cname: 'Newcastle', code: 'A-NE'},\n                                {cname: 'Wollongong', code: 'A-WO'}\n                            ]\n                        },\n                        {\n                            name: 'Queensland',\n                            cities: [\n                                {cname: 'Brisbane', code: 'A-BR'},\n                                {cname: 'Townsville', code: 'A-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'Canada', \n                    code: 'CA',\n                    states: [\n                        {\n                            name: 'Quebec',\n                            cities: [\n                                {cname: 'Montreal', code: 'C-MO'},\n                                {cname: 'Quebec City', code: 'C-QU'}\n                            ]\n                        },\n                        {\n                            name: 'Ontario',\n                            cities: [\n                                {cname: 'Ottawa', code: 'C-OT'},\n                                {cname: 'Toronto', code: 'C-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'United States',\n                    code: 'US',\n                    states: [\n                        {\n                            name: 'California',\n                            cities: [\n                                {cname: 'Los Angeles', code: 'US-LA'},\n                                {cname: 'San Diego', code: 'US-SD'},\n                                {cname: 'San Francisco', code: 'US-SF'}\n                            ]\n                        },\n                        {\n                            name: 'Florida',\n                            cities: [\n                                {cname: 'Jacksonville', code: 'US-JA'},\n                                {cname: 'Miami', code: 'US-MI'},\n                                {cname: 'Tampa', code: 'US-TA'},\n                                {cname: 'Orlando', code: 'US-OR'}\n                            ]\n                        },\n                        {\n                            name: 'Texas',\n                            cities: [\n                                {cname: 'Austin', code: 'US-AU'},\n                                {cname: 'Dallas', code: 'US-DA'},\n                                {cname: 'Houston', code: 'US-HO'}\n                            ]\n                        }\n                    ]\n                }\n            ],\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div>\n        <div class=\"card\">\n            <div class=\"p-fluid p-grid\">\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <InputText id=\"inputtext\" type=\"text\" v-model=\"value1\" />\n                        <label for=\"inputtext\">InputText</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label p-input-icon-left\">\n                        <i class=\"pi pi-search\" />\n                        <InputText id=\"inputtext-left\" type=\"text\" v-model=\"valueIconLeft\" />\n                        <label for=\"inputtext-left\">Left Icon</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                   <span class=\"p-float-label p-input-icon-right\">\n                        <i class=\"pi pi-search\" />\n                        <InputText id=\"inputtext-right\" type=\"text\" v-model=\"valueIconRight\" />\n                        <label for=\"inputtext-right\">Right Icon</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <AutoComplete v-model=\"value2\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\" />\n                        <label for=\"autocomplete\">AutoComplete</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Calendar id=\"calendar\" v-model=\"value3\" />\n                        <label for=\"calendar\">Calendar</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Chips id=\"chips\" v-model=\"value4\" />\n                        <label for=\"chips\">Chips</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <InputMask id=\"inputmask\" v-model=\"value5\" mask=\"99/99/9999\" slotChar=\"mm/dd/yyyy\" />\n                        <label for=\"inputmask\">InputMask</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <InputNumber id=\"inputnumber\" v-model=\"value6\" />\n                        <label for=\"inputnumber\">InputNumber</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <div class=\"p-inputgroup\">\n                        <span class=\"p-inputgroup-addon\">\n                            <i class=\"pi pi-user\"></i>\n                        </span>\n                        <span class=\"p-float-label\">\n                            <InputText id=\"inputgroup\" type=\"text\" v-model=\"value7\" />\n                            <label for=\"inputgroup\">InputGroup</label>\n                        </span>\n                    </div>\n                </div>\n                 <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <CascadeSelect id=\"cascadeSelect\" v-model=\"selectedCity\" :options=\"cascadeCountries\" optionLabel=\"cname\" optionGroupLabel=\"name\"\n                            :optionGroupChildren=\"['states', 'cities']\" />\n                        <label for=\"multiselect\">CascadeSelect</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Dropdown id=\"dropdown\" v-model=\"value8\" :options=\"cities\" optionLabel=\"name\" />\n                        <label for=\"dropdown\">Dropdown</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <MultiSelect id=\"multiselect\" v-model=\"value9\" :options=\"cities\" optionLabel=\"name\" />\n                        <label for=\"multiselect\">MultiSelect</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <TreeSelect v-model=\"selectedNode\" :options=\"nodes\"></TreeSelect>\n                        <label for=\"treeselect\">TreeSelect</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Password id=\"password\" v-model=\"value11\" />\n                        <label for=\"password\">Password</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Textarea id=\"textarea\" v-model=\"value10\" rows=\"3\" />\n                        <label for=\"textarea\">Textarea</label>\n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>                    \n</template>\n\n<script>\nimport CountryService from './service/CountryService';\nimport NodeService from './service/NodeService';\n\nexport default {\n    data() {\n        return {\n            countries: null,\n            filteredCountries: null,\n            cities: [\n                {name: 'New York', code: 'NY'},\n                {name: 'Rome', code: 'RM'},\n                {name: 'London', code: 'LDN'},\n                {name: 'Istanbul', code: 'IST'},\n                {name: 'Paris', code: 'PRS'}\n            ],\n            value1: null,\n            value2: null,\n            value3: null,\n            value4: null,\n            value5: null,\n            value6: null,\n            value7: null,\n            value8: null,\n            value9: null,\n            value10: null,\n            value11: null,\n            valueIconLeft: null,\n            valueIconRight: null,\n            selectedCity: null,\n            nodes: null,\n            selectedNode: null,\n            cascadeCountries: [\n                {\n                    name: 'Australia',\n                    code: 'AU',\n                    states: [\n                        {\n                            name: 'New South Wales',\n                            cities: [\n                                {cname: 'Sydney', code: 'A-SY'},\n                                {cname: 'Newcastle', code: 'A-NE'},\n                                {cname: 'Wollongong', code: 'A-WO'}\n                            ]\n                        },\n                        {\n                            name: 'Queensland',\n                            cities: [\n                                {cname: 'Brisbane', code: 'A-BR'},\n                                {cname: 'Townsville', code: 'A-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'Canada', \n                    code: 'CA',\n                    states: [\n                        {\n                            name: 'Quebec',\n                            cities: [\n                                {cname: 'Montreal', code: 'C-MO'},\n                                {cname: 'Quebec City', code: 'C-QU'}\n                            ]\n                        },\n                        {\n                            name: 'Ontario',\n                            cities: [\n                                {cname: 'Ottawa', code: 'C-OT'},\n                                {cname: 'Toronto', code: 'C-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'United States',\n                    code: 'US',\n                    states: [\n                        {\n                            name: 'California',\n                            cities: [\n                                {cname: 'Los Angeles', code: 'US-LA'},\n                                {cname: 'San Diego', code: 'US-SD'},\n                                {cname: 'San Francisco', code: 'US-SF'}\n                            ]\n                        },\n                        {\n                            name: 'Florida',\n                            cities: [\n                                {cname: 'Jacksonville', code: 'US-JA'},\n                                {cname: 'Miami', code: 'US-MI'},\n                                {cname: 'Tampa', code: 'US-TA'},\n                                {cname: 'Orlando', code: 'US-OR'}\n                            ]\n                        },\n                        {\n                            name: 'Texas',\n                            cities: [\n                                {cname: 'Austin', code: 'US-AU'},\n                                {cname: 'Dallas', code: 'US-DA'},\n                                {cname: 'Houston', code: 'US-HO'}\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    countryService: null,\n    nodeService: null,\n    created() {\n        this.countryService = new CountryService();\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.countryService.getCountries().then(data => this.countries = data);\n        this.nodeService.getTreeNodes().then(data => this.nodes = data);\n    },\n    methods: {\n        searchCountry(event) {\n            setTimeout(() => {\n                if (!event.query.trim().length) {\n                    this.filteredCountries = [...this.countries];\n                }\n                else {\n                    this.filteredCountries = this.countries.filter((country) => {\n                        return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n                    });\n                }\n            }, 250);\n        }\n    }\n}\n<\\\\/script>\n`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div>\n        <div class=\"card\">\n            <div class=\"p-fluid p-grid\">\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <InputText id=\"inputtext\" type=\"text\" v-model=\"value1\" />\n                        <label for=\"inputtext\">InputText</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label p-input-icon-left\">\n                        <i class=\"pi pi-search\" />\n                        <InputText id=\"inputtext-left\" type=\"text\" v-model=\"valueIconLeft\" />\n                        <label for=\"inputtext-left\">Left Icon</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                   <span class=\"p-float-label p-input-icon-right\">\n                        <i class=\"pi pi-search\" />\n                        <InputText id=\"inputtext-right\" type=\"text\" v-model=\"valueIconRight\" />\n                        <label for=\"inputtext-right\">Right Icon</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <AutoComplete v-model=\"value2\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\" />\n                        <label for=\"autocomplete\">AutoComplete</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Calendar id=\"calendar\" v-model=\"value3\" />\n                        <label for=\"calendar\">Calendar</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Chips id=\"chips\" v-model=\"value4\" />\n                        <label for=\"chips\">Chips</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <InputMask id=\"inputmask\" v-model=\"value5\" mask=\"99/99/9999\" slotChar=\"mm/dd/yyyy\" />\n                        <label for=\"inputmask\">InputMask</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <InputNumber id=\"inputnumber\" v-model=\"value6\" />\n                        <label for=\"inputnumber\">InputNumber</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <div class=\"p-inputgroup\">\n                        <span class=\"p-inputgroup-addon\">\n                            <i class=\"pi pi-user\"></i>\n                        </span>\n                        <span class=\"p-float-label\">\n                            <InputText id=\"inputgroup\" type=\"text\" v-model=\"value7\" />\n                            <label for=\"inputgroup\">InputGroup</label>\n                        </span>\n                    </div>\n                </div>\n                 <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <CascadeSelect id=\"cascadeSelect\" v-model=\"selectedCity\" :options=\"cascadeCountries\" optionLabel=\"cname\" optionGroupLabel=\"name\"\n                            :optionGroupChildren=\"['states', 'cities']\" />\n                        <label for=\"multiselect\">CascadeSelect</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Dropdown id=\"dropdown\" v-model=\"value8\" :options=\"cities\" optionLabel=\"name\" />\n                        <label for=\"dropdown\">Dropdown</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <MultiSelect id=\"multiselect\" v-model=\"value9\" :options=\"cities\" optionLabel=\"name\" />\n                        <label for=\"multiselect\">MultiSelect</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <TreeSelect v-model=\"selectedNode\" :options=\"nodes\"></TreeSelect>\n                        <label for=\"treeselect\">TreeSelect</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Password id=\"password\" v-model=\"value11\" />\n                        <label for=\"password\">Password</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Textarea id=\"textarea\" v-model=\"value10\" rows=\"3\" />\n                        <label for=\"textarea\">Textarea</label>\n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>                    \n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport CountryService from './service/CountryService';\nimport NodeService from './service/NodeService';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            countryService.value.getCountries().then(data => countries.value = data);\n            nodeService.value.getTreeNodes().then(data => nodes.value = data);\n        })\n        const countryService = ref(new CountryService());\n        const nodeService = ref(new NodeService());\n        const countries = ref();\n        const filteredCountries = ref();\n        const cities = ref([\n            {name: 'New York', code: 'NY'},\n            {name: 'Rome', code: 'RM'},\n            {name: 'London', code: 'LDN'},\n            {name: 'Istanbul', code: 'IST'},\n            {name: 'Paris', code: 'PRS'}\n        ]);\n        const value1 = ref();\n        const value2 = ref();\n        const value3 = ref();\n        const value4 = ref();\n        const value5 = ref();\n        const value6 = ref();\n        const value7 = ref();\n        const value8 = ref();\n        const value9 = ref();\n        const value10 = ref();\n        const value11 = ref();\n        const valueIconLeft = ref();\n        const valueIconRight = ref();\n        const selectedCity = ref();\n        const selectedNode = ref();\n        const nodes = ref();\n        const cascadeCountries = ref([\n            {\n                name: 'Australia',\n                code: 'AU',\n                states: [\n                    {\n                        name: 'New South Wales',\n                        cities: [\n                            {cname: 'Sydney', code: 'A-SY'},\n                            {cname: 'Newcastle', code: 'A-NE'},\n                            {cname: 'Wollongong', code: 'A-WO'}\n                        ]\n                    },\n                    {\n                        name: 'Queensland',\n                        cities: [\n                            {cname: 'Brisbane', code: 'A-BR'},\n                            {cname: 'Townsville', code: 'A-TO'}\n                        ]\n                    },\n                    \n                ]\n            },\n            {\n                name: 'Canada', \n                code: 'CA',\n                states: [\n                    {\n                        name: 'Quebec',\n                        cities: [\n                            {cname: 'Montreal', code: 'C-MO'},\n                            {cname: 'Quebec City', code: 'C-QU'}\n                        ]\n                    },\n                    {\n                        name: 'Ontario',\n                        cities: [\n                            {cname: 'Ottawa', code: 'C-OT'},\n                            {cname: 'Toronto', code: 'C-TO'}\n                        ]\n                    },\n                    \n                ]\n            },\n            {\n                name: 'United States',\n                code: 'US',\n                states: [\n                    {\n                        name: 'California',\n                        cities: [\n                            {cname: 'Los Angeles', code: 'US-LA'},\n                            {cname: 'San Diego', code: 'US-SD'},\n                            {cname: 'San Francisco', code: 'US-SF'}\n                        ]\n                    },\n                    {\n                        name: 'Florida',\n                        cities: [\n                            {cname: 'Jacksonville', code: 'US-JA'},\n                            {cname: 'Miami', code: 'US-MI'},\n                            {cname: 'Tampa', code: 'US-TA'},\n                            {cname: 'Orlando', code: 'US-OR'}\n                        ]\n                    },\n                    {\n                        name: 'Texas',\n                            cities: [\n                                {cname: 'Austin', code: 'US-AU'},\n                                {cname: 'Dallas', code: 'US-DA'},\n                                {cname: 'Houston', code: 'US-HO'}\n                            ]\n                        }\n                    ]\n                }\n            ]);\n\n        const searchCountry = (event) => {\n            setTimeout(() => {\n                if (!event.query.trim().length) {\n                    filteredCountries.value = [...countries.value];\n                }\n                else {\n                    filteredCountries.value = countries.value.filter((country) => {\n                        return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n                    });\n                }\n            }, 250);\n        };\n\n        return { countryService, countries, filteredCountries, cities, value1, value2, value3, value4, value5, value6, \n            value7, value8, value9, value10, value11, valueIconLeft, valueIconRight, selectedCity, cascadeCountries, searchCountry,\n            nodes, selectedNode }\n    }\n}\n<\\\\/script>\n`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/autocomplete/autocomplete.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/calendar/calendar.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/chips/chips.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/inputmask/inputmask.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/cascadeselect/cascadeselect.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/multiselect/multiselect.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/treeselect/treeselect.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/password/password.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/textarea/textarea.min.js\"><\\\\/script>\n        <script src=\"./CountryService.js\"><\\\\/script>\n        <script src=\"./NodeService.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <div class=\"card\">\n                <div class=\"p-fluid p-grid\">\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-inputtext id=\"inputtext\" type=\"text\" v-model=\"value1\"></p-inputtext>\n                            <label for=\"inputtext\">InputText</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label p-input-icon-left\">\n                            <i class=\"pi pi-search\"></i>\n                            <p-inputtext id=\"inputtext-left\" type=\"text\" v-model=\"valueIconLeft\"></p-inputtext>\n                            <label for=\"inputtext-left\">Left Icon</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label p-input-icon-right\">\n                            <i class=\"pi pi-search\"></i>\n                            <p-inputtext id=\"inputtext-right\" type=\"text\" v-model=\"valueIconRight\"></p-inputtext>\n                            <label for=\"inputtext-right\">Right Icon</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-autocomplete v-model=\"value2\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\"></p-autocomplete>\n                            <label for=\"autocomplete\">AutoComplete</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-calendar id=\"calendar\" v-model=\"value3\"></p-calendar>\n                            <label for=\"calendar\">Calendar</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-chips id=\"chips\" v-model=\"value4\"></p-chips>\n                            <label for=\"chips\">Chips</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-inputmask id=\"inputmask\" v-model=\"value5\" mask=\"99/99/9999\" slot-char=\"mm/dd/yyyy\"></p-inputmask>\n                            <label for=\"inputmask\">InputMask</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-inputnumber id=\"inputnumber\" v-model=\"value6\"></p-inputnumber>\n                            <label for=\"inputnumber\">InputNumber</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <div class=\"p-inputgroup\">\n                            <span class=\"p-inputgroup-addon\">\n                                <i class=\"pi pi-user\"></i>\n                            </span>\n                            <span class=\"p-float-label\">\n                                <p-inputtext id=\"inputgroup\" type=\"text\" v-model=\"value7\" />\n                                <label for=\"inputgroup\">InputGroup</label>\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-cascadeselect id=\"cascadeSelect\" v-model=\"selectedCity\" :options=\"cascadeCountries\" option-label=\"cname\" option-group-label=\"name\"\n                                :option-group-children=\"['states', 'cities']\"></p-cascadeselect>\n                            <label for=\"multiselect\">CascadeSelect</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-dropdown id=\"dropdown\" v-model=\"value8\" :options=\"cities\" option-label=\"name\"></p-dropdown>\n                            <label for=\"dropdown\">Dropdown</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-multiselect id=\"multiselect\" v-model=\"value9\" :options=\"cities\" option-label=\"name\">\n                            <label for=\"multiselect\">MultiSelect</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-treeselect v-model=\"selectedNode\" :options=\"nodes\"></p-treeselect>\n                            <label for=\"treeselect\">TreeSelect</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-password id=\"password\" v-model=\"value11\"></p-password>\n                            <label for=\"password\">Password</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-textarea id=\"textarea\" v-model=\"value10\" rows=\"3\"></p-textarea>\n                            <label for=\"textarea\">Textarea</label>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref, onMounted } = Vue;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    countryService.value.getCountries().then(data => countries.value = data);\n                    nodeService.value.getTreeNodes().then(data => nodes.value = data);\n                })\n                const countryService = ref(new CountryService());\n                const nodeService = ref(new NodeService());\n                const countries = ref();\n                const filteredCountries = ref();\n                const cities = ref([\n                    {name: 'New York', code: 'NY'},\n                    {name: 'Rome', code: 'RM'},\n                    {name: 'London', code: 'LDN'},\n                    {name: 'Istanbul', code: 'IST'},\n                    {name: 'Paris', code: 'PRS'}\n                ]);\n                const value1 = ref();\n                const value2 = ref();\n                const value3 = ref();\n                const value4 = ref();\n                const value5 = ref();\n                const value6 = ref();\n                const value7 = ref();\n                const value8 = ref();\n                const value9 = ref();\n                const value10 = ref();\n                const value11 = ref();\n                const valueIconLeft = ref();\n                const valueIconRight = ref();\n                const selectedCity = ref();\n                const selectedNode = ref();\n                const nodes = ref();\n            const cascadeCountries = ref([\n                {\n                    name: 'Australia',\n                    code: 'AU',\n                    states: [\n                        {\n                            name: 'New South Wales',\n                            cities: [\n                                {cname: 'Sydney', code: 'A-SY'},\n                                {cname: 'Newcastle', code: 'A-NE'},\n                                {cname: 'Wollongong', code: 'A-WO'}\n                            ]\n                        },\n                        {\n                            name: 'Queensland',\n                            cities: [\n                                {cname: 'Brisbane', code: 'A-BR'},\n                                {cname: 'Townsville', code: 'A-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'Canada', \n                    code: 'CA',\n                    states: [\n                        {\n                            name: 'Quebec',\n                            cities: [\n                                {cname: 'Montreal', code: 'C-MO'},\n                                {cname: 'Quebec City', code: 'C-QU'}\n                            ]\n                        },\n                        {\n                            name: 'Ontario',\n                            cities: [\n                                {cname: 'Ottawa', code: 'C-OT'},\n                                {cname: 'Toronto', code: 'C-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'United States',\n                    code: 'US',\n                    states: [\n                        {\n                            name: 'California',\n                            cities: [\n                                {cname: 'Los Angeles', code: 'US-LA'},\n                                {cname: 'San Diego', code: 'US-SD'},\n                                {cname: 'San Francisco', code: 'US-SF'}\n                            ]\n                        },\n                        {\n                            name: 'Florida',\n                            cities: [\n                                {cname: 'Jacksonville', code: 'US-JA'},\n                                {cname: 'Miami', code: 'US-MI'},\n                                {cname: 'Tampa', code: 'US-TA'},\n                                {cname: 'Orlando', code: 'US-OR'}\n                            ]\n                        },\n                        {\n                            name: 'Texas',\n                                cities: [\n                                    {cname: 'Austin', code: 'US-AU'},\n                                    {cname: 'Dallas', code: 'US-DA'},\n                                    {cname: 'Houston', code: 'US-HO'}\n                                ]\n                            }\n                        ]\n                    }\n                ]);\n\n                const searchCountry = (event) => {\n                    setTimeout(() => {\n                        if (!event.query.trim().length) {\n                            filteredCountries.value = [...countries.value];\n                        }\n                        else {\n                            filteredCountries.value = countries.value.filter((country) => {\n                                return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n                            });\n                        }\n                    }, 250);\n                };\n\n                return { countryService, countries, filteredCountries, cities, value1, value2, value3, value4, value5, value6, \n                    value7, value8, value9, value10, value11, valueIconLeft, valueIconRight, selectedCity, cascadeCountries, searchCountry,\n                    nodes, selectedNode }\n            },\n            components: {\n                \"p-inputtext\": primevue.inputtext,\n                \"p-inputnumber\": primevue.inputnumber,\n                \"p-autocomplete\": primevue.autocomplete,\n                \"p-calendar\": primevue.calendar,\n                \"p-chips\": primevue.chips,\n                \"p-inputmask\": primevue.inputmask,\n                \"p-cascadeselect\": primevue.cascadeselect,\n                \"p-dropdown\": primevue.dropdown,\n                \"p-multiselect\": primevue.multiselect,\n                \"p-treeselect\": primevue.treeselect,\n                \"p-password\": primevue.password,\n                \"p-textarea\": primevue.textarea\n            }\n        };\n        \n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\\\/script>\n`\n                }\n            }\n        }\n    },\n    countryService: null,\n    nodeService: null,\n    created() {\n        this.countryService = new CountryService();\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.countryService.getCountries().then(data => this.countries = data);\n        this.nodeService.getTreeNodes().then(data => this.nodes = data);\n    },\n    methods: {\n        searchCountry(event) {\n            setTimeout(() => {\n                if (!event.query.trim().length) {\n                    this.filteredCountries = [...this.countries];\n                }\n                else {\n                    this.filteredCountries = this.countries.filter((country) => {\n                        return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n                    });\n                }\n            }, 250);\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\ntextarea {\n    resize: none;\n}\n</style>"],"sourceRoot":""}]}