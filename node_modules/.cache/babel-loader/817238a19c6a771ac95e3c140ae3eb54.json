{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/progressbar/ProgressBarDoc.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/progressbar/ProgressBarDoc.vue","mtime":1634589566280},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzb3VyY2VzOiB7CiAgICAgICAgJ29wdGlvbnMtYXBpJzogewogICAgICAgICAgdGFiTmFtZTogJ09wdGlvbnMgQVBJIFNvdXJjZScsCiAgICAgICAgICBjb250ZW50OiAiXG48dGVtcGxhdGU+XG4gICAgPGRpdj5cbiAgICAgICAgPGg1PkR5bmFtaWM8L2g1PlxuICAgICAgICA8UHJvZ3Jlc3NCYXIgOnZhbHVlPVwidmFsdWUxXCIgLz5cblxuICAgICAgICA8aDU+U3RhdGljPC9oNT5cbiAgICAgICAgPFByb2dyZXNzQmFyIDp2YWx1ZT1cInZhbHVlMlwiIDpzaG93VmFsdWU9XCJmYWxzZVwiIC8+XG5cbiAgICAgICAgPGg1PkluZGV0ZXJtaW5hdGU8L2g1PlxuICAgICAgICA8UHJvZ3Jlc3NCYXIgbW9kZT1cImluZGV0ZXJtaW5hdGVcIiBzdHlsZT1cImhlaWdodDogLjVlbVwiIC8+XG4gICAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuZXhwb3J0IGRlZmF1bHQge1xuICAgIGRhdGEoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB2YWx1ZTE6IDAsXG4gICAgICAgICAgICB2YWx1ZTI6IDUwXG4gICAgICAgIH1cbiAgICB9LFxuICAgIGludGVydmFsOiBudWxsLFxuICAgIG1ldGhvZHM6IHtcbiAgICAgICAgc3RhcnRQcm9ncmVzcygpIHtcbiAgICAgICAgICAgIHRoaXMuaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IG5ld1ZhbHVlID0gdGhpcy52YWx1ZTEgKyBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCkgKyAxO1xuICAgICAgICAgICAgICAgIGlmIChuZXdWYWx1ZSA+PSAxMDApIHtcbiAgICAgICAgICAgICAgICAgICAgbmV3VmFsdWUgPSAxMDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMudmFsdWUxID0gbmV3VmFsdWU7XG4gICAgICAgICAgICB9LCAyMDAwKTtcbiAgICAgICAgfSxcbiAgICAgICAgZW5kUHJvZ3Jlc3MoKSB7XG4gICAgICAgICAgICBjbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWwpO1xuICAgICAgICAgICAgdGhpcy5pbnRlcnZhbCA9IG51bGw7XG4gICAgICAgIH1cbiAgICB9LFxuICAgIG1vdW50ZWQoKSB7XG4gICAgICAgIHRoaXMuc3RhcnRQcm9ncmVzcygpO1xuICAgIH0sXG4gICAgYmVmb3JlVW5tb3VudCgpIHtcbiAgICAgICAgdGhpcy5lbmRQcm9ncmVzcygpO1xuICAgIH1cbn1cbjxcXC9zY3JpcHQ+XG4iCiAgICAgICAgfSwKICAgICAgICAnY29tcG9zaXRpb24tYXBpJzogewogICAgICAgICAgdGFiTmFtZTogJ0NvbXBvc2l0aW9uIEFQSSBTb3VyY2UnLAogICAgICAgICAgY29udGVudDogIlxuPHRlbXBsYXRlPlxuICAgIDxkaXY+XG4gICAgICAgIDxoNT5EeW5hbWljPC9oNT5cbiAgICAgICAgPFByb2dyZXNzQmFyIDp2YWx1ZT1cInZhbHVlMVwiIC8+XG5cbiAgICAgICAgPGg1PlN0YXRpYzwvaDU+XG4gICAgICAgIDxQcm9ncmVzc0JhciA6dmFsdWU9XCJ2YWx1ZTJcIiA6c2hvd1ZhbHVlPVwiZmFsc2VcIiAvPlxuXG4gICAgICAgIDxoNT5JbmRldGVybWluYXRlPC9oNT5cbiAgICAgICAgPFByb2dyZXNzQmFyIG1vZGU9XCJpbmRldGVybWluYXRlXCIgc3R5bGU9XCJoZWlnaHQ6IC41ZW1cIiAvPlxuICAgIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCB7IHJlZiwgb25Nb3VudGVkLCBvbkJlZm9yZVVubW91bnQgfSBmcm9tICd2dWUnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgc2V0dXAoKSB7XG4gICAgICAgIG9uTW91bnRlZCgoKSA9PiB7XG4gICAgICAgICAgICBzdGFydFByb2dyZXNzKCk7XG4gICAgICAgIH0pXG5cbiAgICAgICAgb25CZWZvcmVVbm1vdW50KCgpID0+IHtcbiAgICAgICAgICAgIGVuZFByb2dyZXNzKCk7XG4gICAgICAgIH0pXG4gICAgICAgIFxuICAgICAgICBjb25zdCB2YWx1ZTEgPSByZWYoMCk7XG4gICAgICAgIGNvbnN0IHZhbHVlMiA9IHJlZig1MCk7XG4gICAgICAgIGNvbnN0IGludGVydmFsID0gcmVmKG51bGwpO1xuICAgICAgICBjb25zdCBzdGFydFByb2dyZXNzID0gKCkgPT4ge1xuICAgICAgICAgICAgaW50ZXJ2YWwudmFsdWUgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IG5ld1ZhbHVlID0gdmFsdWUxLnZhbHVlICsgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApICsgMTtcbiAgICAgICAgICAgICAgICBpZiAobmV3VmFsdWUgPj0gMTAwKSB7XG4gICAgICAgICAgICAgICAgICAgIG5ld1ZhbHVlID0gMTAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YWx1ZTEudmFsdWUgPSBuZXdWYWx1ZTtcbiAgICAgICAgICAgIH0sIDIwMDApO1xuICAgICAgICB9O1xuICAgICAgICBjb25zdCBlbmRQcm9ncmVzcyA9ICgpID0+IHtcbiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwudmFsdWUpO1xuICAgICAgICAgICAgaW50ZXJ2YWwudmFsdWUgPSBudWxsO1xuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiB7IHZhbHVlMSwgdmFsdWUyIH1cbiAgICB9XG59XG48XFwvc2NyaXB0PiIKICAgICAgICB9LAogICAgICAgICdicm93c2VyLXNvdXJjZSc6IHsKICAgICAgICAgIHRhYk5hbWU6ICdCcm93c2VyIFNvdXJjZScsCiAgICAgICAgICBjb250ZW50OiAiPGRpdiBpZD1cImFwcFwiPlxuICAgICAgICAgICAgPGg1PkR5bmFtaWM8L2g1PlxuICAgICAgICAgICAgPHAtcHJvZ3Jlc3NiYXIgOnZhbHVlPVwidmFsdWUxXCI+PC9wLXByb2dyZXNzYmFyPlxuXG4gICAgICAgICAgICA8aDU+U3RhdGljPC9oNT5cbiAgICAgICAgICAgIDxwLXByb2dyZXNzYmFyIDp2YWx1ZT1cInZhbHVlMlwiIDpzaG93LXZhbHVlPVwiZmFsc2VcIj48L3AtcHJvZ3Jlc3NiYXI+XG5cbiAgICAgICAgICAgIDxoNT5JbmRldGVybWluYXRlPC9oNT5cbiAgICAgICAgICAgIDxwLXByb2dyZXNzYmFyIG1vZGU9XCJpbmRldGVybWluYXRlXCIgc3R5bGU9XCJoZWlnaHQ6IC41ZW1cIj48L3AtcHJvZ3Jlc3NiYXI+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxzY3JpcHQgdHlwZT1cIm1vZHVsZVwiPlxuICAgICAgICBjb25zdCB7IGNyZWF0ZUFwcCwgcmVmLCBvbk1vdW50ZWQsIG9uQmVmb3JlVW5tb3VudCB9ID0gVnVlO1xuXG4gICAgICAgIGNvbnN0IEFwcCA9IHtcbiAgICAgICAgICAgIHNldHVwKCkge1xuICAgICAgICAgICAgICAgIG9uTW91bnRlZCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0UHJvZ3Jlc3MoKTtcbiAgICAgICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICAgICAgb25CZWZvcmVVbm1vdW50KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgZW5kUHJvZ3Jlc3MoKTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlMSA9IHJlZigwKTtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZTIgPSByZWYoNTApO1xuICAgICAgICAgICAgICAgIGNvbnN0IGludGVydmFsID0gcmVmKG51bGwpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHN0YXJ0UHJvZ3Jlc3MgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGludGVydmFsLnZhbHVlID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG5ld1ZhbHVlID0gdmFsdWUxLnZhbHVlICsgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApICsgMTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuZXdWYWx1ZSA+PSAxMDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdWYWx1ZSA9IDEwMDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlMS52YWx1ZSA9IG5ld1ZhbHVlO1xuICAgICAgICAgICAgICAgICAgICB9LCAyMDAwKTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGNvbnN0IGVuZFByb2dyZXNzID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsLnZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgaW50ZXJ2YWwudmFsdWUgPSBudWxsO1xuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICByZXR1cm4geyB2YWx1ZTEsIHZhbHVlMiB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY29tcG9uZW50czoge1xuICAgICAgICAgICAgICAgIFwicC1wcm9ncmVzc2JhclwiOiBwcmltZXZ1ZS5wcm9ncmVzc2JhclxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIGNyZWF0ZUFwcChBcHApXG4gICAgICAgICAgICAudXNlKHByaW1ldnVlLmNvbmZpZy5kZWZhdWx0KVxuICAgICAgICAgICAgLm1vdW50KFwiI2FwcFwiKTtcbiAgICAgICAgPFxcL3NjcmlwdD4iCiAgICAgICAgfQogICAgICB9CiAgICB9OwogIH0KfTs="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/progressbar/ProgressBarDoc.vue"],"names":[],"mappings":"AAwHA,eAAe;AACd,EAAA,IADc,kBACP;AACN,WAAO;AACN,MAAA,OAAO,EAAE;AACR,uBAAe;AACC,UAAA,OAAO,EAAE,oBADV;AAEd,UAAA,OAAO;AAFO,SADP;AAmDI,2BAAmB;AACf,UAAA,OAAO,EAAE,wBADM;AAE9B,UAAA,OAAO;AAFuB,SAnDvB;AAuGI,0BAAkB;AACd,UAAA,OAAO,EAAE,gBADK;AAE7B,UAAA,OAAO;AAFsB;AAvGtB;AADH,KAAP;AAkKD;AApKc,CAAf","sourcesContent":["<template>\n\t<AppDoc name=\"ProgressBarDemo\" :sources=\"sources\" github=\"progressbar/ProgressBarDemo.vue\">\n        <h5>Import</h5>\n<pre v-code.script><code>\nimport ProgressBar from 'primevue/progressbar';\n\n</code></pre>\n\n        <h5>Import via CDN</h5>\n<pre v-code><code>\n&lt;script src=\"https://unpkg.com/primevue@^3/core/core.js\"&gt;&lt;/script&gt;\n\n</code></pre>\n\n\t\t<h5>Getting Started</h5>\n\t\t<p>ProgressBar has two modes; \"determinate\" (default) and \"indeterminate\". In determinate mode, a value between 0 and 100 is required to display the progress.</p>\n<pre v-code><code>\n&lt;ProgressBar :value=\"value\" /&gt;\n\n</code></pre>\n<pre v-code.script><code>\ndata() {\n\treturn {\n\t\tvalue: 0\n\t}\n}\n\n</code></pre>\n\n\t\t<p>Indeterminate is simplly enabled using <i>mode</i> property.</p>\n<pre v-code><code>\n&lt;ProgressBar mode=\"indeterminate\"/&gt;\n\n</code></pre>\n\n        <h5>Slot</h5>\n        <p>A custom label can be placed inside the progress bar via the default slot.</p>\n<pre v-code><code><template v-pre>\n&lt;ProgressBar :value=\"value\"&gt;\n    Percent Complete: &#123;&#123;value&#125;&#125;%\n&lt;/ProgressBar&gt;\n</template>\n</code></pre>\n\n\t\t<h5>Properties</h5>\n\t\t<p>Any property as style and class are passed to the main container element. Following are the additional properties to configure the component.</p>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Default</th>\n                        <th>Description</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>value</td>\n                        <td>number</td>\n                        <td>null</td>\n                        <td>Current value of the progress.</td>\n                    </tr>\n                    <tr>\n                        <td>mode</td>\n                        <td>string</td>\n                        <td>determinate</td>\n                        <td>Defines the mode of the progress, valid values are \"determinate\" and \"indeterminate\".</td>\n                    </tr>\n                    <tr>\n                        <td>showValue</td>\n                        <td>boolean</td>\n                        <td>true</td>\n                        <td>Whether to display the progress bar value.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Styling</h5>\n\t\t<p>Following is the list of structural style classes, for theming classes visit <router-link to=\"/theming\">theming</router-link> page.</p>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Element</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>p-progressbar</td>\n                        <td>Container element.</td>\n                    </tr>\n                    <tr>\n                        <td>p-progressbar-determinate</td>\n                        <td>Container element of a determinate progressbar.</td>\n                    </tr>\n                    <tr>\n                        <td>p-progressbar-indeterminate</td>\n                        <td>Container element of an indeterminate progressbar.</td>\n                    </tr>\n                    <tr>\n                        <td>p-progressbar-value</td>\n                        <td>Element whose width changes according to value.</td>\n                    </tr>\n                    <tr>\n                        <td>p-progressbar-label</td>\n                        <td>Label element that displays the current value.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Dependencies</h5>\n\t\t<p>None.</p>\n    </AppDoc>\n</template>\n\n<script>\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tsources: {\n\t\t\t\t'options-api': {\n                    tabName: 'Options API Source',\n\t\t\t\t\tcontent: `\n<template>\n    <div>\n        <h5>Dynamic</h5>\n        <ProgressBar :value=\"value1\" />\n\n        <h5>Static</h5>\n        <ProgressBar :value=\"value2\" :showValue=\"false\" />\n\n        <h5>Indeterminate</h5>\n        <ProgressBar mode=\"indeterminate\" style=\"height: .5em\" />\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            value1: 0,\n            value2: 50\n        }\n    },\n    interval: null,\n    methods: {\n        startProgress() {\n            this.interval = setInterval(() => {\n                let newValue = this.value1 + Math.floor(Math.random() * 10) + 1;\n                if (newValue >= 100) {\n                    newValue = 100;\n                }\n                this.value1 = newValue;\n            }, 2000);\n        },\n        endProgress() {\n            clearInterval(this.interval);\n            this.interval = null;\n        }\n    },\n    mounted() {\n        this.startProgress();\n    },\n    beforeUnmount() {\n        this.endProgress();\n    }\n}\n<\\\\/script>\n`\n\t\t\t\t},\n                'composition-api': {\n                    tabName: 'Composition API Source',\n\t\t\t\t\tcontent: `\n<template>\n    <div>\n        <h5>Dynamic</h5>\n        <ProgressBar :value=\"value1\" />\n\n        <h5>Static</h5>\n        <ProgressBar :value=\"value2\" :showValue=\"false\" />\n\n        <h5>Indeterminate</h5>\n        <ProgressBar mode=\"indeterminate\" style=\"height: .5em\" />\n    </div>\n</template>\n\n<script>\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            startProgress();\n        })\n\n        onBeforeUnmount(() => {\n            endProgress();\n        })\n        \n        const value1 = ref(0);\n        const value2 = ref(50);\n        const interval = ref(null);\n        const startProgress = () => {\n            interval.value = setInterval(() => {\n                let newValue = value1.value + Math.floor(Math.random() * 10) + 1;\n                if (newValue >= 100) {\n                    newValue = 100;\n                }\n                value1.value = newValue;\n            }, 2000);\n        };\n        const endProgress = () => {\n            clearInterval(interval.value);\n            interval.value = null;\n        };\n\n        return { value1, value2 }\n    }\n}\n<\\\\/script>`\n\n\t\t\t\t},\n                'browser-source': {\n                    tabName: 'Browser Source',\n\t\t\t\t\tcontent: `<div id=\"app\">\n            <h5>Dynamic</h5>\n            <p-progressbar :value=\"value1\"></p-progressbar>\n\n            <h5>Static</h5>\n            <p-progressbar :value=\"value2\" :show-value=\"false\"></p-progressbar>\n\n            <h5>Indeterminate</h5>\n            <p-progressbar mode=\"indeterminate\" style=\"height: .5em\"></p-progressbar>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref, onMounted, onBeforeUnmount } = Vue;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    startProgress();\n                })\n\n                onBeforeUnmount(() => {\n                    endProgress();\n                })\n                \n                const value1 = ref(0);\n                const value2 = ref(50);\n                const interval = ref(null);\n                const startProgress = () => {\n                    interval.value = setInterval(() => {\n                        let newValue = value1.value + Math.floor(Math.random() * 10) + 1;\n                        if (newValue >= 100) {\n                            newValue = 100;\n                        }\n                        value1.value = newValue;\n                    }, 2000);\n                };\n                const endProgress = () => {\n                    clearInterval(interval.value);\n                    interval.value = null;\n                };\n\n                return { value1, value2 }\n            },\n            components: {\n                \"p-progressbar\": primevue.progressbar\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\\\/script>`\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n</script>\n"],"sourceRoot":""}]}