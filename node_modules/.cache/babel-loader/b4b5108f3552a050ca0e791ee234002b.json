{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/autocomplete/AutoCompleteDoc.vue?vue&type=template&id=4af0cc63","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/autocomplete/AutoCompleteDoc.vue","mtime":1634589566247},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCByZXNvbHZlRGlyZWN0aXZlIGFzIF9yZXNvbHZlRGlyZWN0aXZlLCB3aXRoRGlyZWN0aXZlcyBhcyBfd2l0aERpcmVjdGl2ZXMsIGNyZWF0ZVRleHRWTm9kZSBhcyBfY3JlYXRlVGV4dFZOb2RlLCByZXNvbHZlQ29tcG9uZW50IGFzIF9yZXNvbHZlQ29tcG9uZW50LCB3aXRoQ3R4IGFzIF93aXRoQ3R4LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrIH0gZnJvbSAidnVlIjsKCnZhciBfaG9pc3RlZF8xID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiaDUiLCBudWxsLCAiSW1wb3J0IiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzIgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJjb2RlIiwgbnVsbCwgIlxuaW1wb3J0IEF1dG9Db21wbGV0ZSBmcm9tICdwcmltZXZ1ZS9hdXRvY29tcGxldGUnO1xuXG4iLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImg1IiwgbnVsbCwgIkltcG9ydCB2aWEgQ0ROIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzQgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJjb2RlIiwgbnVsbCwgIlxuPHNjcmlwdCBzcmM9XCJodHRwczovL3VucGtnLmNvbS9wcmltZXZ1ZUBeMy9jb3JlL2NvcmUuanNcIj48L3NjcmlwdD5cbjxzY3JpcHQgc3JjPVwiaHR0cHM6Ly91bnBrZy5jb20vcHJpbWV2dWVAXjMvYXV0b2NvbXBsZXRlL2F1dG9jb21wbGV0ZS5taW4uanNcIj48L3NjcmlwdD5cblxuIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzUgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJoNSIsIG51bGwsICJHZXR0aW5nIFN0YXJ0ZWQiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfNiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInAiLCBudWxsLCAiQXV0b0NvbXBsZXRlIHVzZXMgdi1tb2RlbCBmb3IgdHdvLXdheSBiaW5kaW5nLCByZXF1aXJlcyBhIGxpc3Qgb2Ygc3VnZ2VzdGlvbnMgYW5kIGEgY29tcGxldGUgbWV0aG9kIHRvIHF1ZXJ5IGZvciB0aGUgcmVzdWx0cy4gVGhlIGNvbXBsZXRlIG1ldGhvZCBnZXRzIHRoZSBxdWVyeSB0ZXh0IGFzIGV2ZW50LnF1ZXJ5IHByb3BlcnR5IGFuZCBzaG91bGQgdXBkYXRlIHRoZSBzdWdnZXN0aW9ucyB3aXRoIHRoZSBzZWFyY2ggcmVzdWx0cy4gRXhhbXBsZSBiZWxvdyBjb25uZWN0cyB0byBhIHJlbW90ZSBkYXRhc291cmNlIHRvIGZldGNoIHRoZSByZXN1bHRzOyIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF83ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiY29kZSIsIG51bGwsICJcbjxBdXRvQ29tcGxldGUgdi1tb2RlbD1cInNlbGVjdGVkQ291bnRyeVwiIDpzdWdnZXN0aW9ucz1cImZpbHRlcmVkQ291bnRyaWVzQmFzaWNcIiBAY29tcGxldGU9XCJzZWFyY2hDb3VudHJ5KCRldmVudClcIiBmaWVsZD1cIm5hbWVcIiAvPlxuXG4iLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfOCA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImNvZGUiLCBudWxsLCAiXG5leHBvcnQgZGVmYXVsdCB7XG5cdGRhdGEoKSB7XG5cdFx0cmV0dXJuIHtcblx0XHRcdHNlbGVjdGVkQ291bnRyeTogbnVsbCxcblx0XHRcdGZpbHRlcmVkQ291bnRyaWVzOiBudWxsXG5cdFx0fVxuXHR9LFxuXHRjb3VudHJ5U2VydmljZTogbnVsbCxcblx0Y3JlYXRlZCgpIHtcblx0XHR0aGlzLmNvdW50cnlTZXJ2aWNlID0gbmV3IENvdW50cnlTZXJ2aWNlKCk7XG5cdH0sXG5cdG1ldGhvZHM6IHtcblx0XHRzZWFyY2hDb3VudHJ5KGV2ZW50KSB7XG4gICAgICAgICAgICB0aGlzLmZpbHRlcmVkQ291bnRyaWVzQmFzaWMgPSB0aGlzLmNvdW50cnlTZXJ2aWNlLnNlYXJjaChldmVudC5xdWVyeSk7XG5cdFx0fVxuXHR9XG59XG5cbiIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF85ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiaDUiLCBudWxsLCAiRHJvcGRvd24iLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMTAgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJwIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCJFbmFibGluZyAiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiaSIsIG51bGwsICJkcm9wZG93biIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiIHByb3BlcnR5IGRpc3BsYXlzIGEgYnV0dG9uIG5leHQgdG8gdGhlIGlucHV0IGZpZWxkIHdoZXJlIGNsaWNrIGJlaGF2aW9yIG9mIHRoZSBidXR0b24gaXMgZGVmaW5lZCB1c2luZyBkcm9wZG93bk1vZGUgcHJvcGVydHkgdGhhdCB0YWtlcyBcImJsYW5rXCIgb3IgXCJjdXJyZW50XCIgYXMgcG9zc2libGUgdmFsdWVzLiBcImJsYW5rXCIgaXMgdGhlIGRlZmF1bHQgbW9kZSB0byBzZW5kIGEgcXVlcnkgd2l0aCBhbiBlbXB0eSBzdHJpbmcgd2hlcmVhcyBcImN1cnJlbnRcIiBzZXR0aW5nIHNlbmRzIGEgcXVlcnkgd2l0aCB0aGUgY3VycmVudCB2YWx1ZSBvZiB0aGUgaW5wdXQuIildLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMTEgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJjb2RlIiwgbnVsbCwgIlxuPEF1dG9Db21wbGV0ZSB2LW1vZGVsPVwiYnJhbmRcIiA6ZHJvcGRvd249XCJ0cnVlXCIgOnN1Z2dlc3Rpb25zPVwiZmlsdGVyZWRCcmFuZHNcIiBAY29tcGxldGU9XCJzZWFyY2hCcmFuZCgkZXZlbnQpXCIgcGxhY2Vob2xkZXI9XCJIaW50OiB0eXBlICd2JyBvciAnZidcIiAvPlxuXG4iLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMTIgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJoNSIsIG51bGwsICJNdWx0aXBsZSBNb2RlIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzEzID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgicCIsIG51bGwsIFsvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiTXVsdGlwbGUgbW9kZSBpcyBlbmFibGVkIHVzaW5nICIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJpIiwgbnVsbCwgIm11bHRpcGxlIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCIgcHJvcGVydHkgdG8gc2VsZWN0IG1vcmUgdGhhbiBvbmUgdmFsdWUgZnJvbSB0aGUgYXV0b2NvbXBsZXRlLiBJbiB0aGlzIGNhc2UsIHZhbHVlIHJlZmVyZW5jZSBzaG91bGQgYmUgYW4gYXJyYXkuIildLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMTQgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJjb2RlIiwgbnVsbCwgIlxuPEF1dG9Db21wbGV0ZSA6bXVsdGlwbGU9XCJ0cnVlXCIgdi1tb2RlbD1cInNlbGVjdGVkQ291bnRyaWVzXCIgOnN1Z2dlc3Rpb25zPVwiZmlsdGVyZWRDb3VudHJpZXNNdWx0aXBsZVwiIEBjb21wbGV0ZT1cInNlYXJjaENvdW50cnlNdWx0aXBsZSgkZXZlbnQpXCIgZmllbGQ9XCJuYW1lXCIgLz5cblxuIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzE1ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiaDUiLCBudWxsLCAiT2JqZWN0cyIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8xNiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInAiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIkF1dG9Db21wbGV0ZSBjYW4gYWxzbyB3b3JrIHdpdGggb2JqZWN0cyB1c2luZyB0aGUgIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImkiLCBudWxsLCAiZmllbGQiKSwgLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIiBwcm9wZXJ0eSB0aGF0IGRlZmluZXMgdGhlIGxhYmVsIHRvIGRpc3BsYXkgYXMgYSBzdWdnZXN0aW9uLiBUaGUgdmFsdWUgcGFzc2VkIHRvIHRoZSBtb2RlbCB3b3VsZCBzdGlsbCBiZSB0aGUgb2JqZWN0IGluc3RhbmNlIG9mIGEgc3VnZ2VzdGlvbi4gSGVyZSBpcyBhbiBleGFtcGxlIHdpdGggYSBDb3VudHJ5IG9iamVjdCB0aGF0IGhhcyBuYW1lIGFuZCBjb2RlIGZpZWxkcyBzdWNoIGFzIHtuYW1lOlwiVW5pdGVkIFN0YXRlc1wiLGNvZGU6XCJVU0FcIn0uIildLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMTcgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJjb2RlIiwgbnVsbCwgIlxuPEF1dG9Db21wbGV0ZSBmaWVsZD1cImxhYmVsXCIgdi1tb2RlbD1cInNlbGVjdGVkQ291bnRyeVwiIDpzdWdnZXN0aW9ucz1cImZpbHRlcmVkQ291bnRyaWVzQmFzaWNcIiBAY29tcGxldGU9XCJzZWFyY2hDb3VudHJ5QmFzaWMoJGV2ZW50KVwiIC8+XG5cbiIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8xOCA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImg1IiwgbnVsbCwgIkdyb3VwaW5nIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzE5ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgicCIsIG51bGwsIFsvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiT3B0aW9ucyBncm91cHMgYXJlIHNwZWNpZmllZCB3aXRoIHRoZSAiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiaSIsIG51bGwsICJvcHRpb25Hcm91cExhYmVsIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCIgYW5kICIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJpIiwgbnVsbCwgIm9wdGlvbkdyb3VwQ2hpbGRyZW4iKSwgLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIiBwcm9wZXJ0aWVzLiIpXSwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzIwID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiY29kZSIsIG51bGwsICJcbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBkYXRhKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc2VsZWN0ZWRHcm91cGVkQ2l0eTogbnVsbCxcbiAgICAgICAgICAgIGdyb3VwZWRDaXRpZXM6IFt7XG4gICAgICAgICAgICAgICAgbGFiZWw6ICdHZXJtYW55JywgY29kZTogJ0RFJyxcbiAgICAgICAgICAgICAgICBpdGVtczogW1xuICAgICAgICAgICAgICAgICAgICB7bGFiZWw6ICdCZXJsaW4nLCB2YWx1ZTogJ0Jlcmxpbid9LFxuICAgICAgICAgICAgICAgICAgICB7bGFiZWw6ICdGcmFua2Z1cnQnLCB2YWx1ZTogJ0ZyYW5rZnVydCd9LFxuICAgICAgICAgICAgICAgICAgICB7bGFiZWw6ICdIYW1idXJnJywgdmFsdWU6ICdIYW1idXJnJ30sXG4gICAgICAgICAgICAgICAgICAgIHtsYWJlbDogJ011bmljaCcsIHZhbHVlOiAnTXVuaWNoJ31cbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGxhYmVsOiAnVVNBJywgY29kZTogJ1VTJyxcbiAgICAgICAgICAgICAgICBpdGVtczogW1xuICAgICAgICAgICAgICAgICAgICB7bGFiZWw6ICdDaGljYWdvJywgdmFsdWU6ICdDaGljYWdvJ30sXG4gICAgICAgICAgICAgICAgICAgIHtsYWJlbDogJ0xvcyBBbmdlbGVzJywgdmFsdWU6ICdMb3MgQW5nZWxlcyd9LFxuICAgICAgICAgICAgICAgICAgICB7bGFiZWw6ICdOZXcgWW9yaycsIHZhbHVlOiAnTmV3IFlvcmsnfSxcbiAgICAgICAgICAgICAgICAgICAge2xhYmVsOiAnU2FuIEZyYW5jaXNjbycsIHZhbHVlOiAnU2FuIEZyYW5jaXNjbyd9XG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBsYWJlbDogJ0phcGFuJywgY29kZTogJ0pQJyxcbiAgICAgICAgICAgICAgICBpdGVtczogW1xuICAgICAgICAgICAgICAgICAgICB7bGFiZWw6ICdLeW90bycsIHZhbHVlOiAnS3lvdG8nfSxcbiAgICAgICAgICAgICAgICAgICAge2xhYmVsOiAnT3Nha2EnLCB2YWx1ZTogJ09zYWthJ30sXG4gICAgICAgICAgICAgICAgICAgIHtsYWJlbDogJ1Rva3lvJywgdmFsdWU6ICdUb2t5byd9LFxuICAgICAgICAgICAgICAgICAgICB7bGFiZWw6ICdZb2tvaGFtYScsIHZhbHVlOiAnWW9rb2hhbWEnfVxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgIH1dXG4gICAgICAgIH1cbiAgICB9XG59XG4iLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMjEgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJjb2RlIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRlbXBsYXRlIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCJcbjxBdXRvQ29tcGxldGUgdi1tb2RlbD1cInNlbGVjdGVkQ2l0eVwiIDpzdWdnZXN0aW9ucz1cImZpbHRlcmVkQ2l0aWVzXCIgQGNvbXBsZXRlPVwic2VhcmNoQ2l0eSgkZXZlbnQpXCJcbiAgICBmaWVsZD1cImxhYmVsXCIgb3B0aW9uR3JvdXBMYWJlbD1cImxhYmVsXCIgb3B0aW9uR3JvdXBDaGlsZHJlbj1cIml0ZW1zXCI+PC9BdXRvQ29tcGxldGU+XG4iKV0pLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiXG4iKV0sIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8yMiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImg1IiwgbnVsbCwgIkZvcmNlIFNlbGVjdGlvbiIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8yMyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInAiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIkZvcmNlU2VsZWN0aW9uIG1vZGUgdmFsaWRhdGVzIHRoZSBtYW51YWwgaW5wdXQgdG8gY2hlY2sgd2hldGhlciBpdCBhbHNvIGV4aXN0cyBpbiB0aGUgc3VnZ2VzdGlvbnMgbGlzdCwgaWYgbm90IHRoZSBpbnB1dCB2YWx1ZSBpcyBjbGVhcmVkIHRvIG1ha2Ugc3VyZSB0aGUgdmFsdWUgcGFzc2VkIHRvIHRoZSBtb2RlbCBpcyBhbHdheXMgb25lIG9mIHRoZSBzdWdnZXN0aW9ucy4gU2ltcGx5IGVuYWJsZSAiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiaSIsIG51bGwsICJmb3JjZVNlbGVjdGlvbiIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiIHRvIGVuZm9yY2UgdGhhdCBpbnB1dCBpcyBhbHdheXMgZnJvbSB0aGUgc3VnZ2VzdGlvbiBsaXN0LiIpXSwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzI0ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiY29kZSIsIG51bGwsICJcbjxBdXRvQ29tcGxldGUgZm9yY2VTZWxlY3Rpb24gdi1tb2RlbD1cImJyYW5kXCIgOnN1Z2dlc3Rpb25zPVwiZmlsdGVyZWRCcmFuZHNcIiBAY29tcGxldGU9XCJzZWFyY2hCcmFuZCgkZXZlbnQpXCIgLz5cblxuIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzI1ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiaDUiLCBudWxsLCAiVGVtcGxhdGluZyIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8yNiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInAiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIkl0ZW0gdGVtcGxhdGUgYWxsb3dzIGRpc3BsYXlpbmcgY3VzdG9tIGNvbnRlbnQgaW5zaWRlIHRoZSBzdWdnZXN0aW9ucyBwYW5lbC4gVGhlIHNsb3RQcm9wcyB2YXJpYWJsZSBwYXNzZWQgdG8gdGhlIHRlbXBsYXRlIHByb3ZpZGVzIGFuIGl0ZW0gcHJvcGVydHkgdG8gcmVwcmVzZW50IGFuIGl0ZW0gaW4gdGhlIHN1Z2dlc3Rpb25zIGNvbGxlY3Rpb24uIEluIGFkZGl0aW9uICIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJpIiwgbnVsbCwgIm9wdGlvbmdyb3VwIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCIsICIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJpIiwgbnVsbCwgImNoaXAiKSwgLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIiwgIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImkiLCBudWxsLCAiaGVhZGVyIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCIgYW5kICIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJpIiwgbnVsbCwgImZvb3RlciIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiIHNsb3RzIGFyZSBwcm92aWRlZCBmb3IgZnVydGhlciBjdXN0b21pemF0aW9uIildLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMjcgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJjb2RlIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRlbXBsYXRlIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCJcbjxBdXRvQ29tcGxldGUgdi1tb2RlbD1cImJyYW5kXCIgOnN1Z2dlc3Rpb25zPVwiZmlsdGVyZWRCcmFuZHNcIiBAY29tcGxldGU9XCJzZWFyY2hCcmFuZCgkZXZlbnQpXCIgcGxhY2Vob2xkZXI9XCJIaW50OiB0eXBlICd2JyBvciAnZidcIiA6ZHJvcGRvd249XCJ0cnVlXCI+XG4gICAgPHRlbXBsYXRlICNpdGVtPVwic2xvdFByb3BzXCI+XG5cdFx0PGltZyA6YWx0PVwic2xvdFByb3BzLml0ZW1cIiA6c3JjPVwiJ2RlbW8vaW1hZ2VzL2Nhci8nICsgc2xvdFByb3BzLml0ZW0gKyAnLnBuZydcIiAvPlxuICAgICAgICA8ZGl2Pnt7c2xvdFByb3BzLml0ZW19fTwvZGl2PlxuXHQ8L3RlbXBsYXRlPlxuPC9BdXRvQ29tcGxldGU+XG4iKV0pLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiXG4iKV0sIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8yOCA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImg1IiwgbnVsbCwgIlByb3BlcnRpZXMiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMjkgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJwIiwgbnVsbCwgIkFueSBwcm9wZXJ0eSBzdWNoIGFzIG5hbWUgYW5kIHBsYWNlaG9sZGVyIGFyZSBwYXNzZWQgdG8gdGhlIHVuZGVybHlpbmcgaW5wdXQgZWxlbWVudC4gRm9sbG93aW5nIGFyZSB0aGUgYWRkaXRpb25hbCBwcm9wZXJ0aWVzIHRvIGNvbmZpZ3VyZSB0aGUgY29tcG9uZW50LiIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8zMCA9IHsKICBjbGFzczogImRvYy10YWJsZXdyYXBwZXIiCn07CnZhciBfaG9pc3RlZF8zMSA9IHsKICBjbGFzczogImRvYy10YWJsZSIKfTsKCnZhciBfaG9pc3RlZF8zMiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRoZWFkIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRyIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRoIiwgbnVsbCwgIk5hbWUiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGgiLCBudWxsLCAiVHlwZSIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0aCIsIG51bGwsICJEZWZhdWx0IiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRoIiwgbnVsbCwgIkRlc2NyaXB0aW9uIildKV0sIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8zMyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRyIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgIm1vZGVsVmFsdWUiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiYW55IiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgIm51bGwiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiVmFsdWUgb2YgdGhlIGNvbXBvbmVudC4iKV0sIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8zNCA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRyIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgInN1Z2dlc3Rpb25zIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgImFycmF5IiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgIm51bGwiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiQW4gYXJyYXkgb2Ygc3VnZ2VzdGlvbnMgdG8gZGlzcGxheS4iKV0sIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8zNSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRyIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgImZpZWxkIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgImFueSIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJudWxsIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgIlByb3BlcnR5IG5hbWUgb3IgZ2V0dGVyIGZ1bmN0aW9uIG9mIGEgc3VnZ2VzdGVkIG9iamVjdCB0byByZXNvbHZlIGFuZCBkaXNwbGF5LiIpXSwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzM2ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidHIiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAib3B0aW9uR3JvdXBMYWJlbCIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJzdHJpbmciKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAibnVsbCIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJQcm9wZXJ0eSBuYW1lIG9yIGdldHRlciBmdW5jdGlvbiB0byB1c2UgYXMgdGhlIGxhYmVsIG9mIGFuIG9wdGlvbiBncm91cC4iKV0sIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8zNyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRyIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgIm9wdGlvbkdyb3VwQ2hpbGRyZW4iKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAic3RyaW5nIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgIm51bGwiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiUHJvcGVydHkgbmFtZSBvciBnZXR0ZXIgZnVuY3Rpb24gdGhhdCByZWZlcnMgdG8gdGhlIGNoaWxkcmVuIG9wdGlvbnMgb2Ygb3B0aW9uIGdyb3VwLiIpXSwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzM4ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidHIiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAic2Nyb2xsSGVpZ2h0IiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgInN0cmluZyIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICIyMDBweCIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJNYXhpbXVtIGhlaWdodCBvZiB0aGUgc3VnZ2VzdGlvbnMgcGFuZWwuIildLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMzkgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ciIsIG51bGwsIFsvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJkcm9wZG93biIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJib29sZWFuIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgImZhbHNlIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgIkRpc3BsYXlzIGEgYnV0dG9uIG5leHQgdG8gdGhlIGlucHV0IGZpZWxkIHdoZW4gZW5hYmxlZC4iKV0sIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF80MCA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRyIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgImRyb3Bkb3duTW9kZSIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJzdHJpbmciKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiYmxhbmsiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiU3BlY2lmaWVzIHRoZSBiZWhhdmlvciBkcm9wZG93biBidXR0b24uIERlZmF1bHQgXCJibGFua1wiIG1vZGUgc2VuZHMgYW4gZW1wdHkgc3RyaW5nIGFuZCBcImN1cnJlbnRcIiBtb2RlIHNlbmRzIHRoZSBpbnB1dCB2YWx1ZS4iKV0sIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF80MSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRyIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgImF1dG9IaWdobGlnaHQiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiYm9vbGVhbiIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJmYWxzZSIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJIaWdobGlnaHRzIGF1dG9tYXRpY2FsbHkgdGhlIGZpcnN0IGl0ZW0gb2YgdGhlIGRyb3Bkb3duIHRvIGJlIHNlbGVjdGVkLiIpXSwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzQyID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidHIiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAibXVsdGlwbGUiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiYm9vbGVhbiIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJmYWxzZSIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJTcGVjaWZpZXMgaWYgbXVsdGlwbGUgdmFsdWVzIGNhbiBiZSBzZWxlY3RlZC4iKV0sIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF80MyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRyIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgIm1pbkxlbmd0aCIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJudW1iZXIiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiMSIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJNaW5pbXVtIG51bWJlciBvZiBjaGFyYWN0ZXJzIHRvIGluaXRpYXRlIGEgc2VhcmNoLiIpXSwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzQ0ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidHIiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiY29tcGxldGVPbkZvY3VzIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgImJvb2xlYW4iKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiZmFsc2UiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiV2hldGhlciB0byBydW4gYSBxdWVyeSB3aGVuIGlucHV0IHJlY2VpdmVzIGZvY3VzLiIpXSwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzQ1ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidHIiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiZGVsYXkiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAibnVtYmVyIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgIjMwMCIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJEZWxheSBiZXR3ZWVuIGtleXN0cm9rZXMgdG8gd2FpdCBiZWZvcmUgc2VuZGluZyBhIHF1ZXJ5LiIpXSwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzQ2ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidHIiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiYXBwZW5kVG8iKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAic3RyaW5nIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgImJvZHkiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiQSB2YWxpZCBxdWVyeSBzZWxlY3RvciBvciBhbiBIVE1MRWxlbWVudCB0byBzcGVjaWZ5IHdoZXJlIHRoZSBvdmVybGF5IGdldHMgYXR0YWNoZWQuIFNwZWNpYWwga2V5d29yZHMgYXJlIFwiYm9keVwiIGZvciBkb2N1bWVudCBib2R5IGFuZCBcInNlbGZcIiBmb3IgdGhlIGVsZW1lbnQgaXRzZWxmLiIpXSwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzQ3ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidHIiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiZm9yY2VTZWxlY3Rpb24iKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiYm9vbGVhbiIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJmYWxzZSIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJXaGVuIHByZXNlbnQsIGF1dG9jb21wbGV0ZSBjbGVhcnMgdGhlIG1hbnVhbCBpbnB1dCBpZiBpdCBkb2VzIG5vdCBtYXRjaCBvZiB0aGUgc3VnZ2VzdGlvbnMgdG8gZm9yY2Ugb25seSBhY2NlcHRpbmcgdmFsdWVzIGZyb20gdGhlIHN1Z2dlc3Rpb25zLiIpXSwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzQ4ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidHIiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiaW5wdXRTdHlsZSIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJhbnkiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAibnVsbCIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJJbmxpbmUgc3R5bGUgb2YgdGhlIGlucHV0IGZpZWxkLiIpXSwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzQ5ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidHIiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiaW5wdXRDbGFzcyIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJzdHJpbmciKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAibnVsbCIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJTdHlsZSBjbGFzcyBvZiB0aGUgaW5wdXQgZmllbGQuIildLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfNTAgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ciIsIG51bGwsIFsvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJzdHlsZSIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJhbnkiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAibnVsbCIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJTdHlsZSBjbGFzcyBvZiB0aGUgY29tcG9uZW50IGlucHV0IGZpZWxkLiIpXSwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzUxID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidHIiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiY2xhc3MiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAic3RyaW5nIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgIm51bGwiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiSW5saW5lIHN0eWxlIG9mIHRoZSBjb21wb25lbnQuIildLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfNTIgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ciIsIG51bGwsIFsvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJwYW5lbENsYXNzIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgInN0cmluZyIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJudWxsIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgIlN0eWxlIGNsYXNzIG9mIHRoZSBvdmVybGF5IHBhbmVsLiIpXSwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzUzID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAidmlydHVhbFNjcm9sbGVyT3B0aW9ucyIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF81NCA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgIm9iamVjdCIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF81NSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgIm51bGwiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfNTYgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiV2hldGhlciB0byB1c2UgdGhlIHZpcnR1YWxTY3JvbGxlciBmZWF0dXJlLiBUaGUgcHJvcGVydGllcyBvZiAiKTsKCnZhciBfaG9pc3RlZF81NyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCJWaXJ0dWFsU2Nyb2xsZXIiKTsKCnZhciBfaG9pc3RlZF81OCA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCIgY29tcG9uZW50IGNhbiBiZSB1c2VkIGxpa2UgYW4gb2JqZWN0IGluIGl0LiIpOwoKdmFyIF9ob2lzdGVkXzU5ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiaDUiLCBudWxsLCAiRXZlbnRzIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzYwID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgicCIsIG51bGwsICJBbnkgdmFsaWQgZXZlbnQgc3VjaCBhcyBmb2N1cywgYmx1ciBhbmQgaW5wdXQgYXJlIHBhc3NlZCB0byB0aGUgdW5kZXJseWluZyBpbnB1dCBlbGVtZW50LiBGb2xsb3dpbmcgYXJlIHRoZSBhZGRpdGlvbmFsIGV2ZW50cyB0byBjb25maWd1cmUgdGhlIGNvbXBvbmVudC4iLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfNjEgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJkaXYiLCB7CiAgY2xhc3M6ICJkb2MtdGFibGV3cmFwcGVyIgp9LCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGFibGUiLCB7CiAgY2xhc3M6ICJkb2MtdGFibGUiCn0sIFsvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0aGVhZCIsIG51bGwsIFsvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ciIsIG51bGwsIFsvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0aCIsIG51bGwsICJOYW1lIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRoIiwgbnVsbCwgIlBhcmFtZXRlcnMiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGgiLCBudWxsLCAiRGVzY3JpcHRpb24iKV0pXSksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRib2R5IiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRyIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgImNvbXBsZXRlIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCIgZXZlbnQub3JpZ2luYWxFdmVudDogQnJvd3NlciBldmVudCAiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiYnIiKSwgLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIiBldmVudC5xdWVyeTogVmFsdWUgdG8gc2VhcmNoIHdpdGggIildKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiQ2FsbGJhY2sgdG8gaW52b2tlIHRvIHNlYXJjaCBmb3Igc3VnZ2VzdGlvbnMuIildKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidHIiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiaXRlbS1zZWxlY3QiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoImV2ZW50Lm9yaWdpbmFsRXZlbnQ6IEJyb3dzZXIgZXZlbnQgIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImJyIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCIgZXZlbnQudmFsdWU6IFNlbGVjdGVkIGl0ZW0iKV0pLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJDYWxsYmFjayB0byBpbnZva2Ugd2hlbiBhIHN1Z2dlc3Rpb24gaXMgc2VsZWN0ZWQuIildKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidHIiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiaXRlbS11bnNlbGVjdCIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsIFsvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiZXZlbnQub3JpZ2luYWxFdmVudDogQnJvd3NlciBldmVudCAiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiYnIiKSwgLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIiBldmVudC52YWx1ZTogVW5zZWxlY3RlZCBpdGVtIildKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiQ2FsbGJhY2sgdG8gaW52b2tlIHdoZW4gYSBzZWxlY3RlZCB2YWx1ZSBpcyByZW1vdmVkLiIpXSksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRyIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgImRyb3Bkb3duLWNsaWNrIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCIgZXZlbnQub3JpZ2luYWxFdmVudDogYnJvd3NlciBldmVudCAiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiYnIiKSwgLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIiBldmVudC5xdWVyeTogQ3VycmVudCB2YWx1ZSBvZiB0aGUgaW5wdXQgZmllbGQgIildKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiQ2FsbGJhY2sgdG8gaW52b2tlIHRvIHdoZW4gZHJvcGRvd24gYnV0dG9uIGlzIGNsaWNrZWQuIildKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidHIiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiY2xlYXIiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiLSIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJDYWxsYmFjayB0byBpbnZva2Ugd2hlbiBpbnB1dCBpcyBjbGVhcmVkIGJ5IHRoZSB1c2VyLiIpXSldKV0pXSwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzYyID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiaDUiLCBudWxsLCAiU2xvdHMiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfNjMgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJkaXYiLCB7CiAgY2xhc3M6ICJkb2MtdGFibGV3cmFwcGVyIgp9LCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGFibGUiLCB7CiAgY2xhc3M6ICJkb2MtdGFibGUiCn0sIFsvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0aGVhZCIsIG51bGwsIFsvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ciIsIG51bGwsIFsvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0aCIsIG51bGwsICJOYW1lIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRoIiwgbnVsbCwgIlBhcmFtZXRlcnMiKV0pXSksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRib2R5IiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRyIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgIml0ZW0iKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIml0ZW06IE9wdGlvbiBpbnN0YW5jZSAiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiYnIiKSwgLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIiBpbmRleDogSW5kZXggb2YgdGhlIG9wdGlvbiIpXSldKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidHIiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAib3B0aW9uZ3JvdXAiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIml0ZW06IE9wdGlvbkdyb3VwIGluc3RhbmNlICIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJiciIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiIGluZGV4OiBJbmRleCBvZiB0aGUgb3B0aW9uIGdyb3VwIildKV0pLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ciIsIG51bGwsIFsvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJoZWFkZXIiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoInZhbHVlOiBWYWx1ZSBvZiB0aGUgY29tcG9uZW50ICIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJiciIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiIHN1Z2dlc3Rpb25zOiBEaXNwbGF5ZWQgb3B0aW9ucyIpXSldKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidHIiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiZm9vdGVyIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCJ2YWx1ZTogVmFsdWUgb2YgdGhlIGNvbXBvbmVudCAiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiYnIiKSwgLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIiBzdWdnZXN0aW9uczogRGlzcGxheWVkIG9wdGlvbnMiKV0pXSksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRyIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgImNoaXAiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAidmFsdWU6IEEgdmFsdWUgaW4gdGhlIHNlbGVjdGlvbiIpXSksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRyIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgImNvbnRlbnQiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIml0ZW1zOiBBbiBhcnJheSBvZiBvYmplY3RzIHRvIGRpc3BsYXkgZm9yIHZpcnR1YWxzY3JvbGxlciIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJiciIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiIHN0eWxlQ2xhc3M6IFN0eWxlIGNsYXNzIG9mIHRoZSBjb21wb25lbnQiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiYnIiKSwgLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIiBjb250ZW50UmVmOiBSZWZlcmFuY2Ugb2YgdGhlIGNvbnRlbnQiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiYnIiKSwgLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIiBnZXRJdGVtT3B0aW9uczogT3B0aW9ucyBvZiB0aGUgaXRlbXMiKV0pXSksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRyIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgImxvYWRlciIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJvcHRpb25zOiBPcHRpb25zIG9mIHRoZSBsb2FkZXIgaXRlbXMgZm9yIHZpcnR1YWxzY3JvbGxlciIpXSldKV0pXSwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzY0ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiaDUiLCBudWxsLCAiU3R5bGluZyIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF82NSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInAiLCBudWxsLCAiRm9sbG93aW5nIGlzIHRoZSBsaXN0IG9mIHN0cnVjdHVyYWwgc3R5bGUgY2xhc3NlcyIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF82NiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImRpdiIsIHsKICBjbGFzczogImRvYy10YWJsZXdyYXBwZXIiCn0sIFsvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0YWJsZSIsIHsKICBjbGFzczogImRvYy10YWJsZSIKfSwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRoZWFkIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRyIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRoIiwgbnVsbCwgIk5hbWUiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGgiLCBudWxsLCAiRWxlbWVudCIpXSldKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGJvZHkiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidHIiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAicC1hdXRvY29tcGxldGUiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiQ29udGFpbmVyIGVsZW1lbnQiKV0pLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ciIsIG51bGwsIFsvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJwLWF1dG9jb21wbGV0ZS1wYW5lbCIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJPdmVybGF5IHBhbmVsIG9mIHN1Z2dlc3Rpb25zLiIpXSksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRyIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgInAtYXV0b2NvbXBsZXRlLWl0ZW1zIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgIkxpc3QgY29udGFpbmVyIG9mIHN1Z2dlc3Rpb25zLiIpXSksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRyIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgInAtYXV0b2NvbXBsZXRlLWl0ZW0iKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiTGlzdCBpdGVtIG9mIGEgc3VnZ2VzdGlvbi4iKV0pLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ciIsIG51bGwsIFsvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJwLWF1dG9jb21wbGV0ZS10b2tlbiIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZCIsIG51bGwsICJFbGVtZW50IG9mIGEgc2VsZWN0ZWQgaXRlbSBpbiBtdWx0aXBsZSBtb2RlLiIpXSksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRyIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgInAtYXV0b2NvbXBsZXRlLXRva2VuLWljb24iKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgidGQiLCBudWxsLCAiQ2xvc2UgaWNvbiBlbGVtZW50IG9mIGEgc2VsZWN0ZWQgaXRlbSBpbiBtdWx0aXBsZSBtb2RlLiIpXSksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRyIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgInAtYXV0b2NvbXBsZXRlLXRva2VuLWxhYmVsIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInRkIiwgbnVsbCwgIkxhYmVsIG9mIGEgc2VsZWN0ZWQgaXRlbSBpbiBtdWx0aXBsZSBtb2RlLiIpXSldKV0pXSwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzY3ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiaDUiLCBudWxsLCAiRGVwZW5kZW5jaWVzIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzY4ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgicCIsIG51bGwsICJOb25lLiIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF9jb21wb25lbnRfcm91dGVyX2xpbmsgPSBfcmVzb2x2ZUNvbXBvbmVudCgicm91dGVyLWxpbmsiKTsKCiAgdmFyIF9jb21wb25lbnRfQXBwRG9jID0gX3Jlc29sdmVDb21wb25lbnQoIkFwcERvYyIpOwoKICB2YXIgX2RpcmVjdGl2ZV9jb2RlID0gX3Jlc29sdmVEaXJlY3RpdmUoImNvZGUiKTsKCiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9jb21wb25lbnRfQXBwRG9jLCB7CiAgICBuYW1lOiAiQXV0b0NvbXBsZXRlRGVtbyIsCiAgICBzb3VyY2VzOiAkZGF0YS5zb3VyY2VzLAogICAgc2VydmljZTogWydDb3VudHJ5U2VydmljZSddLAogICAgZGF0YTogWydjb3VudHJpZXMnXSwKICAgIGdpdGh1YjogImF1dG9jb21wbGV0ZS9BdXRvQ29tcGxldGVEZW1vLnZ1ZSIKICB9LCB7CiAgICBkZWZhdWx0OiBfd2l0aEN0eChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBbX2hvaXN0ZWRfMSwgX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVWTm9kZSgicHJlIiwgbnVsbCwgW19ob2lzdGVkXzJdLCA1MTIKICAgICAgLyogTkVFRF9QQVRDSCAqLwogICAgICApLCBbW19kaXJlY3RpdmVfY29kZSwgdm9pZCAwLCB2b2lkIDAsIHsKICAgICAgICBzY3JpcHQ6IHRydWUKICAgICAgfV1dKSwgX2hvaXN0ZWRfMywgX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVWTm9kZSgicHJlIiwgbnVsbCwgW19ob2lzdGVkXzRdLCA1MTIKICAgICAgLyogTkVFRF9QQVRDSCAqLwogICAgICApLCBbW19kaXJlY3RpdmVfY29kZV1dKSwgX2hvaXN0ZWRfNSwgX2hvaXN0ZWRfNiwgX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVWTm9kZSgicHJlIiwgbnVsbCwgW19ob2lzdGVkXzddLCA1MTIKICAgICAgLyogTkVFRF9QQVRDSCAqLwogICAgICApLCBbW19kaXJlY3RpdmVfY29kZV1dKSwgX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVWTm9kZSgicHJlIiwgbnVsbCwgW19ob2lzdGVkXzhdLCA1MTIKICAgICAgLyogTkVFRF9QQVRDSCAqLwogICAgICApLCBbW19kaXJlY3RpdmVfY29kZSwgdm9pZCAwLCB2b2lkIDAsIHsKICAgICAgICBzY3JpcHQ6IHRydWUKICAgICAgfV1dKSwgX2hvaXN0ZWRfOSwgX2hvaXN0ZWRfMTAsIF93aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoInByZSIsIG51bGwsIFtfaG9pc3RlZF8xMV0sIDUxMgogICAgICAvKiBORUVEX1BBVENIICovCiAgICAgICksIFtbX2RpcmVjdGl2ZV9jb2RlXV0pLCBfaG9pc3RlZF8xMiwgX2hvaXN0ZWRfMTMsIF93aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoInByZSIsIG51bGwsIFtfaG9pc3RlZF8xNF0sIDUxMgogICAgICAvKiBORUVEX1BBVENIICovCiAgICAgICksIFtbX2RpcmVjdGl2ZV9jb2RlXV0pLCBfaG9pc3RlZF8xNSwgX2hvaXN0ZWRfMTYsIF93aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoInByZSIsIG51bGwsIFtfaG9pc3RlZF8xN10sIDUxMgogICAgICAvKiBORUVEX1BBVENIICovCiAgICAgICksIFtbX2RpcmVjdGl2ZV9jb2RlXV0pLCBfaG9pc3RlZF8xOCwgX2hvaXN0ZWRfMTksIF93aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoInByZSIsIG51bGwsIFtfaG9pc3RlZF8yMF0sIDUxMgogICAgICAvKiBORUVEX1BBVENIICovCiAgICAgICksIFtbX2RpcmVjdGl2ZV9jb2RlLCB2b2lkIDAsIHZvaWQgMCwgewogICAgICAgIHNjcmlwdDogdHJ1ZQogICAgICB9XV0pLCBfd2l0aERpcmVjdGl2ZXMoX2NyZWF0ZVZOb2RlKCJwcmUiLCBudWxsLCBbX2hvaXN0ZWRfMjFdLCA1MTIKICAgICAgLyogTkVFRF9QQVRDSCAqLwogICAgICApLCBbW19kaXJlY3RpdmVfY29kZV1dKSwgX2hvaXN0ZWRfMjIsIF9ob2lzdGVkXzIzLCBfd2l0aERpcmVjdGl2ZXMoX2NyZWF0ZVZOb2RlKCJwcmUiLCBudWxsLCBbX2hvaXN0ZWRfMjRdLCA1MTIKICAgICAgLyogTkVFRF9QQVRDSCAqLwogICAgICApLCBbW19kaXJlY3RpdmVfY29kZV1dKSwgX2hvaXN0ZWRfMjUsIF9ob2lzdGVkXzI2LCBfd2l0aERpcmVjdGl2ZXMoX2NyZWF0ZVZOb2RlKCJwcmUiLCBudWxsLCBbX2hvaXN0ZWRfMjddLCA1MTIKICAgICAgLyogTkVFRF9QQVRDSCAqLwogICAgICApLCBbW19kaXJlY3RpdmVfY29kZV1dKSwgX2hvaXN0ZWRfMjgsIF9ob2lzdGVkXzI5LCBfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzMwLCBbX2NyZWF0ZVZOb2RlKCJ0YWJsZSIsIF9ob2lzdGVkXzMxLCBbX2hvaXN0ZWRfMzIsIF9jcmVhdGVWTm9kZSgidGJvZHkiLCBudWxsLCBbX2hvaXN0ZWRfMzMsIF9ob2lzdGVkXzM0LCBfaG9pc3RlZF8zNSwgX2hvaXN0ZWRfMzYsIF9ob2lzdGVkXzM3LCBfaG9pc3RlZF8zOCwgX2hvaXN0ZWRfMzksIF9ob2lzdGVkXzQwLCBfaG9pc3RlZF80MSwgX2hvaXN0ZWRfNDIsIF9ob2lzdGVkXzQzLCBfaG9pc3RlZF80NCwgX2hvaXN0ZWRfNDUsIF9ob2lzdGVkXzQ2LCBfaG9pc3RlZF80NywgX2hvaXN0ZWRfNDgsIF9ob2lzdGVkXzQ5LCBfaG9pc3RlZF81MCwgX2hvaXN0ZWRfNTEsIF9ob2lzdGVkXzUyLCBfY3JlYXRlVk5vZGUoInRyIiwgbnVsbCwgW19ob2lzdGVkXzUzLCBfaG9pc3RlZF81NCwgX2hvaXN0ZWRfNTUsIF9jcmVhdGVWTm9kZSgidGQiLCBudWxsLCBbX2hvaXN0ZWRfNTYsIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X3JvdXRlcl9saW5rLCB7CiAgICAgICAgdG86ICIvdmlydHVhbHNjcm9sbGVyIgogICAgICB9LCB7CiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICAgICAgcmV0dXJuIFtfaG9pc3RlZF81N107CiAgICAgICAgfSksCiAgICAgICAgXzogMQogICAgICAgIC8qIFNUQUJMRSAqLwoKICAgICAgfSksIF9ob2lzdGVkXzU4XSldKV0pXSldKSwgX2hvaXN0ZWRfNTksIF9ob2lzdGVkXzYwLCBfaG9pc3RlZF82MSwgX2hvaXN0ZWRfNjIsIF9ob2lzdGVkXzYzLCBfaG9pc3RlZF82NCwgX2hvaXN0ZWRfNjUsIF9ob2lzdGVkXzY2LCBfaG9pc3RlZF82NywgX2hvaXN0ZWRfNjhdOwogICAgfSksCiAgICBfOiAxCiAgICAvKiBTVEFCTEUgKi8KCiAgfSwgOAogIC8qIFBST1BTICovCiAgLCBbInNvdXJjZXMiXSk7Cn0="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/autocomplete/AutoCompleteDoc.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <AppDoc name=\"AutoCompleteDemo\" :sources=\"sources\" :service=\"['CountryService']\" :data=\"['countries']\" github=\"autocomplete/AutoCompleteDemo.vue\">\n        <h5>Import</h5>\n<pre v-code.script><code>\nimport AutoComplete from 'primevue/autocomplete';\n\n</code></pre>\n\n        <h5>Import via CDN</h5>\n<pre v-code><code>\n&lt;script src=\"https://unpkg.com/primevue@^3/core/core.js\"&gt;&lt;/script&gt;\n&lt;script src=\"https://unpkg.com/primevue@^3/autocomplete/autocomplete.min.js\"&gt;&lt;/script&gt;\n\n</code></pre>\n\n\t\t<h5>Getting Started</h5>\n\t\t<p>AutoComplete uses v-model for two-way binding, requires a list of suggestions and a complete method to query for the results. The complete method\n\t\t\tgets the query text as event.query property and should update the suggestions with the search results. Example below connects to a remote datasource to fetch the results;</p>\n<pre v-code><code>\n&lt;AutoComplete v-model=\"selectedCountry\" :suggestions=\"filteredCountriesBasic\" @complete=\"searchCountry($event)\" field=\"name\" /&gt;\n\n</code></pre>\n<pre v-code.script><code>\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tselectedCountry: null,\n\t\t\tfilteredCountries: null\n\t\t}\n\t},\n\tcountryService: null,\n\tcreated() {\n\t\tthis.countryService = new CountryService();\n\t},\n\tmethods: {\n\t\tsearchCountry(event) {\n            this.filteredCountriesBasic = this.countryService.search(event.query);\n\t\t}\n\t}\n}\n\n</code></pre>\n\n\t\t<h5>Dropdown</h5>\n\t\t<p>Enabling <i>dropdown</i> property displays a button next to the input field where click behavior of the button is defined using\n\t\t\tdropdownMode property that takes \"blank\" or \"current\" as possible values.\n\t\t\t\"blank\" is the default mode to send a query with an empty string whereas\n\t\t\t\"current\" setting sends a query with the current value of the input.</p>\n<pre v-code><code>\n&lt;AutoComplete v-model=\"brand\" :dropdown=\"true\" :suggestions=\"filteredBrands\" @complete=\"searchBrand($event)\" placeholder=\"Hint: type 'v' or 'f'\" /&gt;\n\n</code></pre>\n\n\t\t<h5>Multiple Mode</h5>\n\t\t<p>Multiple mode is enabled using <i>multiple</i> property to select more than one value from the autocomplete. In this case, value reference should be an array.</p>\n<pre v-code><code>\n&lt;AutoComplete :multiple=\"true\" v-model=\"selectedCountries\" :suggestions=\"filteredCountriesMultiple\" @complete=\"searchCountryMultiple($event)\" field=\"name\" /&gt;\n\n</code></pre>\n\n\t\t<h5>Objects</h5>\n\t\t<p>AutoComplete can also work with objects using the  <i>field</i> property that defines the label to display\n\t\t\tas a suggestion. The value passed to the model would still be the object instance of a suggestion.\n\t\t\tHere is an example with a Country object that has name and code fields such as &#123;name:\"United States\",code:\"USA\"&#125;.</p>\n<pre v-code><code>\n&lt;AutoComplete field=\"label\" v-model=\"selectedCountry\" :suggestions=\"filteredCountriesBasic\" @complete=\"searchCountryBasic($event)\" /&gt;\n\n</code></pre>\n\n        <h5>Grouping</h5>\n\t\t<p>Options groups are specified with the <i>optionGroupLabel</i> and <i>optionGroupChildren</i> properties.</p>\n<pre v-code.script><code>\nexport default {\n    data() {\n        return {\n            selectedGroupedCity: null,\n            groupedCities: [{\n                label: 'Germany', code: 'DE',\n                items: [\n                    {label: 'Berlin', value: 'Berlin'},\n                    {label: 'Frankfurt', value: 'Frankfurt'},\n                    {label: 'Hamburg', value: 'Hamburg'},\n                    {label: 'Munich', value: 'Munich'}\n                ]\n            },\n            {\n                label: 'USA', code: 'US',\n                items: [\n                    {label: 'Chicago', value: 'Chicago'},\n                    {label: 'Los Angeles', value: 'Los Angeles'},\n                    {label: 'New York', value: 'New York'},\n                    {label: 'San Francisco', value: 'San Francisco'}\n                ]\n            },\n            {\n                label: 'Japan', code: 'JP',\n                items: [\n                    {label: 'Kyoto', value: 'Kyoto'},\n                    {label: 'Osaka', value: 'Osaka'},\n                    {label: 'Tokyo', value: 'Tokyo'},\n                    {label: 'Yokohama', value: 'Yokohama'}\n                ]\n            }]\n        }\n    }\n}\n</code></pre>\n\n<pre v-code><code><template v-pre>\n&lt;AutoComplete v-model=\"selectedCity\" :suggestions=\"filteredCities\" @complete=\"searchCity($event)\"\n    field=\"label\" optionGroupLabel=\"label\" optionGroupChildren=\"items\"&gt;&lt;/AutoComplete&gt;\n</template>\n</code></pre>\n\n        <h5>Force Selection</h5>\n        <p>ForceSelection mode validates the manual input to check whether it also exists in the suggestions list, if not the input value is cleared\n        to make sure the value passed to the model is always one of the suggestions. Simply enable <i>forceSelection</i> to enforce that input is always from the suggestion list.</p>\n<pre v-code><code>\n&lt;AutoComplete forceSelection v-model=\"brand\" :suggestions=\"filteredBrands\" @complete=\"searchBrand($event)\" /&gt;\n\n</code></pre>\n\n\t\t<h5>Templating</h5>\n\t\t<p>Item template allows displaying custom content inside the suggestions panel. The slotProps variable passed to the template provides an item property to represent an item in the suggestions collection.\n            In addition <i>optiongroup</i>, <i>chip</i>, <i>header</i> and <i>footer</i> slots are provided for further customization</p>\n<pre v-code><code><template v-pre>\n&lt;AutoComplete v-model=\"brand\" :suggestions=\"filteredBrands\" @complete=\"searchBrand($event)\" placeholder=\"Hint: type 'v' or 'f'\" :dropdown=\"true\"&gt;\n    &lt;template #item=\"slotProps\"&gt;\n\t\t&lt;img :alt=\"slotProps.item\" :src=\"'demo/images/car/' + slotProps.item + '.png'\" /&gt;\n        &lt;div&gt;{{slotProps.item}}&lt;/div&gt;\n\t&lt;/template&gt;\n&lt;/AutoComplete&gt;\n</template>\n</code></pre>\n\n\t\t<h5>Properties</h5>\n        <p>Any property such as name and placeholder are passed to the underlying input element. Following are the additional properties to configure the component.</p>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Default</th>\n                        <th>Description</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>modelValue</td>\n                        <td>any</td>\n                        <td>null</td>\n                        <td>Value of the component.</td>\n                    </tr>\n                    <tr>\n                        <td>suggestions</td>\n                        <td>array</td>\n                        <td>null</td>\n                        <td>An array of suggestions to display.</td>\n                    </tr>\n                    <tr>\n                        <td>field</td>\n                        <td>any</td>\n                        <td>null</td>\n                        <td>Property name or getter function of a suggested object to resolve and display.</td>\n                    </tr>\n                    <tr>\n                        <td>optionGroupLabel</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Property name or getter function to use as the label of an option group.</td>\n                    </tr>\n                    <tr>\n                        <td>optionGroupChildren</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Property name or getter function that refers to the children options of option group.</td>\n                    </tr>\n                    <tr>\n                        <td>scrollHeight</td>\n                        <td>string</td>\n                        <td>200px</td>\n                        <td>Maximum height of the suggestions panel.</td>\n                    </tr>\n                    <tr>\n                        <td>dropdown</td>\n                        <td>boolean</td>\n                        <td>false</td>\n                        <td>Displays a button next to the input field when enabled.</td>\n                    </tr>\n                    <tr>\n                        <td>dropdownMode</td>\n                        <td>string</td>\n                        <td>blank</td>\n                        <td>Specifies the behavior dropdown button. Default \"blank\" mode sends an empty string and \"current\" mode sends the input value.</td>\n                    </tr>\n                    <tr>\n                        <td>autoHighlight</td>\n                        <td>boolean</td>\n                        <td>false</td>\n                        <td>Highlights automatically the first item of the dropdown to be selected.</td>\n                    </tr>\n                    <tr>\n                        <td>multiple</td>\n                        <td>boolean</td>\n                        <td>false</td>\n                        <td>Specifies if multiple values can be selected.</td>\n                    </tr>\n                    <tr>\n                        <td>minLength</td>\n                        <td>number</td>\n                        <td>1</td>\n                        <td>Minimum number of characters to initiate a search.</td>\n                    </tr>\n                    <tr>\n                        <td>completeOnFocus</td>\n                        <td>boolean</td>\n                        <td>false</td>\n                        <td>Whether to run a query when input receives focus.</td>\n                    </tr>\n                    <tr>\n                        <td>delay</td>\n                        <td>number</td>\n                        <td>300</td>\n                        <td>Delay between keystrokes to wait before sending a query.</td>\n                    </tr>\n                    <tr>\n                        <td>appendTo</td>\n                        <td>string</td>\n                        <td>body</td>\n                        <td>A valid query selector or an HTMLElement to specify where the overlay gets attached. Special keywords are \"body\" for document body\n                        and \"self\" for the element itself.</td>\n                    </tr>\n                    <tr>\n                        <td>forceSelection</td>\n                        <td>boolean</td>\n                        <td>false</td>\n                        <td>When present, autocomplete clears the manual input if it does not match of the suggestions to force only\n                        accepting values from the suggestions.</td>\n                    </tr>\n                    <tr>\n                        <td>inputStyle</td>\n                        <td>any</td>\n                        <td>null</td>\n                        <td>Inline style of the input field.</td>\n                    </tr>\n                    <tr>\n                        <td>inputClass</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Style class of the input field.</td>\n                    </tr>\n                    <tr>\n                        <td>style</td>\n                        <td>any</td>\n                        <td>null</td>\n                        <td>Style class of the component input field.</td>\n                    </tr>\n                    <tr>\n                        <td>class</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Inline style of the component.</td>\n                    </tr>\n                    <tr>\n                        <td>panelClass</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Style class of the overlay panel.</td>\n                    </tr>\n                    <tr>\n                        <td>virtualScrollerOptions</td>\n                        <td>object</td>\n                        <td>null</td>\n                        <td>Whether to use the virtualScroller feature. The properties of <router-link to=\"/virtualscroller\">VirtualScroller</router-link> component can be used like an object in it.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Events</h5>\n        <p>Any valid event such as focus, blur and input are passed to the underlying input element. Following are the additional events to configure the component.</p>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Parameters</th>\n                        <th>Description</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>complete</td>\n                        <td>\n                            event.originalEvent: Browser event <br />\n                            event.query: Value to search with\n                        </td>\n                        <td>Callback to invoke to search for suggestions.</td>\n                    </tr>\n                    <tr>\n                        <td>item-select</td>\n                        <td>event.originalEvent: Browser event <br />\n                            event.value: Selected item</td>\n                        <td>Callback to invoke when a suggestion is selected.</td>\n                    </tr>\n                    <tr>\n                        <td>item-unselect</td>\n                        <td>event.originalEvent: Browser event <br />\n                            event.value: Unselected item</td>\n                        <td>Callback to invoke when a selected value is removed.</td>\n                    </tr>\n                    <tr>\n                        <td>dropdown-click</td>\n                        <td>\n                            event.originalEvent: browser event <br />\n                            event.query: Current value of the input field\n                        </td>\n                        <td>Callback to invoke to when dropdown button is clicked.</td>\n                    </tr>\n                    <tr>\n                        <td>clear</td>\n                        <td>-</td>\n                        <td>Callback to invoke when input is cleared by the user.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n        <h5>Slots</h5>\n\t\t<div class=\"doc-tablewrapper\">\n            <table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Parameters</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>item</td>\n                        <td>item: Option instance <br />\n                            index: Index of the option</td>\n                    </tr>\n                    <tr>\n                        <td>optiongroup</td>\n                        <td>item: OptionGroup instance <br />\n                            index: Index of the option group</td>\n                    </tr>\n                    <tr>\n                        <td>header</td>\n                        <td>value: Value of the component <br />\n                            suggestions: Displayed options</td>\n                    </tr>\n                    <tr>\n                        <td>footer</td>\n                        <td>value: Value of the component <br />\n                            suggestions: Displayed options</td>\n                    </tr>\n                    <tr>\n                        <td>chip</td>\n                        <td>value: A value in the selection</td>\n                    </tr>\n                    <tr>\n                        <td>content</td>\n                        <td>items: An array of objects to display for virtualscroller<br />\n                            styleClass: Style class of the component<br />\n                            contentRef: Referance of the content<br />\n                            getItemOptions: Options of the items</td>\n                    </tr>\n                    <tr>\n                        <td>loader</td>\n                        <td>options: Options of the loader items for virtualscroller</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n        </div>\n\n\t\t<h5>Styling</h5>\n\t\t<p>Following is the list of structural style classes</p>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Element</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>p-autocomplete</td>\n                        <td>Container element</td>\n                    </tr>\n                    <tr>\n                        <td>p-autocomplete-panel</td>\n                        <td>Overlay panel of suggestions.</td>\n                    </tr>\n                    <tr>\n                        <td>p-autocomplete-items</td>\n                        <td>List container of suggestions.</td>\n                    </tr>\n                    <tr>\n                        <td>p-autocomplete-item</td>\n                        <td>List item of a suggestion.</td>\n                    </tr>\n                    <tr>\n                        <td>p-autocomplete-token</td>\n                        <td>Element of a selected item in multiple mode.</td>\n                    </tr>\n                    <tr>\n                        <td>p-autocomplete-token-icon</td>\n                        <td>Close icon element of a selected item in multiple mode.</td>\n                    </tr>\n                    <tr>\n                        <td>p-autocomplete-token-label</td>\n                        <td>Label of a selected item in multiple mode.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Dependencies</h5>\n\t\t<p>None.</p>\n    </AppDoc>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            sources:{\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content:`\n<template>\n    <div>\n        <div>\n            <h5>Basic</h5>\n            <AutoComplete v-model=\"selectedCountry1\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\" />\n\n            <h5>Grouped</h5>\n            <AutoComplete v-model=\"selectedCity\" :suggestions=\"filteredCities\" @complete=\"searchCity($event)\" field=\"label\" optionGroupLabel=\"label\" optionGroupChildren=\"items\">\n                <template #optiongroup=\"slotProps\">\n                    <div class=\"p-d-flex p-ai-center country-item\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"18\" />\n                        <div class=\"p-ml-2\">{{slotProps.item.label}}</div>\n                    </div>\n                </template>\n            </AutoComplete>\n\n            <h5>Dropdown, Templating and Force Selection</h5>\n            <AutoComplete v-model=\"selectedCountry2\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" :dropdown=\"true\" field=\"name\" forceSelection>\n                <template #item=\"slotProps\">\n                    <div class=\"country-item\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"18\" />\n                        <div class=\"p-ml-2\">{{slotProps.item.name}}</div>\n                    </div>\n                </template>\n            </AutoComplete>\n\n            <h5>Virtual Scroll (1000 Items)</h5>\n            <AutoComplete v-model=\"selectedItem\" :suggestions=\"filteredItems\" @complete=\"searchItems\" :virtualScrollerOptions=\"{ itemSize: 31 }\" field=\"label\" dropdown />\n\n            <h5>Multiple</h5>\n            <span class=\"p-fluid\">\n                <AutoComplete :multiple=\"true\" v-model=\"selectedCountries\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\" />\n            </span>\n        </div>\n    </div>\n</template>\n\n<script>\nimport CountryService from './service/CountryService';\nimport {FilterService,FilterMatchMode} from 'primevue/api';\n\nexport default {\n    data() {\n        return {\n            countries: null,\n            selectedCountry1: null,\n            selectedCountry2: null,\n            selectedCity: null,\n            filteredCities: null,\n            filteredCountries: null,\n            selectedCountries: [],\n            selectedItem: null,\n            filteredItems: null,\n            groupedCities: [{\n                label: 'Germany', code: 'DE',\n                items: [\n                    {label: 'Berlin', value: 'Berlin'},\n                    {label: 'Frankfurt', value: 'Frankfurt'},\n                    {label: 'Hamburg', value: 'Hamburg'},\n                    {label: 'Munich', value: 'Munich'}\n                ]\n            },\n            {\n                label: 'USA', code: 'US',\n                items: [\n                    {label: 'Chicago', value: 'Chicago'},\n                    {label: 'Los Angeles', value: 'Los Angeles'},\n                    {label: 'New York', value: 'New York'},\n                    {label: 'San Francisco', value: 'San Francisco'}\n                ]\n            },\n            {\n                label: 'Japan', code: 'JP',\n                items: [\n                    {label: 'Kyoto', value: 'Kyoto'},\n                    {label: 'Osaka', value: 'Osaka'},\n                    {label: 'Tokyo', value: 'Tokyo'},\n                    {label: 'Yokohama', value: 'Yokohama'}\n                ]\n            }],\n            items: Array.from({ length: 1000 }, (_, i) => ({ label: \\`Item #\\${i}\\`, value: i }))\n        }\n    },\n    countryService: null,\n    created() {\n        this.countryService = new CountryService();\n    },\n    mounted() {\n        this.countryService.getCountries().then(data => this.countries = data);\n    },\n    methods: {\n        searchCountry(event) {\n            setTimeout(() => {\n                if (!event.query.trim().length) {\n                    this.filteredCountries = [...this.countries];\n                }\n                else {\n                    this.filteredCountries = this.countries.filter((country) => {\n                        return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n                    });\n                }\n            }, 250);\n        },\n        searchCity(event) {\n            let query = event.query;\n            let filteredCities = [];\n\n            for (let country of this.groupedCities) {\n                let filteredItems = FilterService.filter(country.items, ['label'], query, FilterMatchMode.CONTAINS);\n                if (filteredItems && filteredItems.length) {\n                    filteredCities.push({...country, ...{items: filteredItems}});\n                }\n            }\n\n            this.filteredCities = filteredCities;\n        },\n        searchItems(event) {\n            //in a real application, make a request to a remote url with the query and return filtered results, for demo we filter at client side\n            let query = event.query;\n            let filteredItems = [];\n\n            for(let i = 0; i < this.items.length; i++) {\n                let item = this.items[i];\n                if (item.label.toLowerCase().indexOf(query.toLowerCase()) === 0) {\n                    filteredItems.push(item);\n                }\n            }\n\n            this.filteredItems = filteredItems;\n        }\n    }\n}\n<\\\\/script>`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content:`\n<template>\n    <div>\n        <div>\n            <h5>Basic</h5>\n            <AutoComplete v-model=\"selectedCountry1\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\" />\n\n            <h5>Grouped</h5>\n            <AutoComplete v-model=\"selectedCity\" :suggestions=\"filteredCities\" @complete=\"searchCity($event)\" field=\"label\" optionGroupLabel=\"label\" optionGroupChildren=\"items\">\n                <template #optiongroup=\"slotProps\">\n                    <div class=\"p-d-flex p-ai-center country-item\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"18\" />\n                        <div class=\"p-ml-2\">{{slotProps.item.label}}</div>\n                    </div>\n                </template>\n            </AutoComplete>\n\n            <h5>Dropdown, Templating and Force Selection</h5>\n            <AutoComplete v-model=\"selectedCountry2\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" :dropdown=\"true\" field=\"name\" forceSelection>\n                <template #item=\"slotProps\">\n                    <div class=\"country-item\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"18\" />\n                        <div class=\"p-ml-2\">{{slotProps.item.name}}</div>\n                    </div>\n                </template>\n            </AutoComplete>\n\n            <h5>Virtual Scroll (1000 Items)</h5>\n            <AutoComplete v-model=\"selectedItem\" :suggestions=\"filteredItems\" @complete=\"searchItems\" :virtualScrollerOptions=\"{ itemSize: 31 }\" field=\"label\" dropdown />\n\n            <h5>Multiple</h5>\n            <span class=\"p-fluid\">\n                <AutoComplete :multiple=\"true\" v-model=\"selectedCountries\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\" />\n            </span>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport CountryService from './service/CountryService';\nimport {FilterService,FilterMatchMode} from 'primevue/api';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            countryService.value.getCountries().then(data => countries.value = data);\n        })\n\n        const countries = ref();\n        const countryService = ref(new CountryService());\n        const selectedCountry1 = ref();\n        const selectedCountry2 = ref();\n        const selectedCity = ref();\n        const filteredCities = ref();\n        const filteredCountries = ref();\n        const selectedCountries = ref([]);\n        const selectedItem = ref();\n        const filteredItems = ref();\n        const groupedCities = ref ([{\n            label: 'Germany', code: 'DE',\n            items: [\n                {label: 'Berlin', value: 'Berlin'},\n                {label: 'Frankfurt', value: 'Frankfurt'},\n                {label: 'Hamburg', value: 'Hamburg'},\n                {label: 'Munich', value: 'Munich'}\n            ]\n        },\n        {\n            label: 'USA', code: 'US',\n            items: [\n                {label: 'Chicago', value: 'Chicago'},\n                {label: 'Los Angeles', value: 'Los Angeles'},\n                {label: 'New York', value: 'New York'},\n                {label: 'San Francisco', value: 'San Francisco'}\n            ]\n        },\n        {\n            label: 'Japan', code: 'JP',\n            items: [\n                {label: 'Kyoto', value: 'Kyoto'},\n                {label: 'Osaka', value: 'Osaka'},\n                {label: 'Tokyo', value: 'Tokyo'},\n                {label: 'Yokohama', value: 'Yokohama'}\n            ]\n        }]);\n        const items = Array.from({ length: 1000 }, (_, i) => ({ label: \\`Item #\\${i}\\`, value: i }));\n\n        const searchCountry = (event) => {\n            setTimeout(() => {\n                if (!event.query.trim().length) {\n                    filteredCountries.value = [...countries.value];\n                }\n                else {\n                    filteredCountries.value = countries.value.filter((country) => {\n                        return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n                    });\n                }\n            }, 250);\n        };\n        const searchCity = (event) => {\n            let query = event.query;\n            let newFilteredCities = [];\n\n            for (let country of groupedCities.value) {\n                let filteredItems = FilterService.filter(country.items, ['label'], query, FilterMatchMode.CONTAINS);\n                if (filteredItems && filteredItems.length) {\n                    newFilteredCities.push({...country, ...{items: filteredItems}});\n                }\n            }\n\n            filteredCities.value = newFilteredCities;\n        }\n        const searchItems = (event) => {\n            //in a real application, make a request to a remote url with the query and return filtered results, for demo we filter at client side\n            let query = event.query;\n            let _filteredItems = [];\n\n            for(let i = 0; i < this.items.length; i++) {\n                let item = this.items[i];\n                if (item.label.toLowerCase().indexOf(query.toLowerCase()) === 0) {\n                    _filteredItems.push(item);\n                }\n            }\n\n            filteredItems.value = _filteredItems;\n        }\n\n        return { countries, countryService, selectedCountry1, selectedCountry2, selectedCity, filteredCities, filteredCountries, selectedCountries, groupedCities, searchCountry, searchCity, searchItems, selectedItem, filteredItems, items }\n    }\n}\n<\\\\/script>`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/autocomplete/autocomplete.min.js\"><\\\\/script>\n        <script src=\"./CountryService.js\"><\\\\/script>`,\n                    content:`<div id=\"app\">\n            <h5>Basic</h5>\n            <p-autocomplete v-model=\"selectedCountry1\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\"></p-autocomplete>\n\n            <h5>Grouped</h5>\n            <p-autocomplete v-model=\"selectedCity\" :suggestions=\"filteredCities\" @complete=\"searchCity($event)\" field=\"label\" option-group-label=\"label\" option-group-children=\"items\">\n                <template #optiongroup=\"slotProps\">\n                    <div class=\"p-d-flex p-ai-center country-item\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"18\" />\n                        <div class=\"p-ml-2\">{{slotProps.item.label}}</div>\n                    </div>\n                </template>\n            </p-autocomplete>\n\n            <h5>Dropdown, Templating and Force Selection</h5>\n            <p-autocomplete v-model=\"selectedCountry2\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" :dropdown=\"true\" field=\"name\" force-selection>\n                <template #item=\"slotProps\">\n                    <div class=\"country-item\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"18\" />\n                        <div class=\"p-ml-2\">{{slotProps.item.name}}</div>\n                    </div>\n                </template>\n            </p-autocomplete>\n\n            <h5>Virtual Scroll (1000 Items)</h5>\n            <p-autocomplete v-model=\"selectedItem\" :suggestions=\"filteredItems\" @complete=\"searchItems\" :virtual-scroller-options=\"{ itemSize: 31 }\" field=\"label\" dropdown></p-autocomplete>\n\n            <h5>Multiple</h5>\n            <span class=\"p-fluid\">\n                <p-autocomplete :multiple=\"true\" v-model=\"selectedCountries\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\"></p-autocomplete>\n            </span>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref, onMounted } = Vue;\n        const { FilterService,FilterMatchMode } = primevue.api;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    countryService.value.getCountries().then(data => countries.value = data);\n                })\n\n                const countries = ref();\n                const countryService = ref(new CountryService());\n                const selectedCountry1 = ref();\n                const selectedCountry2 = ref();\n                const selectedCity = ref();\n                const filteredCities = ref();\n                const filteredCountries = ref();\n                const selectedCountries = ref([]);\n                const selectedItem = ref();\n                const filteredItems = ref();\n                const groupedCities = ref ([{\n                    label: 'Germany', code: 'DE',\n                    items: [\n                        {label: 'Berlin', value: 'Berlin'},\n                        {label: 'Frankfurt', value: 'Frankfurt'},\n                        {label: 'Hamburg', value: 'Hamburg'},\n                        {label: 'Munich', value: 'Munich'}\n                    ]\n                },\n                {\n                    label: 'USA', code: 'US',\n                    items: [\n                        {label: 'Chicago', value: 'Chicago'},\n                        {label: 'Los Angeles', value: 'Los Angeles'},\n                        {label: 'New York', value: 'New York'},\n                        {label: 'San Francisco', value: 'San Francisco'}\n                    ]\n                },\n                {\n                    label: 'Japan', code: 'JP',\n                    items: [\n                        {label: 'Kyoto', value: 'Kyoto'},\n                        {label: 'Osaka', value: 'Osaka'},\n                        {label: 'Tokyo', value: 'Tokyo'},\n                        {label: 'Yokohama', value: 'Yokohama'}\n                    ]\n                }]);\n                const items = Array.from({ length: 1000 }, (_, i) => ({ label: \\`Item #\\${i}\\`, value: i }));\n\n                const searchCountry = (event) => {\n                    setTimeout(() => {\n                        if (!event.query.trim().length) {\n                            filteredCountries.value = [...countries.value];\n                        }\n                        else {\n                            filteredCountries.value = countries.value.filter((country) => {\n                                return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n                            });\n                        }\n                    }, 250);\n                };\n                const searchCity = (event) => {\n                    let query = event.query;\n                    let newFilteredCities = [];\n\n                    for (let country of groupedCities.value) {\n                        let filteredItems = FilterService.filter(country.items, ['label'], query, FilterMatchMode.CONTAINS);\n                        if (filteredItems && filteredItems.length) {\n                            newFilteredCities.push({...country, ...{items: filteredItems}});\n                        }\n                    }\n\n                    filteredCities.value = newFilteredCities;\n                };\n                const searchItems = (event) => {\n                    //in a real application, make a request to a remote url with the query and return filtered results, for demo we filter at client side\n                    let query = event.query;\n                    let _filteredItems = [];\n\n                    for(let i = 0; i < this.items.length; i++) {\n                        let item = this.items[i];\n                        if (item.label.toLowerCase().indexOf(query.toLowerCase()) === 0) {\n                            _filteredItems.push(item);\n                        }\n                    }\n\n                    filteredItems.value = _filteredItems;\n                }\n\n                return { countries, countryService, selectedCountry1, selectedCountry2, selectedCity, filteredCities, filteredCountries, selectedCountries, groupedCities, searchCountry, searchCity, searchItems, selectedItem, filteredItems, items }\n            },\n            components: {\n                \"p-autocomplete\": primevue.autocomplete\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\\\/script>`\n                }\n            }\n        }\n    }\n}\n</script>\n"],"sourceRoot":""}]}