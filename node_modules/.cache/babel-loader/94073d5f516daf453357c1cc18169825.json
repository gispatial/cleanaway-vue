{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treetable/TreeTableSelectionDemo.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treetable/TreeTableSelectionDemo.vue","mtime":1634589566292},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treetable/TreeTableSelectionDemo.vue"],"names":[],"mappings":";AA+DA,OAAO,WAAP,MAAwB,2BAAxB;AAEA,eAAe;AACX,EAAA,IADW,kBACJ;AACH,WAAO;AACH,MAAA,YAAY,EAAE,IADX;AAEH,MAAA,YAAY,EAAE,IAFX;AAGH,MAAA,aAAa,EAAE,IAHZ;AAIH,MAAA,aAAa,EAAE,IAJZ;AAKH,MAAA,aAAa,EAAE,IALZ;AAMH,MAAA,KAAK,EAAE,IANJ;AAOH,MAAA,OAAO,EAAE;AACL,uBAAe;AACX,UAAA,OAAO,EAAE,oBADE;AAEX,UAAA,OAAO;AAFI,SADV;AAyFL,2BAAmB;AACf,UAAA,OAAO,EAAE,wBADM;AAEf,UAAA,OAAO;AAFQ,SAzFd;AAgLL,0BAAkB;AACd,UAAA,OAAO,EAAE,gBADK;AAEd,UAAA,OAAO,gaAFO;AAOd,UAAA,OAAO;AAPO;AAhLb;AAPN,KAAP;AA2RH,GA7RU;AA8RX,EAAA,WAAW,EAAE,IA9RF;AA+RX,EAAA,OA/RW,qBA+RD;AACN,SAAK,WAAL,GAAmB,IAAI,WAAJ,EAAnB;AACH,GAjSU;AAkSX,EAAA,OAlSW,qBAkSD;AAAA;;AACN,SAAK,WAAL,CAAiB,iBAAjB,GAAqC,IAArC,CAA0C,UAAA,IAAG;AAAA,aAAK,KAAI,CAAC,KAAL,GAAa,IAAlB;AAAA,KAA7C;AACH,GApSU;AAqSX,EAAA,OAAO,EAAE;AACL,IAAA,YADK,wBACQ,IADR,EACc;AACf,WAAK,MAAL,CAAY,GAAZ,CAAgB;AAAC,QAAA,QAAQ,EAAC,SAAV;AAAqB,QAAA,OAAO,EAAE,eAA9B;AAA+C,QAAA,MAAM,EAAE,IAAI,CAAC,IAAL,CAAU,IAAjE;AAAuE,QAAA,IAAI,EAAE;AAA7E,OAAhB;AACH,KAHI;AAIL,IAAA,cAJK,0BAIU,IAJV,EAIgB;AACjB,WAAK,MAAL,CAAY,GAAZ,CAAgB;AAAC,QAAA,QAAQ,EAAC,SAAV;AAAqB,QAAA,OAAO,EAAE,iBAA9B;AAAiD,QAAA,MAAM,EAAE,IAAI,CAAC,IAAL,CAAU,IAAnE;AAAyE,QAAA,IAAI,EAAE;AAA/E,OAAhB;AACJ;AANK;AArSE,CAAf","sourcesContent":["<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>TreeTable <span>Selection</span></h1>\n                <p>TreeTable supports <b>single</b>, <b>multiple</b> and <b>checkbox</b> as selection modes.</p>\n            </div>\n            <AppDemoActions />\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card\">\n                <h5>Single Selection</h5>\n                <TreeTable :value=\"nodes\" selectionMode=\"single\" v-model:selectionKeys=\"selectedKey1\">\n                    <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                    <Column field=\"size\" header=\"Size\"></Column>\n                    <Column field=\"type\" header=\"Type\"></Column>\n                </TreeTable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Multiple Selection with MetaKey</h5>\n                <TreeTable :value=\"nodes\" selectionMode=\"multiple\" v-model:selectionKeys=\"selectedKeys1\">\n                    <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                    <Column field=\"size\" header=\"Size\"></Column>\n                    <Column field=\"type\" header=\"Type\"></Column>\n                </TreeTable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Multiple Selection without MetaKey</h5>\n                <TreeTable :value=\"nodes\" selectionMode=\"multiple\" v-model:selectionKeys=\"selectedKeys2\" :metaKeySelection=\"false\">\n                    <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                    <Column field=\"size\" header=\"Size\"></Column>\n                    <Column field=\"type\" header=\"Type\"></Column>\n                </TreeTable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Checkbox Selection</h5>\n                <TreeTable :value=\"nodes\" selectionMode=\"checkbox\" v-model:selectionKeys=\"selectedKeys3\">\n                    <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                    <Column field=\"size\" header=\"Size\"></Column>\n                    <Column field=\"type\" header=\"Type\"></Column>\n                </TreeTable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Events</h5>\n                <TreeTable :value=\"nodes\" selectionMode=\"single\" v-model:selectionKeys=\"selectedKey2\"\n                    @node-select=\"onNodeSelect\" @node-unselect=\"onNodeUnselect\">\n                    <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                    <Column field=\"size\" header=\"Size\"></Column>\n                    <Column field=\"type\" header=\"Type\"></Column>\n                </TreeTable>\n            </div>\n        </div>\n\n        <AppDoc name=\"TreeTableSelectionDemo\" :sources=\"sources\" :service=\"['NodeService']\" :data=\"['treetablenodes']\" github=\"treetable/TreeTableSelectionDemo.vue\" />\n    </div>\n</template>\n\n<script>\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            selectedKey1: null,\n            selectedKey2: null,\n            selectedKeys1: null,\n            selectedKeys2: null,\n            selectedKeys3: null,\n            nodes: null,\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div>\n        <Toast />\n\n        <div class=\"card\">\n            <h5>Single Selection</h5>\n            <TreeTable :value=\"nodes\" selectionMode=\"single\" v-model:selectionKeys=\"selectedKey1\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\"></Column>\n                <Column field=\"type\" header=\"Type\"></Column>\n            </TreeTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Multiple Selection with MetaKey</h5>\n            <TreeTable :value=\"nodes\" selectionMode=\"multiple\" v-model:selectionKeys=\"selectedKeys1\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\"></Column>\n                <Column field=\"type\" header=\"Type\"></Column>\n            </TreeTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Multiple Selection without MetaKey</h5>\n            <TreeTable :value=\"nodes\" selectionMode=\"multiple\" v-model:selectionKeys=\"selectedKeys2\" :metaKeySelection=\"false\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\"></Column>\n                <Column field=\"type\" header=\"Type\"></Column>\n            </TreeTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Checkbox Selection</h5>\n            <TreeTable :value=\"nodes\" selectionMode=\"checkbox\" v-model:selectionKeys=\"selectedKeys3\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\"></Column>\n                <Column field=\"type\" header=\"Type\"></Column>\n            </TreeTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Events</h5>\n            <TreeTable :value=\"nodes\" selectionMode=\"single\" v-model:selectionKeys=\"selectedKey2\"\n                @nodeSelect=\"onNodeSelect\" @nodeUnselect=\"onNodeUnselect\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\"></Column>\n                <Column field=\"type\" header=\"Type\"></Column>\n            </TreeTable>\n        </div>\n    </div>                    \n</template>\n\n<script>\nimport NodeService from './service/NodeService';\n\nexport default {\n    data() {\n        return {\n            selectedKey1: null,\n            selectedKey2: null,\n            selectedKeys1: null,\n            selectedKeys2: null,\n            selectedKeys3: null,\n            nodes: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeTableNodes().then(data => this.nodes = data);\n    },\n    methods: {\n        onNodeSelect(node) {\n            this.$toast.add({severity:'success', summary: 'Node Selected', detail: node.data.name, life: 3000});\n        },\n        onNodeUnselect(node) {\n            this.$toast.add({severity:'success', summary: 'Node Unselected', detail: node.data.name, life: 3000});\n        }\n    }\n}\n<\\\\/script>\n`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div>\n        <Toast />\n\n        <div class=\"card\">\n            <h5>Single Selection</h5>\n            <TreeTable :value=\"nodes\" selectionMode=\"single\" v-model:selectionKeys=\"selectedKey1\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\"></Column>\n                <Column field=\"type\" header=\"Type\"></Column>\n            </TreeTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Multiple Selection with MetaKey</h5>\n            <TreeTable :value=\"nodes\" selectionMode=\"multiple\" v-model:selectionKeys=\"selectedKeys1\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\"></Column>\n                <Column field=\"type\" header=\"Type\"></Column>\n            </TreeTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Multiple Selection without MetaKey</h5>\n            <TreeTable :value=\"nodes\" selectionMode=\"multiple\" v-model:selectionKeys=\"selectedKeys2\" :metaKeySelection=\"false\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\"></Column>\n                <Column field=\"type\" header=\"Type\"></Column>\n            </TreeTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Checkbox Selection</h5>\n            <TreeTable :value=\"nodes\" selectionMode=\"checkbox\" v-model:selectionKeys=\"selectedKeys3\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\"></Column>\n                <Column field=\"type\" header=\"Type\"></Column>\n            </TreeTable>\n        </div>\n\n        <div class=\"card\">\n            <h5>Events</h5>\n            <TreeTable :value=\"nodes\" selectionMode=\"single\" v-model:selectionKeys=\"selectedKey2\"\n                @nodeSelect=\"onNodeSelect\" @nodeUnselect=\"onNodeUnselect\">\n                <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                <Column field=\"size\" header=\"Size\"></Column>\n                <Column field=\"type\" header=\"Type\"></Column>\n            </TreeTable>\n        </div>\n    </div>                    \n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { useToast } from 'primevue/usetoast';\nimport NodeService from './service/NodeService';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            nodeService.value.getTreeTableNodes().then(data => nodes.value = data);\n        })\n\n        const toast = useToast();\n        const selectedKey1 = ref();\n        const selectedKey2 = ref();\n        const selectedKeys1 = ref();\n        const selectedKeys2 = ref();\n        const selectedKeys3 = ref();\n        const nodes = ref();\n        const nodeService = ref(new NodeService());\n        const onNodeSelect = (node) => {\n            toast.add({severity:'success', summary: 'Node Selected', detail: node.data.name, life: 3000});\n        }\n        const onNodeUnselect = (node) => {\n            toast.add({severity:'success', summary: 'Node Unselected', detail: node.data.name, life: 3000});\n        }\n\n        return { selectedKey1, selectedKey2, selectedKeys1, selectedKeys2, selectedKeys3, nodes, onNodeSelect, onNodeUnselect}\n    }\n}\n<\\\\/script>\n`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/treetable/treetable.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/column/column.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/toast/toast.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/toastservice/toastservice.min.js\"><\\\\/script>\n        <script src=\"./NodeService.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <p-toast></p-toast>\n\n            <div class=\"card\">\n                <h5>Single Selection</h5>\n                <p-treetable :value=\"nodes\" selection-mode=\"single\" v-model:selection-keys=\"selectedKey1\">\n                    <p-column field=\"name\" header=\"Name\" :expander=\"true\"></p-column>\n                    <p-column field=\"size\" header=\"Size\"></p-column>\n                    <p-column field=\"type\" header=\"Type\"></p-column>\n                </p-treetable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Multiple Selection with MetaKey</h5>\n                <p-treetable :value=\"nodes\" selection-mode=\"multiple\" v-model:selection-keys=\"selectedKeys1\">\n                    <p-column field=\"name\" header=\"Name\" :expander=\"true\"></p-column>\n                    <p-column field=\"size\" header=\"Size\"></p-column>\n                    <p-column field=\"type\" header=\"Type\"></p-column>\n                </p-treetable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Multiple Selection without MetaKey</h5>\n                <p-treetable :value=\"nodes\" selection-mode=\"multiple\" v-model:selection-keys=\"selectedKeys2\" :meta-key-selection=\"false\">\n                    <p-column field=\"name\" header=\"Name\" :expander=\"true\"></p-column>\n                    <p-column field=\"size\" header=\"Size\"></p-column>\n                    <p-column field=\"type\" header=\"Type\"></p-column>\n                </p-treetable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Checkbox Selection</h5>\n                <p-treetable :value=\"nodes\" selection-mode=\"checkbox\" v-model:selection-keys=\"selectedKeys3\">\n                    <p-column field=\"name\" header=\"Name\" :expander=\"true\"></p-column>\n                    <p-column field=\"size\" header=\"Size\"></p-column>\n                    <p-column field=\"type\" header=\"Type\"></p-column>\n                </p-treetable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Events</h5>\n                <p-treetable :value=\"nodes\" selection-mode=\"single\" v-model:selection-keys=\"selectedKey2\"\n                    @node-select=\"onNodeSelect\" @node-unselect=\"onNodeUnselect\">\n                    <p-column field=\"name\" header=\"Name\" :expander=\"true\"></p-column>\n                    <p-column field=\"size\" header=\"Size\"></p-column>\n                    <p-column field=\"type\" header=\"Type\"></p-column>\n                </p-treetable>\n            </div>\n        </div>                    \n\n        <script type=\"module\">\n        const { createApp, ref, onMounted } = Vue;\n        const { useToast } = primevue.usetoast;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    nodeService.value.getTreeTableNodes().then(data => nodes.value = data);\n                })\n\n                const toast = useToast();\n                const selectedKey1 = ref();\n                const selectedKey2 = ref();\n                const selectedKeys1 = ref();\n                const selectedKeys2 = ref();\n                const selectedKeys3 = ref();\n                const nodes = ref();\n                const nodeService = ref(new NodeService());\n                const onNodeSelect = (node) => {\n                    toast.add({severity:'success', summary: 'Node Selected', detail: node.data.name, life: 3000});\n                }\n                const onNodeUnselect = (node) => {\n                    toast.add({severity:'success', summary: 'Node Unselected', detail: node.data.name, life: 3000});\n                }\n\n                return { selectedKey1, selectedKey2, selectedKeys1, selectedKeys2, selectedKeys3, nodes, onNodeSelect, onNodeUnselect}\n            },\n            components: {\n                \"p-treetable\": primevue.treetable,\n                \"p-column\": primevue.column,\n                \"p-toast\": primevue.toast\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .use(primevue.toastservice)\n            .mount(\"#app\");\n        <\\\\/script>\n`\n                }\n            }\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeTableNodes().then(data => this.nodes = data);\n    },\n    methods: {\n        onNodeSelect(node) {\n            this.$toast.add({severity:'success', summary: 'Node Selected', detail: node.data.name, life: 3000});\n        },\n        onNodeUnselect(node) {\n            this.$toast.add({severity:'success', summary: 'Node Unselected', detail: node.data.name, life: 3000});\n        }\n    }\n}\n</script>"],"sourceRoot":""}]}