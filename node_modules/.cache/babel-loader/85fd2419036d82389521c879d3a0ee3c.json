{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/eslint-loader/index.js??ref--13-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/service/NodeService.js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/service/NodeService.js","mtime":1634589566245},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/eslint-loader/index.js","mtime":1634585946289}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvY3JvY3NsdXQvRGVza3RvcC9HaXQvbWFpbi1jbGVhbmF3YXktcHdhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL1VzZXJzL2Nyb2NzbHV0L0Rlc2t0b3AvR2l0L21haW4tY2xlYW5hd2F5LXB3YS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKCnZhciBOb2RlU2VydmljZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gTm9kZVNlcnZpY2UoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTm9kZVNlcnZpY2UpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKE5vZGVTZXJ2aWNlLCBbewogICAga2V5OiAiZ2V0VHJlZVRhYmxlTm9kZXMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldFRyZWVUYWJsZU5vZGVzKCkgewogICAgICByZXR1cm4gZmV0Y2goJ2RlbW8vZGF0YS90cmVldGFibGVub2Rlcy5qc29uJykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC5yb290OwogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRUcmVlTm9kZXMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldFRyZWVOb2RlcygpIHsKICAgICAgcmV0dXJuIGZldGNoKCdkZW1vL2RhdGEvdHJlZW5vZGVzLmpzb24nKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICByZXR1cm4gcmVzLmpzb24oKTsKICAgICAgfSkudGhlbihmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLnJvb3Q7CiAgICAgIH0pOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIE5vZGVTZXJ2aWNlOwp9KCk7CgpleHBvcnQgeyBOb2RlU2VydmljZSBhcyBkZWZhdWx0IH07"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/service/NodeService.js"],"names":["NodeService","fetch","then","res","json","d","root"],"mappings":";;;;IAAqBA,W;;;;;;;WAEjB,6BAAoB;AAChB,aAAOC,KAAK,CAAC,+BAAD,CAAL,CAAuCC,IAAvC,CAA4C,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAA/C,EACEF,IADF,CACO,UAAAG,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAN;AAAA,OADR,CAAP;AAEH;;;WAED,wBAAe;AACX,aAAOL,KAAK,CAAC,0BAAD,CAAL,CAAkCC,IAAlC,CAAuC,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAA1C,EACEF,IADF,CACO,UAAAG,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAN;AAAA,OADR,CAAP;AAEH;;;;;;SAVgBN,W","sourcesContent":["export default class NodeService {\n\n    getTreeTableNodes() {\n        return fetch('demo/data/treetablenodes.json').then(res => res.json())\n                .then(d => d.root);\n    }\n\n    getTreeNodes() {\n        return fetch('demo/data/treenodes.json').then(res => res.json())\n                .then(d => d.root);\n    }\n}\n"]}]}