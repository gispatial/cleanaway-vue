{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treetable/TreeTableTemplatingDemo.vue?vue&type=template&id=20392c7e","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treetable/TreeTableTemplatingDemo.vue","mtime":1634589566292},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBjcmVhdGVUZXh0Vk5vZGUgYXMgX2NyZWF0ZVRleHRWTm9kZSwgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgd2l0aEN0eCBhcyBfd2l0aEN0eCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jayB9IGZyb20gInZ1ZSI7CnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAiY29udGVudC1zZWN0aW9uIGludHJvZHVjdGlvbiIKfTsKCnZhciBfaG9pc3RlZF8yID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiZGl2IiwgewogIGNsYXNzOiAiZmVhdHVyZS1pbnRybyIKfSwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImgxIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCJUcmVlVGFibGUgIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInNwYW4iLCBudWxsLCAiVGVtcGxhdGluZyIpXSksIC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInAiLCBudWxsLCAiQ3VzdG9tIGNvbnRlbnQgYXQgaGVhZGVyLCBib2R5IGFuZCBmb290ZXIgc2VjdGlvbnMgYXJlIHN1cHBvcnRlZCB2aWEgdGVtcGxhdGluZy4iKV0sIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8zID0gewogIGNsYXNzOiAiY29udGVudC1zZWN0aW9uIGltcGxlbWVudGF0aW9uIgp9Owp2YXIgX2hvaXN0ZWRfNCA9IHsKICBjbGFzczogImNhcmQiCn07Cgp2YXIgX2hvaXN0ZWRfNSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCIgRmlsZVN5c3RlbSAiKTsKCnZhciBfaG9pc3RlZF82ID0gewogIHN0eWxlOiB7CiAgICAidGV4dC1hbGlnbiI6ICJsZWZ0IgogIH0KfTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9BcHBEZW1vQWN0aW9ucyA9IF9yZXNvbHZlQ29tcG9uZW50KCJBcHBEZW1vQWN0aW9ucyIpOwoKICB2YXIgX2NvbXBvbmVudF9Db2x1bW4gPSBfcmVzb2x2ZUNvbXBvbmVudCgiQ29sdW1uIik7CgogIHZhciBfY29tcG9uZW50X0J1dHRvbiA9IF9yZXNvbHZlQ29tcG9uZW50KCJCdXR0b24iKTsKCiAgdmFyIF9jb21wb25lbnRfVHJlZVRhYmxlID0gX3Jlc29sdmVDb21wb25lbnQoIlRyZWVUYWJsZSIpOwoKICB2YXIgX2NvbXBvbmVudF9BcHBEb2MgPSBfcmVzb2x2ZUNvbXBvbmVudCgiQXBwRG9jIik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZGl2IiwgbnVsbCwgW19jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMSwgW19ob2lzdGVkXzIsIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X0FwcERlbW9BY3Rpb25zKV0pLCBfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzMsIFtfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzQsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9UcmVlVGFibGUsIHsKICAgIHZhbHVlOiAkZGF0YS5ub2RlcwogIH0sIHsKICAgIGhlYWRlcjogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gW19ob2lzdGVkXzVdOwogICAgfSksCiAgICBmb290ZXI6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFtfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzYsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9CdXR0b24sIHsKICAgICAgICBpY29uOiAicGkgcGktcmVmcmVzaCIKICAgICAgfSldKV07CiAgICB9KSwKICAgIGRlZmF1bHQ6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9Db2x1bW4sIHsKICAgICAgICBmaWVsZDogIm5hbWUiLAogICAgICAgIGhlYWRlcjogIk5hbWUiLAogICAgICAgIGV4cGFuZGVyOiB0cnVlCiAgICAgIH0pLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9Db2x1bW4sIHsKICAgICAgICBmaWVsZDogInNpemUiLAogICAgICAgIGhlYWRlcjogIlNpemUiCiAgICAgIH0pLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9Db2x1bW4sIHsKICAgICAgICBmaWVsZDogInR5cGUiLAogICAgICAgIGhlYWRlcjogIlR5cGUiCiAgICAgIH0pLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9Db2x1bW4sIHsKICAgICAgICBoZWFkZXJTdHlsZTogIndpZHRoOiA4ZW0iLAogICAgICAgIGhlYWRlckNsYXNzOiAicC10ZXh0LWNlbnRlciIsCiAgICAgICAgYm9keUNsYXNzOiAicC10ZXh0LWNlbnRlciIKICAgICAgfSwgewogICAgICAgIGhlYWRlcjogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICAgICAgcmV0dXJuIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9CdXR0b24sIHsKICAgICAgICAgICAgdHlwZTogImJ1dHRvbiIsCiAgICAgICAgICAgIGljb246ICJwaSBwaS1jb2ciCiAgICAgICAgICB9KV07CiAgICAgICAgfSksCiAgICAgICAgYm9keTogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICAgICAgcmV0dXJuIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9CdXR0b24sIHsKICAgICAgICAgICAgdHlwZTogImJ1dHRvbiIsCiAgICAgICAgICAgIGljb246ICJwaSBwaS1zZWFyY2giLAogICAgICAgICAgICBjbGFzczogInAtYnV0dG9uLXN1Y2Nlc3MiLAogICAgICAgICAgICBzdHlsZTogewogICAgICAgICAgICAgICJtYXJnaW4tcmlnaHQiOiAiLjVlbSIKICAgICAgICAgICAgfQogICAgICAgICAgfSksIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X0J1dHRvbiwgewogICAgICAgICAgICB0eXBlOiAiYnV0dG9uIiwKICAgICAgICAgICAgaWNvbjogInBpIHBpLXBlbmNpbCIsCiAgICAgICAgICAgIGNsYXNzOiAicC1idXR0b24td2FybmluZyIKICAgICAgICAgIH0pXTsKICAgICAgICB9KSwKICAgICAgICBfOiAxCiAgICAgICAgLyogU1RBQkxFICovCgogICAgICB9KV07CiAgICB9KSwKICAgIF86IDEKICAgIC8qIFNUQUJMRSAqLwoKICB9LCA4CiAgLyogUFJPUFMgKi8KICAsIFsidmFsdWUiXSldKV0pLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9BcHBEb2MsIHsKICAgIG5hbWU6ICJUcmVlVGFibGVUZW1wbGF0aW5nRGVtbyIsCiAgICBzb3VyY2VzOiAkZGF0YS5zb3VyY2VzLAogICAgc2VydmljZTogWydOb2RlU2VydmljZSddLAogICAgZGF0YTogWyd0cmVldGFibGVub2RlcyddLAogICAgZ2l0aHViOiAidHJlZXRhYmxlL1RyZWVUYWJsZVRlbXBsYXRpbmdEZW1vLnZ1ZSIKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsic291cmNlcyJdKV0pOwp9"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/treetable/TreeTableTemplatingDemo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>TreeTable <span>Templating</span></h1>\n                <p>Custom content at header, body and footer sections are supported via templating.</p>\n            </div>\n            <AppDemoActions />\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card\">\n                <TreeTable :value=\"nodes\">\n                    <template #header>\n                        FileSystem\n                    </template>\n                    <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                    <Column field=\"size\" header=\"Size\"></Column>\n                    <Column field=\"type\" header=\"Type\"></Column>\n                    <Column headerStyle=\"width: 8em\" headerClass=\"p-text-center\" bodyClass=\"p-text-center\">\n                        <template #header>\n                            <Button type=\"button\" icon=\"pi pi-cog\"></Button>\n                        </template>\n                        <template #body>\n                            <Button type=\"button\" icon=\"pi pi-search\" class=\"p-button-success\" style=\"margin-right: .5em\"></Button>\n                            <Button type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-warning\"></Button>\n                        </template>\n                    </Column>\n                    <template #footer>\n                        <div style=\"text-align:left\">\n                            <Button icon=\"pi pi-refresh\" />\n                        </div>\n                    </template>\n                </TreeTable>\n            </div>\n        </div>\n\n        <AppDoc name=\"TreeTableTemplatingDemo\" :sources=\"sources\" :service=\"['NodeService']\" :data=\"['treetablenodes']\" github=\"treetable/TreeTableTemplatingDemo.vue\" />\n            \n    </div>\n</template>\n\n<script>\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            nodes: null,\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div>\n        <TreeTable :value=\"nodes\">\n            <template #header>\n                FileSystem\n            </template>\n            <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n            <Column field=\"size\" header=\"Size\"></Column>\n            <Column field=\"type\" header=\"Type\"></Column>\n            <Column headerStyle=\"width: 8em\" headerClass=\"p-text-center\" bodyClass=\"p-text-center\">\n                <template #header>\n                    <Button type=\"button\" icon=\"pi pi-cog\"></Button>\n                </template>\n                <template #body>\n                    <Button type=\"button\" icon=\"pi pi-search\" class=\"p-button-success\" style=\"margin-right: .5em\"></Button>\n                    <Button type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-warning\"></Button>\n                </template>\n            </Column>\n            <template #footer>\n                <div style=\"text-align:left\">\n                    <Button icon=\"pi pi-refresh\" />\n                </div>\n            </template>\n        </TreeTable>\n    </div>                  \n</template>\n\n<script>\nimport NodeService from './service/NodeService';\n\nexport default {\n    data() {\n        return {\n            nodes: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeTableNodes().then(data => this.nodes = data);\n    }\n}\n<\\\\/script>\n`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div>\n        <TreeTable :value=\"nodes\">\n            <template #header>\n                FileSystem\n            </template>\n            <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n            <Column field=\"size\" header=\"Size\"></Column>\n            <Column field=\"type\" header=\"Type\"></Column>\n            <Column headerStyle=\"width: 8em\" headerClass=\"p-text-center\" bodyClass=\"p-text-center\">\n                <template #header>\n                    <Button type=\"button\" icon=\"pi pi-cog\"></Button>\n                </template>\n                <template #body>\n                    <Button type=\"button\" icon=\"pi pi-search\" class=\"p-button-success\" style=\"margin-right: .5em\"></Button>\n                    <Button type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-warning\"></Button>\n                </template>\n            </Column>\n            <template #footer>\n                <div style=\"text-align:left\">\n                    <Button icon=\"pi pi-refresh\" />\n                </div>\n            </template>\n        </TreeTable>\n    </div>                  \n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport NodeService from './service/NodeService';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            nodeService.value.getTreeTableNodes().then(data => nodes.value = data);\n        })\n\n        const nodes = ref();\n        const nodeService = ref(new NodeService());\n\n        return { nodes, nodeService }\n    }\n}\n<\\\\/script>\n`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/treetable/treetable.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/column/column.min.js\"><\\\\/script>\n        <script src=\"./NodeService.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <p-treetable :value=\"nodes\">\n                <template #header>\n                    FileSystem\n                </template>\n                <p-column field=\"name\" header=\"Name\" :expander=\"true\"></p-column>\n                <p-column field=\"size\" header=\"Size\"></p-column>\n                <p-column field=\"type\" header=\"Type\"></p-column>\n                <p-column header-style=\"width: 8em\" header-class=\"p-text-center\" body-class=\"p-text-center\">\n                    <template #header>\n                        <p-button type=\"button\" icon=\"pi pi-cog\"></p-button>\n                    </template>\n                    <template #body>\n                        <p-button type=\"button\" icon=\"pi pi-search\" class=\"p-button-success\" style=\"margin-right: .5em\"></p-button>\n                        <p-button type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-warning\"></p-button>\n                    </template>\n                </p-column>\n                <template #footer>\n                    <div style=\"text-align:left\">\n                        <p-button icon=\"pi pi-refresh\"></p-button>\n                    </div>\n                </template>\n            </p-treetable>\n        </div>                  \n\n        <script type=\"module\">\n        const { createApp, ref, onMounted } = Vue;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    nodeService.value.getTreeTableNodes().then(data => nodes.value = data);\n                })\n\n                const nodes = ref();\n                const nodeService = ref(new NodeService());\n\n                return { nodes, nodeService }\n            },\n            components: {\n                \"p-treetable\": primevue.treetable,\n                \"p-column\": primevue.column,\n                \"p-button\": primevue.button\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\\\/script>\n`\n                }\n            }\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeTableNodes().then(data => this.nodes = data);\n    }\n}\n</script>"],"sourceRoot":""}]}