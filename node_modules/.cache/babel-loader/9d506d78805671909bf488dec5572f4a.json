{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/message/MessageDoc.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/message/MessageDoc.vue","mtime":1634589566275},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/message/MessageDoc.vue"],"names":[],"mappings":"AAmQA,eAAe;AACX,EAAA,IADW,kBACJ;AACH,WAAO;AACH,MAAA,OAAO,EAAE;AACL,uBAAe;AACX,UAAA,OAAO,EAAE,oBADE;AAEX,UAAA,OAAO;AAFI,SADV;AAkFL,2BAAmB;AACf,UAAA,OAAO,EAAE,wBADM;AAEf,UAAA,OAAO;AAFQ,SAlFd;AAmKL,0BAAkB;AACd,UAAA,OAAO,EAAE,gBADK;AAEd,UAAA,OAAO,gGAFO;AAGd,UAAA,OAAO;AAHO;AAnKb;AADN,KAAP;AA+PJ;AAjQW,CAAf","sourcesContent":["<template>\n\t<AppDoc name=\"MessageDemo\" :sources=\"sources\" github=\"message/MessageDemo.vue\">\n        <h5>Import</h5>\n<pre v-code.script><code>\nimport Message from 'primevue/message';\n\n</code></pre>\n\n        <h5>Import via CDN</h5>\n<pre v-code><code>\n&lt;script src=\"https://unpkg.com/primevue@^3/core/core.js\"&gt;&lt;/script&gt;\n\n</code></pre>\n\n\t\t<h5>Getting Started</h5>\n\t\t<p>Message component requires a content to display.</p>\n<pre v-code><code>\n&lt;Message&gt;Welcome to PrimeVue&lt;/Message&gt;\n\n</code></pre>\n\n        <p>Multiple messages can be displayed using the standard v-for directive.</p>\n\n<pre v-code><code><template v-pre>\n&lt;Message v-for=\"msg of messages\" :severity=\"msg.severity\" :key=\"msg.content\"&gt;{{msg.content}}&lt;/Message&gt;\n</template>\n</code></pre>\n\n<pre v-code.script><code>\ndata() {\n\treturn {\n\t\tmessages: [\n\t\t\t{severity: 'info', content: 'Dynamic Info Message'},\n\t\t\t{severity: 'success', content: 'Dynamic Success Message'},\n\t\t\t{severity: 'warn', content: 'Dynamic Warning Message'}\n\t\t]\n\t}\n}\n\n</code></pre>\n\n\t\t<h5>Severities</h5>\n\t\t<p>There are four possible values for the severity of a message. Default one is \"info\".</p>\n\n\t\t<ul>\n\t\t\t<li>success</li>\n\t\t\t<li>info</li>\n\t\t\t<li>warn</li>\n\t\t\t<li>error</li>\n\t\t</ul>\n\n\t\t<h5>Closable</h5>\n\t\t<p>Messages are closable by default resulting in a close icon being displayed on top right corner. In order to disable closable messages, set <i>closable</i> to false.</p>\n<pre v-code><code>\n&lt;Message severity=\"success\" :closable=\"false\"&gt;Order Submitted&lt;/Message&gt;\n\n</code></pre>\n\n\t\t<h5>Sticky</h5>\n\t\t<p>Messages are sticky by default, if you require them to be cleared automatically, disable <i>sticky</i> property and optionally configure the <i>life</i> property to specify how long the message\n        should be displayed which is 3000 ms by default.</p>\n<pre v-code><code>\n&lt;Message severity=\"warn\" :life=\"5000\" :sticky=\"false\"&gt;This message will hide in 5 seconds.&lt;/Message&gt;\n\n</code></pre>\n\n\t\t<h5>Inline Message Component</h5>\n<pre v-code.script><code>\nimport InlineMessage from 'primevue/inlinemessage';\n\n</code></pre>\n\n\t\t<p>InlineMessage component is useful in cases where a single message needs to be displayed related to an element such as forms. It has one property, <i>severity</i> of the message.</p>\n<pre v-code><code>\n&lt;InputText placeholder=\"Username\" class=\"p-invalid\" /&gt;\n&lt;InlineMessage&gt;Field is required&lt;/InlineMessage&gt;\n\n</code></pre>\n\n\n\t\t<h5>Properties of Message</h5>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Default</th>\n                        <th>Description</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>severity</td>\n                        <td>string</td>\n                        <td>info</td>\n                        <td>Severity level of the message.</td>\n                    </tr>\n                    <tr>\n                        <td>closable</td>\n                        <td>boolean</td>\n                        <td>true</td>\n                        <td>Whether the message can be closed manually using the close icon.</td>\n                    </tr>\n                    <tr>\n                        <td>sticky</td>\n                        <td>boolean</td>\n                        <td>null</td>\n                        <td>When enabled, message is not removed automatically.</td>\n                    </tr>\n                    <tr>\n                        <td>life</td>\n                        <td>number</td>\n                        <td>3000</td>\n                        <td>Delay in milliseconds to close the message automatically.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n        <h5>Properties of InlineMessage</h5>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Default</th>\n                        <th>Description</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>severity</td>\n                        <td>string</td>\n                        <td>info</td>\n                        <td>Severity level of the message.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n        <h5>Events of Message</h5>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Parameters</th>\n                        <th>Description</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>close</td>\n                        <td>event: Browser event</td>\n                        <td>Callback to invoke when a message is closed.</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n\t\t<h5>Styling</h5>\n\t\t<p>Following is the list of structural style classes, for theming classes visit <router-link to=\"/theming\">theming</router-link> page.</p>\n\n        <strong>Message</strong>\n        <div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Element</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>p-messages</td>\n                        <td>Container element.</td>\n                    </tr>\n                    <tr>\n                        <td>p-messages-info</td>\n                        <td>Container element when displaying info messages.</td>\n                    </tr>\n                    <tr>\n                        <td>p-messages-warn</td>\n                        <td>Container element when displaying warning messages.</td>\n                    </tr>\n                    <tr>\n                        <td>p-messages-error</td>\n                        <td>Container element when displaying error messages.</td>\n                    </tr>\n                    <tr>\n                        <td>p-messages-success</td>\n                        <td>Container element when displaying success messages.</td>\n                    </tr>\n                    <tr>\n                        <td>p-messages-close</td>\n                        <td>Close icon.</td>\n                    </tr>\n                    <tr>\n                        <td>p-messages-icon</td>\n                        <td>Severity icon.</td>\n                    </tr>\n                    <tr>\n                        <td>p-messages-text</td>\n                        <td>Content of a message.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n        <strong>InlineMessage</strong>\n        <div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Element</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>p-inline-message</td>\n                        <td>Container element.</td>\n                    </tr>\n                    <tr>\n                        <td>p-inline-message-info</td>\n                        <td>Container element when displaying info messages.</td>\n                    </tr>\n                    <tr>\n                        <td>p-inline-message-warn</td>\n                        <td>Container element when displaying warning messages.</td>\n                    </tr>\n                    <tr>\n                        <td>p-inline-message-error</td>\n                        <td>Container element when displaying error messages.</td>\n                    </tr>\n                    <tr>\n                        <td>p-inline-message-success</td>\n                        <td>Container element when displaying success messages.</td>\n                    </tr>\n                    <tr>\n                        <td>p-inline-message-icon</td>\n                        <td>Severity icon.</td>\n                    </tr>\n                   <tr>\n                        <td>p-inline-message-text</td>\n                        <td>Content of a message.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Dependencies</h5>\n\t\t<p>None.</p>\n    </AppDoc>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div>\n        <h5>Severities</h5>\n        <Message severity=\"success\">Success Message Content</Message>\n        <Message severity=\"info\">Info Message Content</Message>\n        <Message severity=\"warn\">Warning Message Content</Message>\n        <Message severity=\"error\">Error Message Content</Message>\n\n        <h5>Dynamic</h5>\n        <Button label=\"Show\" @click=\"addMessages()\" />\n        <transition-group name=\"p-message\" tag=\"div\">\n            <Message v-for=\"msg of messages\" :severity=\"msg.severity\" :key=\"msg.id\">{{msg.content}}</Message>\n        </transition-group>\n\n        <h5>Inline Messages</h5>\n        <p>Message component is used to display inline messages mostly within forms.</p>\n        <div class=\"p-grid\">\n            <div class=\"p-col-12 p-md-3\">\n                <InlineMessage severity=\"info\">Message Content</InlineMessage>\n            </div>\n            <div class=\"p-col-12 p-md-3\">\n                <InlineMessage severity=\"success\">Message Content</InlineMessage>\n            </div>\n            <div class=\"p-col-12 p-md-3\">\n                <InlineMessage severity=\"warn\">Message Content</InlineMessage>\n            </div>\n            <div class=\"p-col-12 p-md-3\">\n                <InlineMessage severity=\"error\">Message Content</InlineMessage>\n            </div>\n        </div>\n\n        <h5>Auto Dismiss</h5>\n        <Message severity=\"warn\" :life=\"3000\" :sticky=\"false\">This message will hide in 3 seconds.</Message>\n\n        <h5>Validation Message</h5>\n        <div class=\"p-formgroup-inline\" style=\"margin-bottom:.5rem\">\n            <label for=\"username\" class=\"p-sr-only\">Username</label>\n            <InputText id=\"username\" placeholder=\"Username\" class=\"p-invalid\" />\n            <InlineMessage>Username is required</InlineMessage>\n        </div>\n        <div class=\"p-formgroup-inline\">\n            <label for=\"email\" class=\"p-sr-only\">email</label>\n            <InputText id=\"email\" placeholder=\"Email\" class=\"p-invalid\" />\n            <InlineMessage />\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            messages: [],\n            count: 0\n        }\n    },\n    methods: {\n        addMessages() {\n            this.messages = [\n                {severity: 'info', content: 'Dynamic Info Message', id: this.count++},\n                {severity: 'success', content: 'Dynamic Success Message', id: this.count++},\n                {severity: 'warn', content: 'Dynamic Warning Message', id: this.count++}\n            ]\n        }\n    }\n}\n<\\\\/script>\n\n<style scoped>\nbutton.p-button {\n    margin-right: .5rem;\n}\n\n.p-inputtext {\n    margin-right: .5rem;\n}\n</style>`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div>\n        <h5>Severities</h5>\n        <Message severity=\"success\">Success Message Content</Message>\n        <Message severity=\"info\">Info Message Content</Message>\n        <Message severity=\"warn\">Warning Message Content</Message>\n        <Message severity=\"error\">Error Message Content</Message>\n\n        <h5>Dynamic</h5>\n        <Button label=\"Show\" @click=\"addMessages()\" />\n        <transition-group name=\"p-message\" tag=\"div\">\n            <Message v-for=\"msg of messages\" :severity=\"msg.severity\" :key=\"msg.id\">{{msg.content}}</Message>\n        </transition-group>\n\n        <h5>Inline Messages</h5>\n        <p>Message component is used to display inline messages mostly within forms.</p>\n        <div class=\"p-grid\">\n            <div class=\"p-col-12 p-md-3\">\n                <InlineMessage severity=\"info\">Message Content</InlineMessage>\n            </div>\n            <div class=\"p-col-12 p-md-3\">\n                <InlineMessage severity=\"success\">Message Content</InlineMessage>\n            </div>\n            <div class=\"p-col-12 p-md-3\">\n                <InlineMessage severity=\"warn\">Message Content</InlineMessage>\n            </div>\n            <div class=\"p-col-12 p-md-3\">\n                <InlineMessage severity=\"error\">Message Content</InlineMessage>\n            </div>\n        </div>\n\n        <h5>Auto Dismiss</h5>\n        <Message severity=\"warn\" :life=\"3000\" :sticky=\"false\">This message will hide in 3 seconds.</Message>\n\n        <h5>Validation Message</h5>\n        <div class=\"p-formgroup-inline\" style=\"margin-bottom:.5rem\">\n            <label for=\"username\" class=\"p-sr-only\">Username</label>\n            <InputText id=\"username\" placeholder=\"Username\" class=\"p-invalid\" />\n            <InlineMessage>Username is required</InlineMessage>\n        </div>\n        <div class=\"p-formgroup-inline\">\n            <label for=\"email\" class=\"p-sr-only\">email</label>\n            <InputText id=\"email\" placeholder=\"Email\" class=\"p-invalid\" />\n            <InlineMessage />\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n    setup() {\n        const messages = ref([]);\n        const count = ref(0);\n        const addMessages = () => {\n            messages.value = [\n                {severity: 'info', content: 'Dynamic Info Message', id: count.value++},\n                {severity: 'success', content: 'Dynamic Success Message', id: count.value++},\n                {severity: 'warn', content: 'Dynamic Warning Message', id: count.value++}\n            ]\n        };\n\n        return { messages, count, addMessages }\n    }\n}\n<\\\\/script>\n\n<style scoped>\nbutton.p-button {\n    margin-right: .5rem;\n}\n\n.p-inputtext {\n    margin-right: .5rem;\n}\n</style>`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/inlinemessage/inlinemessage.min.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <h5>Severities</h5>\n            <p-message severity=\"success\">Success Message Content</p-message>\n            <p-message severity=\"info\">Info Message Content</p-message>\n            <p-message severity=\"warn\">Warning Message Content</p-message>\n            <p-message severity=\"error\">Error Message Content</p-message>\n\n            <h5>Dynamic</h5>\n            <p-button label=\"Show\" @click=\"addMessages()\"></p-button>\n            <transition-group name=\"p-message\" tag=\"div\">\n                <p-message v-for=\"msg of messages\" :severity=\"msg.severity\" :key=\"msg.id\">{{msg.content}}</p-message>\n            </transition-group>\n\n            <h5>Inline Messages</h5>\n            <p>Message component is used to display inline messages mostly within forms.</p>\n            <div class=\"p-grid\">\n                <div class=\"p-col-12 p-md-3\">\n                    <p-inlinemessage severity=\"info\">Message Content</p-inlinemessage>\n                </div>\n                <div class=\"p-col-12 p-md-3\">\n                    <p-inlinemessage severity=\"success\">Message Content</p-inlinemessage>\n                </div>\n                <div class=\"p-col-12 p-md-3\">\n                    <p-inlinemessage severity=\"warn\">Message Content</p-inlinemessage>\n                </div>\n                <div class=\"p-col-12 p-md-3\">\n                    <p-inlinemessage severity=\"error\">Message Content</p-inlinemessage>\n                </div>\n            </div>\n\n            <h5>Auto Dismiss</h5>\n            <p-message severity=\"warn\" :life=\"3000\" :sticky=\"false\">This message will hide in 3 seconds.</p-message>\n\n            <h5>Validation Message</h5>\n            <div class=\"p-formgroup-inline\" style=\"margin-bottom:.5rem\">\n                <label for=\"username\" class=\"p-sr-only\">Username</label>\n                <p-inputtext id=\"username\" placeholder=\"Username\" class=\"p-invalid\"></p-inputtext>\n                <p-inlinemessage>Username is required</p-inlinemessage>\n            </div>\n            <div class=\"p-formgroup-inline\">\n                <label for=\"email\" class=\"p-sr-only\">email</label>\n                <p-inputtext id=\"email\" placeholder=\"Email\" class=\"p-invalid\"></p-inputtext>\n                <p-inlinemessage></p-inlinemessage>\n            </div>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref } = Vue;\n\n        const App = {\n            setup() {\n                const messages = ref([]);\n                const count = ref(0);\n                const addMessages = () => {\n                    messages.value = [\n                        {severity: 'info', content: 'Dynamic Info Message', id: count.value++},\n                        {severity: 'success', content: 'Dynamic Success Message', id: count.value++},\n                        {severity: 'warn', content: 'Dynamic Warning Message', id: count.value++}\n                    ]\n                };\n\n                return { messages, count, addMessages }\n            },\n            components: {\n                \"p-message\": primevue.message,\n                \"p-inlinemessage\": primevue.inlinemessage,\n                \"p-button\": primevue.button,\n                \"p-inputtext\": primevue.inputtext\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\\\/script>\n\n        <style>\n        button.p-button {\n            margin-right: .5rem;\n        }\n\n        .p-inputtext {\n            margin-right: .5rem;\n        }\n        </style>`\n                }\n            }\n        }\n    }\n}\n</script>"],"sourceRoot":""}]}