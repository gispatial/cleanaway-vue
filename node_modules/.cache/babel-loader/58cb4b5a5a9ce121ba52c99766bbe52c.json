{"remainingRequest":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/terminal/TerminalDoc.vue?vue&type=template&id=5d2776fa","dependencies":[{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/terminal/TerminalDoc.vue","mtime":1634589566287},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/babel-loader/lib/index.js","mtime":1634585934594},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634585949898},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/cache-loader/dist/cjs.js","mtime":1634585934434},{"path":"/Users/crocslut/Desktop/Git/main-cleanaway-pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1634585949898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/main-cleanaway-pwa/src/views/terminal/TerminalDoc.vue"],"names":[],"mappings":";;8BAEQ,YAAA,CAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,EAAU,CAAA;AAAA;AAAV,C;;8BACW,YAAA,CAIZ,MAJY,EAIZ,IAJY,EAAM,0GAAN,EAInB,CAAA;AAAA;AAJmB,C;;8BAMX,YAAA,CAAuB,IAAvB,EAAuB,IAAvB,EAAI,gBAAJ,EAAkB,CAAA;AAAA;AAAlB,C;;8BACI,YAAA,CAIL,MAJK,EAIL,IAJK,EAAM,8JAAN,EAIZ,CAAA;AAAA;AAJY,C;;8BAMV,YAAA,CAAwB,IAAxB,EAAwB,IAAxB,EAAI,iBAAJ,EAAmB,CAAA;AAAA;AAAnB,C;;8BACA,YAAA,CAEiE,GAFjE,EAEiE,IAFjE,EAEiE,C,8BAF9D,+I,CAE8D,E,aADM,YAAA,CAAc,GAAd,EAAc,IAAd,EAAG,SAAH,CACN,E,8BADoB,6D,CACpB,E,aAA1B,YAAA,CAAe,GAAf,EAAe,IAAf,EAAG,UAAH,CAA0B,E,8BAAX,S,CAAW,CAFjE,E;;AAAA,C;;8BAGU,YAAA,CAGL,MAHK,EAGL,IAHK,EAAM,iFAAN,EAGZ,CAAA;AAAA;AAHY,C;;8BAKO,YAAA,CAsCZ,MAtCY,EAsCZ,IAtCY,EAAM,mkCAAN,EAsCnB,CAAA;AAAA;AAtCmB,C;;8BAwCX,YAAA,CAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,EAAc,CAAA;AAAA;AAAd,C;;+BACA,YAAA,CAAoJ,GAApJ,EAAoJ,IAApJ,EAAG,+IAAH,EAAgJ,CAAA;AAAA;AAAhJ,C;;+BACN,YAAA,CAyBM,KAzBN,EAyBM;AAzBD,EAAA,KAAK,EAAC;AAyBL,CAzBN,EAA6B,C,aAC5B,YAAA,CAuBQ,OAvBR,EAuBQ;AAvBD,EAAA,KAAK,EAAC;AAuBL,CAvBR,EAAwB,C,aACvB,YAAA,CAOQ,OAPR,EAOQ,IAPR,EAOQ,C,aANQ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAIC,E,aAHD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAGC,E,aAFD,YAAA,CAAgB,IAAhB,EAAgB,IAAhB,EAAI,SAAJ,CAEC,E,aADD,YAAA,CAAoB,IAApB,EAAoB,IAApB,EAAI,aAAJ,CACC,CALL,CAMR,CAPR,CADuB,E,aASvB,YAAA,CAaQ,OAbR,EAaQ,IAbR,EAaQ,C,aAZQ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAuB,IAAvB,EAAuB,IAAvB,EAAI,gBAAJ,CAIC,E,aAHD,YAAA,CAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,CAGC,E,aAFD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAEC,E,aADD,YAAA,CAA6C,IAA7C,EAA6C,IAA7C,EAAI,sCAAJ,CACC,CALL,CAYR,E,aANQ,YAAA,CAKK,IALL,EAKK,IALL,EAKK,C,aAJD,YAAA,CAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,CAIC,E,aAHD,YAAA,CAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,CAGC,E,aAFD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAEC,E,aADD,YAAA,CAAsC,IAAtC,EAAsC,IAAtC,EAAI,+BAAJ,CACC,CALL,CAMR,CAbR,CATuB,CAAxB,CAD4B,CAA7B,E;;AAAA,C;;+BA2BA,YAAA,CAAgB,IAAhB,EAAgB,IAAhB,EAAI,SAAJ,EAAW,CAAA;AAAA;AAAX,C;;gDACG,+E;;gDAAwG,S;;gDAAqB,Q;;+BAChI,YAAA,CA+BM,KA/BN,EA+BM;AA/BD,EAAA,KAAK,EAAC;AA+BL,CA/BN,EAA6B,C,aAC5B,YAAA,CA6BQ,OA7BR,EA6BQ;AA7BD,EAAA,KAAK,EAAC;AA6BL,CA7BR,EAAwB,C,aACvB,YAAA,CAKQ,OALR,EAKQ,IALR,EAKQ,C,aAJQ,YAAA,CAGK,IAHL,EAGK,IAHL,EAGK,C,aAFD,YAAA,CAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAEC,E,aADD,YAAA,CAAgB,IAAhB,EAAgB,IAAhB,EAAI,SAAJ,CACC,CAHL,CAIR,CALR,CADuB,E,aAOvB,YAAA,CAqBoB,OArBpB,EAqBoB,IArBpB,EAqBoB,C,aApBH,YAAA,CAGI,IAHJ,EAGI,IAHJ,EAGI,C,aAFD,YAAA,CAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,CAEC,E,aADD,YAAA,CAA2B,IAA3B,EAA2B,IAA3B,EAAI,oBAAJ,CACC,CAHJ,CAoBG,E,aAhBJ,YAAA,CAGK,IAHL,EAGK,IAHL,EAGK,C,aAFD,YAAA,CAA2B,IAA3B,EAA2B,IAA3B,EAAI,oBAAJ,CAEC,E,aADD,YAAA,CAA6B,IAA7B,EAA6B,IAA7B,EAAI,sBAAJ,CACC,CAHL,CAgBI,E,aAZJ,YAAA,CAGK,IAHL,EAGK,IAHL,EAGK,C,aAFD,YAAA,CAA0B,IAA1B,EAA0B,IAA1B,EAAI,mBAAJ,CAEC,E,aADD,YAAA,CAAqB,IAArB,EAAqB,IAArB,EAAI,cAAJ,CACC,CAHL,CAYI,E,aARH,YAAA,CAGI,IAHJ,EAGI,IAHJ,EAGI,C,aAFD,YAAA,CAA4B,IAA5B,EAA4B,IAA5B,EAAI,qBAAJ,CAEC,E,aADD,YAAA,CAA0B,IAA1B,EAA0B,IAA1B,EAAI,mBAAJ,CACC,CAHJ,CAQG,E,aAJJ,YAAA,CAGK,IAHL,EAGK,IAHL,EAGK,C,aAFD,YAAA,CAAyB,IAAzB,EAAyB,IAAzB,EAAI,kBAAJ,CAEC,E,aADD,YAAA,CAAyC,IAAzC,EAAyC,IAAzC,EAAI,kCAAJ,CACC,CAHL,CAII,CArBpB,CAPuB,CAAxB,CAD4B,CAA7B,E;;AAAA,C;;+BAiCA,YAAA,CAAqB,IAArB,EAAqB,IAArB,EAAI,cAAJ,EAAgB,CAAA;AAAA;AAAhB,C;;+BACA,YAAA,CAAY,GAAZ,EAAY,IAAZ,EAAG,OAAH,EAAQ,CAAA;AAAA;AAAR,C;;;;;;;;;uBAjID,YAAA,CAkIY,iBAlIZ,EAkIY;AAlIJ,IAAA,IAAI,EAAC,cAkID;AAlIiB,IAAA,OAAO,EAAE,KAAA,CAAA,OAkI1B;AAlImC,IAAA,MAAM,EAAC;AAkI1C,GAlIZ,E;sBACO;AAAA,aAAe,CAAf,UAAe,E,gBACvB,YAAA,CAIa,KAJb,EAIa,IAJb,EAIa,CAJM,UAIN,CAJb,E;;AAAA,O;gBAAK;UADkB,EAOf,UAPe,E,gBAQvB,YAAA,CAIa,KAJb,EAIa,IAJb,EAIa,CAJD,UAIC,CAJb,E;;AAAA,O,sBARuB,EAcrB,UAdqB,EAerB,UAfqB,E,gBAkBvB,YAAA,CAGa,KAHb,EAGa,IAHb,EAGa,CAHD,UAGC,CAHb,E;;AAAA,O,sBAlBuB,E,gBAuBvB,YAAA,CAsCa,KAtCb,EAsCa,IAtCb,EAsCa,CAtCM,UAsCN,CAtCb,E;;AAAA,O;gBAAK;UAvBkB,EA+Df,UA/De,EAgEf,WAhEe,EAiErB,WAjEqB,EA4FrB,WA5FqB,EA6FrB,YAAA,CAA0I,GAA1I,EAA0I,IAA1I,EAA0I,C,WAAA,EAA1D,YAAA,CAAgD,sBAAhD,EAAgD;AAAnC,QAAA,EAAE,EAAC;AAAgC,OAAhD,EAA0B;0BAAC;AAAA,iBAAO,C,WAAA,CAAP;AAAA,S,CAAD;;;;AAAA,OAA1B,CAA0D,E,WAAA,CAA1I,CA7FqB,EA8FrB,WA9FqB,EA+HrB,WA/HqB,EAgIrB,WAhIqB,CAAf;AAAA,K;;;;GADP,E;;AAAA,I,WAAA,C","sourcesContent":["<template>\n\t<AppDoc name=\"TerminalDemo\" :sources=\"sources\" github=\"terminal/TerminalDemo.vue\" >\n        <h5>Import</h5>\n<pre v-code.script><code>\nimport Terminal from 'primevue/terminal';\nimport TerminalService from 'primevue/terminalservice';\n\n</code></pre>\n\n        <h5>Import via CDN</h5>\n<pre v-code><code>\n&lt;script src=\"https://unpkg.com/primevue@^3/core/core.js\"&gt;&lt;/script&gt;\n&lt;script src=\"https://unpkg.com/primevue@^3/terminal/terminal.min.js\"&gt;&lt;/script&gt;\n\n</code></pre>\n\n\t\t<h5>Getting Started</h5>\n\t\t<p>Commands are processed using an EventBus implementation called TerminalService.\n            Import this service into your component and subscribe to the <i>command</i> event to process the commands by\n                sending replies with the <i>response</i> event.</p>\n<pre v-code><code>\n&lt;Terminal welcomeMessage=\"Welcome to PrimeVue\" prompt=\"primevue $\" /&gt;\n\n</code></pre>\n\n<pre v-code.script><code>\nimport TerminalService from 'primevue/terminalservice';\n\nexport default {\n     methods: {\n        commandHandler(text) {\n            let response;\n            let argsIndex = text.indexOf(' ');\n            let command = argsIndex !== -1 ? text.substring(0, argsIndex) : text;\n\n            switch(command) {\n                case \"date\":\n                    response = 'Today is ' + new Date().toDateString();\n                    break;\n\n                case \"greet\":\n                    response = 'Hola ' + text.substring(argsIndex + 1);\n                    break;\n\n                case \"random\":\n                    response = Math.floor(Math.random() * 100);\n                    break;\n\n                default:\n                    response = \"Unknown command: \" + command;\n            }\n\n            TerminalService.$emit('response', response);\n        }\n    },\n    mounted() {\n        TerminalService.$on('command', this.commandHandler);\n    },\n    beforeUnmount() {\n        TerminalService.$off('command', this.commandHandler);\n    }\n}\n\n</code></pre>\n\n        <h5>Properties</h5>\n        <p>Any property as style and class are passed to the main container element. Following are the additional properties to configure the component.</p>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Default</th>\n                        <th>Description</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                    <tr>\n                        <td>welcomeMessage</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Initial text to display on terminal.</td>\n                    </tr>\n                    <tr>\n                        <td>prompt</td>\n                        <td>string</td>\n                        <td>null</td>\n                        <td>Prompt text for each command.</td>\n                    </tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Styling</h5>\n\t\t<p>Following is the list of structural style classes, for theming classes visit <router-link to=\"/theming\">theming</router-link> page.</p>\n\t\t<div class=\"doc-tablewrapper\">\n\t\t\t<table class=\"doc-table\">\n\t\t\t\t<thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Element</th>\n                    </tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n                     <tr>\n                        <td>p-terminal</td>\n                        <td>Container element.</td>\n                    </tr>\n                    <tr>\n                        <td>p-terminal-content</td>\n                        <td>Content of terminal.</td>\n                    </tr>\n                    <tr>\n                        <td>p-terminal-prompt</td>\n                        <td>Prompt text.</td>\n                    </tr>\n                     <tr>\n                        <td>p-terminal-response</td>\n                        <td>Command response.</td>\n                    </tr>\n                    <tr>\n                        <td>p-terminal-input</td>\n                        <td>Input element to enter commands.</td>\n                    </tr>\n                </tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h5>Dependencies</h5>\n\t\t<p>None.</p>\n    </AppDoc>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div>\n        <p>Enter \"date\" to display the current date, \"greet {0}\" for a message and \"random\" to get a random number.</p>\n        <Terminal welcomeMessage=\"Welcome to PrimeVue\" prompt=\"primevue $\" class=\"dark-demo-terminal\" />\n    </div>\n</template>\n\n<script>\nimport TerminalService from \"primevue/terminalservice\";\n\nexport default {\n    methods: {\n        commandHandler(text) {\n            let response;\n            let argsIndex = text.indexOf(' ');\n            let command = argsIndex !== -1 ? text.substring(0, argsIndex) : text;\n\n            switch(command) {\n                case \"date\":\n                    response = 'Today is ' + new Date().toDateString();\n                    break;\n\n                case \"greet\":\n                    response = 'Hola ' + text.substring(argsIndex + 1);\n                    break;\n\n                case \"random\":\n                    response = Math.floor(Math.random() * 100);\n                    break;\n\n                default:\n                    response = \"Unknown command: \" + command;\n            }\n            \n            TerminalService.emit('response', response);\n        }\n    },\n    mounted() {\n        TerminalService.on('command', this.commandHandler);\n    },\n    beforeUnmount() {\n        TerminalService.off('command', this.commandHandler);\n    }\n}\n<\\\\/script>\n\n<style lang=\"scss\" scoped>\np {\n    margin-top: 0;\n}\n\n::v-deep(.dark-demo-terminal) {\n    background-color: #212121;\n    color: #ffffff;\n\n    .p-terminal-command {\n        color: #80CBC4;\n    }\n\n    .p-terminal-prompt {\n        color: #FFD54F;\n    }\n\n    .p-terminal-response {\n        color: #9FA8DA;\n    }\n}\n</style>`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div>\n        <p>Enter \"date\" to display the current date, \"greet {0}\" for a message and \"random\" to get a random number.</p>\n        <Terminal welcomeMessage=\"Welcome to PrimeVue\" prompt=\"primevue $\" class=\"dark-demo-terminal\" />\n    </div>\n</template>\n\n<script>\nimport { onMounted, onBeforeUnmount } from 'vue';\nimport TerminalService from \"primevue/terminalservice\";\n\nexport default {\n    setup() {\n        onMounted(() => {\n            TerminalService.on('command', commandHandler);\n        })\n\n        onBeforeUnmount(() => {\n            TerminalService.off('command', commandHandler);\n        })\n\n        const commandHandler = (text) => {\n            let response;\n            let argsIndex = text.indexOf(' ');\n            let command = argsIndex !== -1 ? text.substring(0, argsIndex) : text;\n\n            switch(command) {\n                case \"date\":\n                    response = 'Today is ' + new Date().toDateString();\n                    break;\n\n                case \"greet\":\n                    response = 'Hola ' + text.substring(argsIndex + 1);\n                    break;\n\n                case \"random\":\n                    response = Math.floor(Math.random() * 100);\n                    break;\n\n                default:\n                    response = \"Unknown command: \" + command;\n            }\n            \n            TerminalService.emit('response', response);\n        }\n\n        return { commandHandler }\n    }\n}\n<\\\\/script>\n\n<style lang=\"scss\" scoped>\np {\n    margin-top: 0;\n}\n\n::v-deep(.dark-demo-terminal) {\n    background-color: #212121;\n    color: #ffffff;\n\n    .p-terminal-command {\n        color: #80CBC4;\n    }\n\n    .p-terminal-prompt {\n        color: #FFD54F;\n    }\n\n    .p-terminal-response {\n        color: #9FA8DA;\n    }\n}\n</style>`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/terminal/terminal.min.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <p>Enter \"date\" to display the current date, \"greet {0}\" for a message and \"random\" to get a random number.</p>\n            <p-terminal welcome-message=\"Welcome to PrimeVue\" prompt=\"primevue $\" class=\"dark-demo-terminal\"></p-terminal>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, onMounted, onBeforeUnmount } = Vue;\n        const TerminalService = primevue.terminalservice;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    TerminalService.on('command', commandHandler);\n                })\n\n                onBeforeUnmount(() => {\n                    TerminalService.off('command', commandHandler);\n                })\n\n                const commandHandler = (text) => {\n                    let response;\n                    let argsIndex = text.indexOf(' ');\n                    let command = argsIndex !== -1 ? text.substring(0, argsIndex) : text;\n\n                    switch(command) {\n                        case \"date\":\n                            response = 'Today is ' + new Date().toDateString();\n                            break;\n\n                        case \"greet\":\n                            response = 'Hola ' + text.substring(argsIndex + 1);\n                            break;\n\n                        case \"random\":\n                            response = Math.floor(Math.random() * 100);\n                            break;\n\n                        default:\n                            response = \"Unknown command: \" + command;\n                    }\n            \n                    TerminalService.emit('response', response);\n                }\n\n                return { commandHandler }\n            },\n            components: {\n                \"p-terminal\": primevue.terminal\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\\\/script>\n\n        <style>\n        p {\n            margin-top: 0;\n        }\n\n        .dark-demo-terminal {\n            background-color: #212121;\n            color: #ffffff;\n        }\n\n        .dark-demo-terminal .p-terminal-command {\n            color: #80CBC4;\n        }\n\n        .dark-demo-terminal .p-terminal-prompt {\n            color: #FFD54F;\n        }\n\n        .dark-demo-terminal .p-terminal-response {\n            color: #9FA8DA;\n        }\n        </style>\n\n`\n                }\n            }\n        }\n    }\n}\n</script>"],"sourceRoot":""}]}